(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    914205,      18445]
NotebookOptionsPosition[    903452,      18255]
NotebookOutlinePosition[    905467,      18312]
CellTagsIndexPosition[    905216,      18301]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Is the instantaneous Internet real?", "Title",
 CellChangeTimes->{{3.770055572438499*^9, 3.7700555729498453`*^9}, {
   3.770055604008165*^9, 3.7700556066618843`*^9}, {3.770373672636671*^9, 
   3.7703737875292807`*^9}, 3.770786699200371*^9},
 CellTags->"Title",ExpressionUUID->"49ab34ee-bfd5-49f5-beef-400d3cc456dd"],

Cell["Constantine Korikov", "Text",
 CellChangeTimes->{{3.549624168509506*^9, 3.549624171985794*^9}, {
   3.549624508772977*^9, 3.549624510775043*^9}, {3.5498187159613867`*^9, 
   3.5498187170087957`*^9}, {3.549819049020514*^9, 3.5498190533440437`*^9}, {
   3.77005561844785*^9, 3.7700556489651537`*^9}, 
   3.7707867501582117`*^9},ExpressionUUID->"94536f76-3fd2-4bf6-b228-\
fa93ec9acae9"],

Cell[TextData[{
 StyleBox["Spoiler: no.\n\n*",
  FontWeight->"Bold"],
 StyleBox["phrases in ",
  FontSlant->"Italic"],
 Cell[BoxData[
  StyleBox["\<\"\\!\\(\\*StyleBox[\\\"red\\\",FontSlant->\\\"Italic\\\"]\\)\"\
\>",
   StripOnInput->False,
   LineColor->RGBColor[
     Rational[212, 255], 0, 
     Rational[4, 51]],
   FrontFaceColor->RGBColor[
     Rational[212, 255], 0, 
     Rational[4, 51]],
   BackFaceColor->RGBColor[
     Rational[212, 255], 0, 
     Rational[4, 51]],
   GraphicsColor->RGBColor[
     Rational[212, 255], 0, 
     Rational[4, 51]],
   FontColor->RGBColor[
     Rational[212, 255], 0, 
     Rational[4, 51]]]], "Output",
  CellChangeTimes->{{3.7709271286017733`*^9, 3.770927140971765*^9}},
  ExpressionUUID->"3a47f8bd-2839-431d-8fe4-f1d3776407da"],
 StyleBox[" show definitions, while those in ",
  FontSlant->"Italic"],
 Cell[BoxData[
  TemplateBox[{
   "\"\\!\\(\\*StyleBox[\\\"blue\\\",FontSlant->\\\"Italic\\\"]\\)\"",
    "https://en.wikipedia.org/wiki/Blue"},
   "HyperlinkURL"]],ExpressionUUID->"310d92b5-2f5b-4e2f-8539-0d7a0c2a27df"],
 StyleBox[" are links to webpages.",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.77078678100301*^9, 3.7707867831568403`*^9}, 
   3.770786866718073*^9, {3.770924630450588*^9, 3.770924755083666*^9}, {
   3.770925221883675*^9, 3.7709252265416117`*^9}, 3.77092714561432*^9, 
   3.7709272342258987`*^9},ExpressionUUID->"31eb190b-bc49-4bc8-ac91-\
ed0ce768b67f"],

Cell[CellGroupData[{

Cell["Intro", "Section",
 CellChangeTimes->{{3.770786788257421*^9, 
  3.770786792219687*^9}},ExpressionUUID->"bfbf826d-a4b6-4048-b049-\
bf1e13aa9226"],

Cell[TextData[{
 "If we type an ",
 Cell[BoxData[
  TagBox[
   TooltipBox[
    StyleBox["\<\"URL\"\>",
     StripOnInput->False,
     LineColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FrontFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     BackFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     GraphicsColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]]],
    "\"the address of a web page on the world wide web\"",
    TooltipStyle->"TextStyling"],
   Annotation[#, "the address of a web page on the world wide web", 
    "Tooltip"]& ]], "Output",ExpressionUUID->
  "1938ad3d-fdf5-4565-ba12-446eb01abbad"],
 " of any site in our favourite ",
 Cell[BoxData[
  TagBox[
   TooltipBox[
    StyleBox["\<\"web browser\"\>",
     StripOnInput->False,
     LineColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FrontFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     BackFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     GraphicsColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]]],
    "\"a program used to view HTML documents\"",
    TooltipStyle->"TextStyling"],
   Annotation[#, "a program used to view HTML documents", "Tooltip"]& ]], 
  "Output",
  GeneratedCell->False,
  CellAutoOverwrite->False,ExpressionUUID->
  "970440e1-3cf4-4401-8584-5b22ba51b0df"],
 ", we will get there pretty quickly. For instance, getting a response from \
",
 Cell[BoxData[
  TemplateBox[{"\"https://wolfram.com\"","https://wolfram.com"},
   "HyperlinkURL"]], "Output",ExpressionUUID->
  "566750a8-ba0a-4cc6-a957-ef6bf16446ae"],
 " takes the following amount of seconds for the first byte."
}], "Text",
 CellChangeTimes->{{3.7707870835133953`*^9, 3.770787116258485*^9}, {
   3.770787154280788*^9, 3.770787164881934*^9}, {3.770787208703772*^9, 
   3.770787223986783*^9}, 3.770787255486143*^9, {3.770923852189021*^9, 
   3.77092385372857*^9}, {3.770923894739278*^9, 3.77092391017072*^9}, {
   3.770925139638164*^9, 3.7709252036277742`*^9}},
 TextJustification->1,ExpressionUUID->"f36b7fa9-e28c-47f3-b178-2f5663a40abd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"URLResponseTime", "[", "\"\<https://wolfram.com\>\"", "]"}]], "Code",\

 CellLabel->"In[26]:=",ExpressionUUID->"27e63ca3-0f43-4b6e-ad65-27e680b95105"],

Cell[BoxData[
 TemplateBox[{"0.552851`","\"s\"","seconds","\"Seconds\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.770787300438093*^9, 3.770787300876676*^9}, 
   3.770799060888651*^9, {3.770807643981237*^9, 3.770807655080402*^9}, 
   3.77080788831531*^9, 3.770924271320614*^9, 3.770927225898802*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"fc5d0030-5639-4aeb-bc0a-8832912ba119"]
}, Open  ]],

Cell[TextData[{
 "Even though the ",
 Cell[BoxData[
  TagBox[
   TooltipBox[
    StyleBox["\<\"server\"\>",
     StripOnInput->False,
     LineColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FrontFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     BackFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     GraphicsColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]]],
    "\"(computer science) a computer that provides client stations with \
access to files and printers as shared resources to a computer network\"",
    TooltipStyle->"TextStyling"],
   Annotation[#, 
    "(computer science) a computer that provides client stations with access \
to files and printers as shared resources to a computer network", 
    "Tooltip"]& ]], "Output",ExpressionUUID->
  "f75fe7ec-251e-49d9-9b70-795f03b67727"],
 " is located far enough, this response time is not dramatically long."
}], "Text",
 CellChangeTimes->{{3.770787681779233*^9, 3.7707876834628897`*^9}, {
   3.770787843942875*^9, 3.770787852268689*^9}, {3.7707890699632196`*^9, 
   3.770789070106544*^9}, 3.770789939981182*^9},
 TextJustification->1,ExpressionUUID->"351655be-9f18-45c1-a7ee-7bf2320ef285"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A", "=", 
      InterpretationBox[
       DynamicModuleBox[{Typeset`open = False}, 
        TemplateBox[{
         "Expression",StyleBox[
          "\"Server location\"", "IconizedCustomName", StripOnInput -> False],
          GridBox[{{
             RowBox[{
               TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
               TagBox["GeoPosition", "IconizedItem"]}]}, {
             RowBox[{
               TagBox["\"Byte count: \"", "IconizedLabel"], 
               "\[InvisibleSpace]", 
               TagBox["136", "IconizedItem"]}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],Dynamic[
          Typeset`open]},
         "IconizedObject"]],
       GeoPosition[{40.115057, -88.2736523}],
       SelectWithContents->True,
       Selectable->False]}], ",", 
     RowBox[{"B", "=", "Here"}]}], "}"}], ",", 
   RowBox[{"GeoGraphics", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        DynamicModuleBox[{Typeset`open = False}, 
         TemplateBox[{
          "List",StyleBox[
           "\"Arrow\"", "IconizedCustomName", StripOnInput -> False],GridBox[{{
              RowBox[{
                TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
                TagBox["List", "IconizedItem"]}]}, {
              RowBox[{
                TagBox["\"Dimensions: \"", "IconizedLabel"], 
                "\[InvisibleSpace]", 
                TagBox[
                 RowBox[{"{", 
                   RowBox[{"1", ",", "2"}], "}"}], "IconizedItem"]}]}, {
              RowBox[{
                TagBox["\"Byte count: \"", "IconizedLabel"], 
                "\[InvisibleSpace]", 
                TagBox["304", "IconizedItem"]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],Dynamic[
           Typeset`open]},
          "IconizedObject"]],
        {{
          Thickness[Large], 
          Arrow[
           GeoPath[{$CellContext`A, $CellContext`B}]]}},
        SelectWithContents->True,
        Selectable->False], ",", 
       InterpretationBox[
        DynamicModuleBox[{Typeset`open = False}, 
         TemplateBox[{
          "Expression",StyleBox[
           "\"A\"", "IconizedCustomName", StripOnInput -> False],GridBox[{{
              RowBox[{
                TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
                TagBox["GeoMarker", "IconizedItem"]}]}, {
              RowBox[{
                TagBox["\"Byte count: \"", "IconizedLabel"], 
                "\[InvisibleSpace]", 
                TagBox["383800", "IconizedItem"]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],Dynamic[
           Typeset`open]},
          "IconizedObject"]],
        GeoMarker[$CellContext`A, 
         Image[CompressedData["
1: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
hBixs8ANBEGCgiUFQZCIwI22+X82g4dH
          "], "Byte", ColorSpace -> "RGB", 
          Interleaving -> True]],
        SelectWithContents->True,
        Selectable->False], ",", 
       InterpretationBox[
        DynamicModuleBox[{Typeset`open = False}, 
         TemplateBox[{
          "Expression",StyleBox[
           "\"B\"", "IconizedCustomName", StripOnInput -> False],GridBox[{{
              RowBox[{
                TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
                TagBox["GeoMarker", "IconizedItem"]}]}, {
              RowBox[{
                TagBox["\"Byte count: \"", "IconizedLabel"], 
                "\[InvisibleSpace]", 
                TagBox["48", "IconizedItem"]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],Dynamic[
           Typeset`open]},
          "IconizedObject"]],
        GeoMarker[$CellContext`B],
        SelectWithContents->True,
        Selectable->False]}], "}"}], ",", 
     InterpretationBox[
      DynamicModuleBox[{Typeset`open = False}, 
       TemplateBox[{
        "List",StyleBox[
         "\"Options\"", "IconizedCustomName", StripOnInput -> False],GridBox[{{
            RowBox[{
              TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["List", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["2", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Byte count: \"", "IconizedLabel"], 
              "\[InvisibleSpace]", 
              TagBox["312", "IconizedItem"]}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],Dynamic[
         Typeset`open]},
        "IconizedObject"]],
      {GeoBackground -> "ReliefMap", PlotLabel -> 
       "The distance between the server and the current point is 1447.92 \
kilometers"},
      SelectWithContents->True,
      Selectable->False]}], "]"}]}], "]"}]], "Code",
 CellLabel->"In[27]:=",ExpressionUUID->"c94c8433-49a9-4a6e-abc0-8e30d27c5ccb"],

Cell[BoxData[
 GraphicsBox[{{
    TagBox[
     {Texture[
       FormBox[
        GraphicsBox[
         TagBox[
          RasterBox[CompressedData["
1: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
XdyYu6frjnw3v7dLzmFc7JululOsjzXVU/dk141/NROnstgsOuT6O2Hjta/P
YjY5ptj6SM75+uFvym8de3gCJ8SGIjad7LuEj7vO4yPTxropNlW38D7XTH5W
pEgKgX0/YrsRbOyG0dZ9B7PuKRjxwV1zP/vx0Xv/A22Pz6s8pS47PPkYLe1X
NY4KPdeKeey6qfMIreUfYaD7HdS2RxSLsN0E+8wxbGduYm3xFDzLN83jbWr/
LE28CyP2JHbVwT3cP/8N9DS/BFQ70XzzBSTDgmXVdlSiYiO+/RdYtX0sWDSA
iO86Jkfex6L1E3ktWHfQqt9xkL6C9mvfxOrse1ga+uERVh1h1RFWHWHVEVYd
YdXnHqvyuTHN9SlvzSKbncDGxpjm+6WzFsGpBWykFxBP29TPRNrzxxawSRwS
OUwMoSxk/lOy4FHfPPFqI7dqxqncGh+JCV4xtkD/38qGS/BpVf1NHjNG9cvk
Y7weF37OKb+Hkk6s+KexqPGjz0aWUs4V5PeZPxeXa9sSnCLdWRdHUNiLwbo0
jLWoVTEs1YhjfcOhn9uQ82ZuY0Swi3liOaELgxaKMOJT9CHTJ0x/oBWNGu1d
J3bKQ6jtTOh7xc0B9clSf2jU57HfmFe5c4hfs9NXsL4uOFVYkHsUVP+RxdEn
z7NChxGEEk71ARIXd+W3gvKaWGX4IQ09gj6qSEpki9zbz8p39uvGCsWJ7ZDc
Zy9SgscFwQViNX3Q/vwaNmoxpTvfbyJn1Fzcf94/n2BiWHS0sMjktJwLcwOp
Q9AHSNmQF6xiPmBF6aFs5M3Ww7InPsEwj/pr0gXR6zZdglteWWso7QiG7Szj
QGglmxXs8A9idz+gWGL45Tzqu2s0nOqHKeYnNC8wnxtHMjEII3/KioDvEbzr
bdjZtqBSnjV8NgculIozmmOojxWhpb0llVP1+hKKpQXs7ghO7cyobDiQ43e2
5wXnZpEvWhFNiJwUbNosr6qMYHwgU3KLnHBgLWRRHdYTmlO9ddUneBazC2YJ
9qyOKaYHUy7VMawRJxzJVSwJvywk5+EsWdT/58jPGXGq3BQWckYe4Fh4ULFq
0N+LUcEm+gGJUUOCXUMhwS9vj+LXIVY1WRmjasEjwaY2eZ+rRf7WrBhl+gcF
b3QxliSvbxCLZo3FvL2bgkmHeXzEJvUlMg4lWDEUHcaMnN/KnujtwttlkRIG
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
bRuRZsxNn9Xrmuj7EeyW0+jsOIOBwSuwWNtMPhF9ufEApz76GlYXLyEVuoTE
+lk03XoRN278RP0HRp6J6Ni7D5CJXRM77Rry+TkDz7eGVffeLXcjuEb8Fqzc
vKLzPd747h+CttXlk1/DxbPPPeHNwb6PMD3brHx7/OS7sgM55avqQUDrRWn3
09fHnKPDvDejn59H7SSj5jyki7oiH4k1hg6YUJonjROrqCMyXk29yiP8Qzpl
j8+E+l+KSgfkR2Je3bSpqNcTp8i/zP1zha2fCU5xMYdsV86rrnZUQn2clBm0
qficPfQM347h66N+xV4RWzvMpfKgsrOI8o5g0L5h41R2l7HbWNP6lWqDf3ch
mZlDKCoYo3ZQ2Fwrmj9R2BzXHArOX94qzcg+0xe4oPW/5S32FLXB6Ee6rNi1
VZrVXm71ms3EqxWxtaxKE8wjZG/HcKgPi4uP4fGPab3qltjRgdic2k2UTZRJ
lEGseYlyMWdN9tC6Po1/Vb0r8uy/yPnLm4pTOXPuCeV6Tfdv40meo/GvpPvk
C45rD1FjFoJRK0V9obfvktIy81JpV9NX8P9Xb8Z8Ds4pO6z3rZnzmRI6Y7Vm
0jr3TbCmaFP/7LxrUHUyHv9kCb/Rp1cxfQ3kCV4L7Z7DGS7EXto7xjFp9dfR
9qE+aRccNvIHDX+8+gcER/g77CdDfZM+fOqa5FXSOI+jTU0biTVPKbWZ3BoD
IKYS54mdxD/29FsmT4YW4Iy7dB7P8sYiXPFF9d+tbhr1bX7BO+b0sd56WbBo
KeaEM+bS+qmVrGCnfMYun2Hvv/moC0sZD2b8C1jecmn+H2uqmPvH3n+9gkH9
YlcNiR1Fu4i4xbm/U4JFzAUcZH2UuxMtZn0v8/tYq0t/H+f7cjGfgq8HBLPG
NkYxL1jo2rZiuWrHemNF7iLzWMqmnN8zceqwV2cM1W1jNrLBY8Z8Ofr2tL+q
1r1OYSt1A4YtxbyBXpHD15H3n0V89SQWJt9HZ9ubYJ3rVvae2i/0lwz2/MTg
VfmNOze+j/fefwkPhx/BkppAm9hWNyZu6vwR5gGyvurM8FVcm7unM4An0pOa
B+ZILCu90e9q1E6K3ntwX86vCS/+7X/ET97+Cq5f/zEOZ/wG/S2KuaR9r7db
6TKb5jlTHvXj6sdfxs0rz8FhvYn+oZsqCw2duxsfvvdl3Lj2I2Om3sEghrre
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
fCo2/f/C5fM/t2yGDc+ffISLF9/HK6++hLfOv40bglM3Wh+gTLC6brABJXIt
+pe6MbEp/md8WvftvPuW+E71ygPYWPK6nsP75DgSjFoK5oH1rOryE5ZvZrgA
ub+nBs7gWeHr6nNVVFzBxt4cWlry8ODhGTwpvy/rmLF8HNqmUrnd7sv2fYjM
/E383V//B4yPP0dd1Wf4/JP/JstcotxRH7/256qdePbED1FR+Kr1vdpx5ex/
V795yDeMt9/8b7hw5TiGokb7xQ/xNeX6se+jz9WDsr5y1W3plX1mSw2hcaoB
nd521YRm7ZTP57jviFNmfspw1Bg96zmdIeU9ZmohIWsG0XeIUwar1hSLw7Fh
7Y9SbhjNty9oLTnHrcf7lTNVxEb2ULEXacI/9J3M9tD2UatqSbCKOMWDWrgJ
rbn5tP+FPjFtialV0bdY132+kfUqdyK5lsx+j8DUPKa1x+8rrDK9Zfu75MPv
xMpyC0ILTeq7sC6VTI1jZ484ZfTmzWdMYSXRgbDc+x5fG2bk+syFh+Qaj2t8
SmxnjwTrhDn/nfEs6xhcVzOrPafz2MQ2T0jiVPIGU5NV/JBZxlNyqA6T1ff3
TWd+uWbkgptb9yMsOL9EnkjqSnB2W7CSGhLUK/pDxVXkv4pvByz90dxs1bL4
Uz6NnVYlLlnb8qqmu7kmc9jatlt4ZPSXjZ7KnPVc7nnWjVlfHFKs2tuS+zjb
pPZrO10heFSGnfUqrWFxvmY7XSl49UJ/Tsaeob76FBrqxQ5NVmkcF11x6PwU
a0r0c+hn0B8zNaotPeZDPdbcb8Ly7wPY2J5CYoX7YkJnWBZjA8rt6HB3a68s
640b+4vq040KvrBnasTegt7heo3nqF1FXp4BZxfaJzu1f6rTK/e2vx3ts62o
GqlAnWDJEPdD2Ia2QYlV+mvR6KxDM2tKEusUdRfgcuklXHxxGbcEqwp6i7QP
gthB/KmZqdHePsY77K9QfXjljK3X2tFAsg8zuxNaW6BeFOMq9vX9PliVi7Ge
jb8wPYDyt4l7jYKF1PXlI+d/B5Z74Ny2YWbLqTy0GzDcxYyrt1WPirH3hq6x
0QQL6DwZrN4KY39d+Go+qEYxhlq+OChF2HFR4uwyJIldm8+wuVyA4OxNZJYL
ge3nqn0blfgqvfgQY31nFOdcPZy7K9fPoXbVk/uv4Paln8p+klhtJR9Pbwkm
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
9rPDML0VzAFac+FZxlethpd28xnCzivo5WwUtamyjwUK7mO88QPBnIfoeP6G
8uTtZZ4Z3UXO/e4/w/O8X6G05AP528wn9qBBOWupRViJxrJ3cfL4j1BefgUN
9ZytNTx6BQ9ex8mzHyGwE8FIbAj3C67irfdewRWxy2+ceRNdsS44dmwYWxqH
My1xgfZArFvnPoGO5rO4n/eJ5sFHOk9aOc027Kaf4eSnP5TvI2uwUoeiR2/h
xtXX4VfdvU05lx8LuhE/NhSXQr67OH/+bbg9TRZOjWNjvQfXrryBwqIvMTDe
oPOf1CnpF3+subMcHf018B44MeQfwfjcsOLrlvgR5Ah8Vnods4ERiQWHdOaK
emv0ncn15wyOqk4b/diZVS+eNpeib7ETFQNV6tM9l/3B3qObDXc053dNcOpm
2wNcqLqBz0rO44NHXxxh1RFWHWHVEVYdYdURVn3vsYoc2dRWVF43xSu39mub
+ZmQ4hZzgEYXJKB9w+T8Y72ZPRXsV2cv5nZ2WjUxAgvdynXBOJ12kHk11jFY
j3FKDNg/0QL7d6UF/DsHc2LMAyonkaxhUr5Paieg/ErkskhkjD48vyf5Dvmd
teci7TnsuaD9PrD01DcPghaW+PSR35UH+9o5h0WNdfJTMY+qeslbHqzveGV9
bJiPjitGsHdiTfsTjAaI4bP3HPoMK6pf7LUwZVqv0aL4FMQr/R7sU+che8Av
2OSOu+BPeVTPl7nBBc5OZUxfOjn+WKOKy+dFrdwxa2/sNdnWvuBl7UMnPwX7
9nnksMn0UhjOihxWrSq+zmnOkJgVFYwkH9506NupWc1l5pSfhT5SrlfenKNg
6I5f71XWqzjLtydYtUOs0hzgtOo07+4arNrLmroVNYLNnBSxqVd5mahxvxTr
kN/7kGR/RawX/mCvcjWSh4T57eSaQ2u01POlH8Z+I9ZiqcVMfnzmSHuG6tHq
6EaV3HMP5R47wqn/L05VzdSgI9KBQVnnPsGqHrFV/Uvdmv+b2hjDRGoE9syI
avDNyLXzit8xmw4gsBnE4tY8YrJneZ+yVksNbPp23H/hpVGdEwkEWrC83Ivp
6SqkVnswPvpIrmsXjAZMN8LzpTCaMHYY/ophZDflPYvPkVh8gsHuLxENFqpm
vXPkPFor30Pdszex7LuJzz74AapK38PWSjGwZTTr6wpewesv/xkWI636uesJ
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
mbD3jRz7N5vzUCnXw6dzEdAaQ10LuTT2Nd+2KedLDGZ+sfnJq9CZsP1SvLj7
S3jtl3H62N9if6sa50/8ENHAPVw4+xO4fW0oeHxVfWz2DZw+d4x3jvX5KcXW
iRFySy1Z9aoWNFV/hFt3PsfEdIfqBty8dx7nLp3QmSjb/BgaR5rR5uxRneIG
VxUqeus0X8tZr15Zc1tgVO0oc5y0ncSv2uYS3HmWh/KRp6r7/Gz0GUrle9eK
v5XfVYCLZVdwT7A6v68YV2pv4kPBp+IxL567FlEw7MaDgRnk9U3rDDA1eznX
Q50H2qdcvUr7JHXeKqRzwotJp1Xbnhd/U+7nfc4iMY8aQjTWq7xCM94O7XU3
PddexSnaL86JDk51/FF6Kn73YI9FgHrt1NFampK4xKW9CQtWvLEiuLK2G7Dq
Vz5r3spwBtJW0V4Sx4kj5BBctXoU2AtBv5s1JsaofCROaay2ZmI14gFrHIyj
wvJ3czaQGGH6K8zMAGemczPBXM+oxbfEGlNQznsuQQ7AWVOv4vyUxFM+izuJ
HH/EKR45nj9yKK2yH30vqP33O1Y8RaxizEx+cJ4Pz4N1Kq1ZCU6w74M+GG3z
1/sq6IeYfgcTUxFbie3E33H2o/4br01Oo5hxYWhTPlc+f8PCKtYKeV7EKu7J
9WxA63/KY5X1qEaY0V+eFbyaUS2rTGZMtZm3t8bVz2T/xNr6hOCTTfkao8tj
Og+oMwWrDvm+0/roDQ5pTcq7MKiavlwD7meD23NaQy4TH/OW+O43qq4jv9PU
hzkj9O+JmajdXSVxT627Tm18Dp96FJM60EmsEryhfae96BJ73yPYNST2fSw1
qL0Jrh0bZvfsrEBIbDKtx8yWC/a1MYywViSv75AYh9oLLYJbTb4GSy+oBpVi
f17IeeS0pMqnqhTPGiU+aw226NEWlPfK+zvlfIibPKdm+fcqifc4H5WL99rl
efag9wsejaaH9NxsEk8xdmK/dhd1b+V7Eb/6ib+Cufw+fK5XPrvD0sUlhk3I
6yfl/CeWZrTeTb/MKRjlik9jYG4c7RK3DMpntLha0Olt1/k2d5q2aU/tcCTW
r76jS7CMszPMeWg8dMAemyETZ+ljE/bST3Set6X8XXQ1HNNa0FDLp9pzsRK8
i7WFu/AMn8Gx93+A9uYLeHDvTfWFyKNHbv7PP/slhsaodzVuxVwelBQf13uH
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
/S1i7rTgKPOdvqxP55emllyKpVuHPEAr1jGN5cSQpXfkVTxg7/rORiOi4Qo8
vP8B6utvWjm8LuykX2Bu5pbgVBm6Gz7Bpx/+DSbG8hSL0vFifPbpT7VGtqI6
tBnNqa3GHmve7p03/gpvv/eK7I2I8rl9eeM0rldeU91b2u6n9grtU4/KPeqe
H9KaD3Xqma87yOmZZKsRmr6G3/78T9RvI5Y0P30dX5z4kfZRLC9xRsopMHQf
/U3HcO3iz1FbcxULkX6EosPKG+Hd9aqdYQ+K29uiGgKGy6MXc+77aKg5ibOn
X1aO13FbOV6U39JeiebBOjSNt2FW7Ap73gcFp14IrjzpK1Z/xiV+y4Pqh4JZ
Tq2tUWt0Xe5ZamwUNjxBSV8RquzleNT5CHda7yvH39myKzhVegmXcnxKjfdw
9tlFfHjvhPz7EMo9CZTOxFBkC+DewCxu982oT8/7jTx99Jlpd7ateRZjkxat
3i/DqaPcoTqTFFCcM/1YYo/Tcr/HRmStByVOm1C/M0I+o1XTu8b7eGy66zvR
q/qmB7GKcZXRbpdHYkTKrdq77Jmj3WdPn+lByFgzRNPaY5E61MsIay2L9lxj
ILFlJlaZUR8gV4siTuW4aVkXNH6BiWF1PitjYi/658SoIHHKmqXiXMmS+DIJ
zltt+ax+w3nLzze9iuw14LVYTs9qbEjs4OwYeYhNf0jE4rsy82O0+dT2ZW9H
xur53FXd5KiVb57Tv8HrTl4s2u+cJvB61rw3YeFtrjeE50ENp5n5YczGpr7R
+ic4x0V91Oz8YW2Ua8naF78nZ5b3dN4rbPgHDwxHDbGWevbx1JRiTu6gdgt1
adKbTu3nC0b6jD6LxFHEsuWVceWtXE45NJ6Ky3vCglPzMZuue9TShWZNg/U7
1qxy/M2sFwbFB1tMmWti+kVdeu/ErL5Rvi7E+HfV9OhwTwUZ+1JTW75rQGJH
R8qFMbHXw2KnpwWXFsReyJWRb0S1cvEV5P9VWi5iifgDS7LuEfFvVMNFsIU/
z6c4O+fX3pkAuYO1f8Zt7WOPchsH+fflXKkjs2D5OGE5fOwflcPPGqfco/Qr
yHk2vTwDR3wGLvHjutwDavsZJ05vTimGOSQmm4i7MLFsx7hgvT0tMdLqBOwp
ic8yElslRxVv2BcxZuEPcWqE/R1xwT7WrASfRpf7dA6UMZx732E0jxLjGJB4
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
4eTfxL01y7kIWQ6F8iiYY1I9Yd8VTr277t/ln+gvMf9EnKK9Us3hxMJVXfSy
zDXruZdVy9GvtRSsWzA8G9Mj5VzXH6tav3OpdndJe8udaO9c4tm8avqy3zHr
S9inweXvl/t2FLP+PjiWZuTONbwA8lbO1Fc7Vl/jXLbF2jOekzPbM4bX6qVi
wI45H3INEPunxb46dhyYjk9iKj6GidgQBpa64DyewtyZS64y5hlNDTq3fyr7
urXntM9dss1FXeP3DpRZP2pPezrzGAJzBfB6ymF6QHlhelaNoqvlW6xGizE2
/EaPe321AYsR6vZNWR8rrH93NH+nOLUTb5HPNMH0BRnHbqwaqlckz5eCmXBN
p2HWUYLmzhKtDR11dSvnynfkU55Gl2DTi6xnyrUnF751tguOI1mfnq3AK2uL
3qAcrxwTMX3c0Yn6vlo0e+tQ76pB01wDKh2Vqrv4XPyRpw2vUCeY5TyZwsBi
F/zUChNc5tp2V84H1xnKhToLq+08XMvEqusRvvno9xCauIvztbf47Bf/J8a6
rmO4+wZy036G+urruLyYwlB/qmrb3X/8DYIwsQXyKmi3s/Me6XqYWopcY19c
UE9pDF5nNnKyv0VTW45eW1xPHJ2Y/m3DY1UwfeFXUS1+Zbrs+2sZ6R0ZRldr
oVn7ObOenNpYtTMVqJPXiVeZgluv2tPxqjMTb+TvtO4s3Kl8hq8L7uNv7n6o
fIpCRxSFzhXkTkUUp9LHAsiZXUW+J4asKcGssbDag6jgJTGF9yzX3Kfalz14
1a+J+EsbyLUP73nqnm4mzP3LnNtceEy/x+8T6/yRCattF1QeAu0H+wqSx8Gc
pv9HFgckVjHWt5jUeqAfSL6J2DvWNzG2Q1uxLevVhMasgmpXkzaf1xMxwMSm
FnW9e6K4FFWdW977yfhq0hZuWY3aJFfF1Fwv6/fOLQYZLFv8Rz5SUjfE+BHL
V7p8ZnuLlv+wYvDOcv3eYd+KrpV3jmSNLX7N4UUERmuMj/L82KHaI7y/Dw6m
lIOwFp+GN9Cv963RUjfnlce8aevDuQalv8x6U8bCOPzib7IOaNnWWHP+lsmN
I9dy29T6kGfJe3rT6i5yXpVzJ3NOXKGfuXWwYHmQYTtfEfV5TB3gqtWGX7zi
DypHYj9wVcvGe3QziU8xl/pQXFvwOuXfW7omM75/cg7pMxKbNzW+E5Rrd9bo
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
1tW+r622WNs+gonhJ2DehBw54xO4jB1X36MGQx3fwjX5GLHlPFwe1yEwV4z0
N7+W8z6qmnjd/WXqm6oGQGIehp/RgqK8X6tvUl34oWJIY81X+OiD/0vu6yDG
R7P197tab+P0ZFLX/tXVz3RNMzDejOHJVgQSQVZl6X6PT9agpasc4bNV+MSP
5/3k9rVqvm1oiP2dgoot2xvlgrMNgoVl6Ot+gsvzMVyc9llsqVd8OTuoQWXJ
p4opc6639r1GhAS//O5UtDfdwryv2G7TidVwurx2HWfHA6o3a/yFdt3WxmIW
1haLdF7Yl1DfO6mB6WMvmHZahuPNbLRWfYqupq/gc6XjMNEDwwNpw3IoBzVV
92D+xcTPasSBHN/p6bSeh7GRDORkX8ew+OSVrImlve7OVn/jdukjVM83CXb4
qcqMA8WlZO5O/KqHf2n3tQ5ff/n/wPjPDXj98M+xf+yGc+Amvr32RxgaeIuB
wSKEIt3wuotRVXEfI+LrODwd6BGf7nnhK6RVpyKl6hkmDsbVjk076tU3Hhyt
xdBEq9bT0QYYLo3x0y8uTQ5xY6MPfX3ZyM57rHXN7Y4eNPsbVY+2ylGJ8plK
VLtrtQ44R84luRMv29LxVDArtTtLsSmPPUXlc2niSz4R7HpQ8wIPao1vldSw
/bb0MW7I80fy3Xvy2k/vfYzciQDKQwco9W0iz7GI7Omo4hRjTsc2rmU0khbU
/0nyAA3HeUHjgkcXsn7fmtbev1ybJe3tqva9nb/iV7OOmFhFH4RcQeIU17Ie
+Y57xfHbxyg7WJPJvkEad6IeTdyt9+0aeWJWb4h+M3txkUdm+A2m7pn8EvVH
TyK6tto9mldcMboTQasfELJzZHL7SZ9ItVBt3DUZ21J9IO3J6L96z9hpw3Ux
HESfahybnozeq5rXLdtri34D7frhZdRg1YFX+zSxP+jukfjJ8SmNu1CTYjXu
UM2AjR2X/K6cv12PauZzDad9qIKjGgP0r0zDK5jllzVJUt/XLTaf6w1y2ZST
bW0tsZ/4RY624lfcarDG567wSzWDiGtWzzVi+4dRJ5i1ruRZsFY42ZuLx/qu
lten16YrNIrJhWFMhCdVR1t76snvJYc7yalLDsbvvv/aptEqpyYS+X0L4jOy
zpt97iYjU/q53xRGGZySOThZZNb7e5oUQJJbRl5xwF9gcYoYMY7B7luKLcf7
HTAxrkFjZ8U32Y6kwT3+QPvZrkfSMdz3AF1tj1Fb90rX/7Mu+lEHsi7vQ2f7
K/0dXkeH2+Xobr2h29qIvEWV4FXG20+xf8i42azFwQ5kvf0ATQ1PEV4Z055L
9PvYc7m4PA3D/mGENVaYwGK0GS0tb8S/qtSewtTd6OkvscfHY1lSXNyKdWJj
tQ7RUBka6h5b32hasXc1ajBlZ7MM/T1P7PFO6b5shlLhHH8I9/RzeGYz0d3x
xOLJEBxjj1Bc8AWM/+lQjFkMFSnG9XfexuVpp+JWQfav7JyyL1QxLg9LsRpM
w8VBuWK+u/8Gxju/hfIb2Bf4sgpvX/4E313/G7X19Idm5LfOjjos3sua4bwL
z578HAXFz1E7Wq89nHIFRx6ITU4RH6NrrUfOgk+sSEy2sWFtigtr0RzlRnBf
Oqt/ja7mb/R3b3/2H3Hti7/AxdkIOqs+QVfd5yjTWKVHj6+k+D7eZj/VntZj
04349uZnquFePFaMFsGX2eMpPUeM5bHfI/tpsS8ba7oPzxcQXh6Wc7KK/RO/
PMq6caUHvkAP6lvydLsd4y2oG2zUXs6VU2Xay7qZtc3OauTLceULFufJ4+uO
TK35TRH/6lF9Cl7KI/HpkeCT6ivVmce78hp1K6izlCIYTk2LO/LaT27/Cq87
J/Cqewb5rjU873Hi1fCC6le8x6r3WPUeq95j1Xuseo9VP3asYvzIxP8YY4hr
bjlxGtQYIHvUM5a0fxYyMaRjH1Zj5ChPq+4KY1u0JZrf3vFpTTFjYabvOfta
uTVPTZxaVl05sRULg/D+iHgV7F8VY/xd9i8s+8tYVNz2TdD+ujbmRp4+8eLM
XlecL+IXc/AXlk9MO793whiVicURP46xpPki6lExbriZ8F7F7pJYxDhUUr9N
+QS7PqtJa3JQxCDTKzdssGXPgy2N93n0HG0TrxI+E2M8JA4uaLxm59Bn++W6
lSOzd+TB5vaMnMNpwSunaoRyX/kd5iWpg8Y6CupnegIjyiuYX5lSG04eOnEl
tDOnOSrvhsdq283948G435Zf8cln44LmtTmt9aAeq/Zdsr2XWDNratsMn516
Qsk6gSRvJNnfgzqMM4Kf7O06GZ1W3niyNulfE2/jI2ugZpYdmNLtObQu6p/b
5veP8d8ap1hDFT2MaI9k5o/ObT8Pw6kwNox5qYuTHoNHl+R3j+J4txi9bdfV
LtP+MgeDC8bLqnEUy0Vw9gmCrudix19gYuQF2ppZpzOB3Z1ei4ET2AiloSj3
I8xMF2mudXt7ECMD5H73YzFYpJo9OCP+9SkuhmceIeh5ifJisYVpn+k6h3k0
5rWmJwuQnnFTtYvZk4uc6NhaDfp6UlFb+0rrNSY3JtE+WKc6uiZXJesaT7Ee
4+Z6O/b3+i2ujNnjknHRjKVgrhzDK3hcxdY+j8rrNdhaycJ6+A3igsmstaos
u2lxrhvlRZ8oP4DPE/FSDA+8RpJXUVv5reI7MbCmgn/7FcuqSz+B0VySYz6Q
tcFZOTYXUuAdvg3mr+pLP0Ze5gf47ru/1Xi64YWM6744Bu/I52t0u7GVYsGq
v8ODR5+jtqsCxeyPIRh1u+gBnndloW6+CTOHE/AwN35m8i/sQ1xfexeFBXcQ
2xpHwJeLGtmf+FoV/vanv2cxuBFTvd+hruRj1Fawn9UIttey5Xxcw/bOKFbX
h1Fam42v7n2FOncNarz1GN8fN+sS7GFTttvZVw53eFR7fZn6ZdmHVZ7fNa1h
OWcfkvkWTDnqMTDWhKLyt+iY7UXddLnWNZeMFKFOcKqIWrzTFRoLrHRUIasv
V/E4T3CLMb9nmptK1fFE/n4qj9SqvVH6GLdsH6tvZD5+/ujXyOh3IL3fiddd
08gaDyBzLIC0QR/SxkJIn1nB2+kV9auoZ019Sq4R2N8vvi9re7Gp9KeOLyOy
HvdprmpX1umHZ3M4OvNheWNCtdDI76P2xaatYaEmgKkFWtY6zGSPdtV1E5tK
W+hd+fHUAocPw2ojqDnJflVx1SgPGo06ajvYXnVGU27B1ioZ3Tr6WadqVw4V
52N7LmwfELddRsv2hHyTedUHZt5v/zykawD6RkmfKPlbhvNmOG1J/VriEGt3
yY9gnnD/NKD1UVv7XsWX7UO/Dp4b+kT8rJ6nI7/4VPPa3506wsQg1a7bnJXn
TvGnZvX8chvxBPXeHboeY36KuVjq81LfjXXbwQ2n6tyxToqYQq4fNcINF+6f
waqkPY/5rvhySX+LPmwSr65yV8QpGdRcW9oXbGa9k9WdN7p9LkRjLu2lNB4Y
VU22H4aH5/sX4N6/5DP/E/h0JPeWXj8xew0dw2iNr+n9qHrh6nuEFKMuz7qx
sliDg71WnB51i49Qjt6upzC1ScNmza/1SNUCcwVi026gv/06ZsZfYqD3hWCc
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
Le9vLGZgevQhWuq/Nn6Z+FhY4XFVwdH2JWqLP0JFwYfIy/oYLbVfoEz83PGu
62jMlXOxmoan3/5n/Nf//L/hespXeCL2+pbY4lzxLQpklIuP476YlVXNqt53
cbEdXFPu6zUURX62nKPperUj5EybOfQJftaio/k2drY69Vrrbn8In8zdzEwF
UtO+Q0r6Q3wjPlW6+HGM+32b/h1eCxYQG4rFx6n1NWB0b1TsWALre7K+VQ7g
rsa8qFnjCQxbDe2gxss0funogH8/IrbDqf3reiZb0RVqRaP4TQPip9UL9uYJ
7lBnnX0XGXvMF9zSemCP6YncsNCMSva4Giq40rR92fpG/SnGBulTUXuJvRmv
iW9FfiB9q1L3CopdKygRrCqdi6NkLv4eq95j1Xuseo9V77HqPVb96LGK/Ana
422LMxyM9fE12uw9a6+NHu2Sxrlot6NrE8oTIA/dExjSfgIaOxSbzXjg0qbL
cjXcilMc7E3EOppFGey/4V9zaJ/Z3wROBRPiZ8uxLrFHEjH5LKK5Osb5TM3v
isb7+JxzwTig4VPsaj8h4g05JEm9JNXs3TfavMRoxlF57MznEZ/IBef7yTij
9qxn7e++V/npmmcS3GFPauamiFH7x+TFL+ACAcEoN45PnRoX2T+cxfaePB65
tC/onuawXIpX+yfUqJ1VzvpceFj5pzxX5Niz5o0aL4z3EV/JXWfMj+cgKucl
JOeI90vA4pTf9qD32fgf43RJLb+gje2FLFaFLVax79Qaexiz99cmcc+lfHf2
sWc91vfzUb+Lg/G+pZMluRbiNi5DXSTy0A+tHWH+Xs7TbpvaY5wbPSLGmEyc
zmjxzI4+QGQhGx7HW5g8ldihizbsbdXD72E+gnEt75UdjXpfYKqfWMBcTqeJ
U2kNbyVyXv0El0e1cE29wOz4YxzuVGKw9ylO9huVS838TMBF/nU1ZvsEmw6L
cRR9De/gTRwvpqKv/jMo1+C4xHAC4hk4ibzERMsXOF9JA9beoKvm15ibuI+x
7u+wHMrG5kop5lwZON5vFbtPrkIfRgdZgxzG1loJEls1Gqc6SVSqLc3M+Aqz
nhbTq22X+O3G1Hi6vueYytbHUKAW83MV2NzoREtbjq5pyb32+FqxtD6Orr4S
eBd6YeJS03au1zE9VSTnI6LPyZEvLriGq5oANKhWb3y9Eu0tT7C5Tr2mZpi4
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
WKn62THmUoPhX7wjv/sC50Fhla8QJ+6nWOj6DsHlu2j88F9xFHwr+/oGLsmP
1MM1+k7Xt3aFidndV3pMw71XrTxqQN5TCV4+Yy+ycPpsWOeFkGHUlAz13cHm
WinOT2c0X+zruo1dXzfiMXrPdqCx4ZH8DXlgs7VgeSnfx7uldYRIqAOry5XC
lW7tC84eSb55Oo5sZggnmW7loWPjg+Rcg5K3tiEda1MNXTxsdIKIvNce34aP
v0Vbw3fY2S4V9j2yztc4DqPdcG+34UiuCT1bFXBv1WBvpwqrC69gXyuS12zS
3t7BnuvobL2ic0Yaaq6o3i8W7cXcQhP6+9/j6z/8BV6+fYiq9nI8qbqPa2+u
on65Ho0Ltbo+NRebxEO5v2ShDmPhEfRtd6FlpQEjwSH5xgWVS5xPV1b1TGMQ
v5vZownUNrDvOKF5Z/xQ/vY361Fddfdivu26YwBDE60YGG9E02w9nlRLjhsY
RFn/R8njCnFb8pqrwor7Ha9QNF6mvbjUAGaFObPCm6HZTjhOHBgVTg06hmA7
XsPSvsQGiSEDc91one5GrXCoi/662QWdyTi7NoCBlSEsx5ZQM9CIfk83quQ5
tzhD8f11VG8EhCeHaPUmUCuM6dhN4xc5hu8/3ESb3Ncu/6bnX55j7f4j3JD8
6YGwnL1WnJVyW/5N7SC37+SzZJ+Vzg0RTnFjPD6Tv0uySmcdhZaULdxUWxZe
Uz5xI4sYt7W2JIxiX+y+FQ/pGR60YiR7XvP5Sp4NrFVxTqZjb0nrfh76G7Cv
lB6nB8bf4P+vHpDX0AFhTJzztYS79KPlXCrOmzUe6Pt6LIxRzImoVWT9jPcz
tyR/mJ/wftb3+O+Q5ffKXJJsIBd4f17fz/0Y/eOO5lL8DKKaXzo010rmPPp9
VK+JjF1906kBzEkMPJXrderQU0er2uN7KIwKhqcQidP/bxm7wRls+yaxuT1h
+nmpTwmvWnVVhx4T81wek15XqEehmUWc35RVcckDOT+MvvjUqsu5sO0tY9W/
/O/Gqfy8qv8RfFJ9opz73aycewS0z+BMz2m+xpew8qRDqx/D+D8y1+UMtmPV
WoVhtBOSBx9wjX9PY0X2aEr1WcyvtuxVCO11WrnWqFynM7dYQSY5gEiwSVjV
qfMIWdcyM6BarDynTXKlh5ovnKWqNM9aW3iMfM3v+LAMmcMK4LhJGZBLVCC6
UwTv6iPjs35Sh8x+MQ53XiPpL0LGL7ee58gIP0ZavsFRuFj1e8wrkr7X6Kmn
B0OteoPHfEX6u+eSa8wPXMFppBine0XKoJynAN3lv8X2zE2Mtn2r9ULWvHxr
j3Qmk2PpEbySs717/teor/4eFaXfSY700eRUuU5s215jfOiR8KPP4kC/lV82
aG5W8ea/amzfDw2htaUAxxL3jo/n5POcwOamvO/jRfSPNuj312j2t9RfcHW1
ER6vfA6nazg9mbXyWjN/6ijejOWFd4jsd+LsZBje7XrVZB4l+2H86dtw6HmJ
jDC6rOhvMT9xB7H9aiSiDXrOvFulsG1IjrdYqf32B4czkvv1Sq7crec2nehH
NNSE2sof4XNXaO6756uV3K8EG2vVmJmtRSI5j+a2t/jhly9QMvAO/bZB2DLy
dy15Oq/h6yTnGJU8Zkz4QY6UL9Wj19uDTnubMitEr1G9bjrBxFSdagf5/TyR
+7v7qb9Jah6fTE6rPyL16fUNBVjeHFTtHntr1oUxnf01aBlpwlvJSbp3+nDn
zV08pBdE7SP1M3/YXYTi6Sp0yWP74EzZFbTP9mLWs4AV3wJGfH1as2xeb8Ji
agbzrmkMbI6gargSz2Q/7a5OrJ4sYiexhSnHBBZ9S5h0zaJYXq9O3lPZRBlu
ld7Gj5I7NVp1vibLM73Ln0Eb+SSPdYdyuC85FH1rrwqrmGtx7mKT5FvUXFCH
cUX4xXrh1ZpHqq+gzp33NbkO0OqJo/WSVZesumTVJasuWXXJqv8JWGV6idza
+0qPbq7J0xedenP26HBOCDllZrObXqnA4br27HDmUb5nJ5x2qoZCnydxkTUn
7pfrQqxN6UzaqJlBoT0+9JETLngPrF5Uqw/1v5VRvowHEWEH6z1R4RO3E6uu
xxhl5pmYeiS5pT1Vwh7yl/1irKGZ9bgt7fE9tPyWWPvkbGM+n7U+1gpPLT92
sslo03csPYVZ2zK6CvooutRXnT6A+/E1nQmjrJL8+/h8y3ipC6PiKWFTfEH4
tKLeMpwJ7N9fkHMxo3U//UzZRx1e1eNl3Y+b6dX2aH2Sx8m6q85pSZt1wwtO
HRr/P2rWt0PLsAWWdDYzZ378u9b+/jvXEVk7d6e24c+4EZVrB6M5p07iWM/5
sdZVojpvhazntQW/Dzn2KpyxD4FzXDjDhnEyILFrTeNiKjVjantcLzifQSTU
qbXALUeDdf8SznMjltZ6FsfpPomp4xLz2oUR1Fnz9/t0TcVtL0I8Uo9IoBI4
a1MN9eZyofDMeAUGnIVIRUuVM571p+rzx5oh+6FigfdIB99p7Ff2UHOeKZOw
9hGHzqfYnruDsOuF9vrSx+94n/qMZgRW7sMzf0f3ieMK0z+VKtWZFqwdUkdB
j/CdmRsYb/oSgaW7WB3+Vdeo5oevY6DjJ5wka5STtoWHWJ4VrqarkKPOAqbO
pz1fR1Xy+APke5ry8+CR+oDB+i9w5dv/QzjWK+9pSHjer2tRmfQETnMLcG93
YGm1Xc/HaW7OzKiV69reXurbfRb7eO1A36lFnJ9OI3E4gIW5YqSTo/B5GoR9
s9jzt8G/y2Pa0HORCclnFinRz7Ki+HdYnH2GyF4djhLyWuf92gNs3yjD4nwp
EgmeJ5ewM6+VZ+13QtjXIdcltdrnHdytV+9GejXNTJfqjJOh4TJ8rGCd7hT5
uu1Azz2d5fHr6yuomq3Wnt+V+CKeSLxlP27VQi1abG3y7dqQ6BGzeJTEi6Lb
ElMiyirOUDL9EgGsrNTD7uiEfXsINvckNpxD6jlFvRq94YYmmvHq3UO8bC7A
x5GPaNhswS8vfsIT1tIsXfgDYQNnAzvAWU8HmFjux/zOAmZCE6gaLUGrMOp5
yzN0eXuxLkzq3mzDoLsbb4UrJeOlaJTriXFh7qRcL8/4FzHrX0Jxa6m+Xqlw
6pHw7IvH36qmonH7QNelONeDnGItsMOX0nWqp/3v1JuQx0X+sDbYKM+jlp08
+7HsLr77cFP7sL61eqfpz8RZWC/lZ/owsW7IeUzqr5qWa9OdWfWKYj61a828
yG9cr6eHoWd/Rdc73PI4OUNdX4j+DCcejYnbwSWd2cf79q15Vc7defVMCMt1
vlsedwZXNJ/aSbrgosaCsyrY02PNS3fSg+7fyLGonfBInAoceXQOfZQ9uKc+
ax4X1yRT+neQ70+mNpH+eOpPdmy8JXbkvTAPMT1lNvWaIKvCSUsjknZZsz72
LN7t6XNN35TXYoXZuM9/of/TeVM2HJ15dN780alT536cSdzL5ja1f5D+E/sH
88KmWfWf4Kx6b3BBe/10Phb1ewm7lU/ZNA80a4hrSBx7zHFIrI5oPuhSVoWT
xj+Xmh/txeacKsm7eK3gpAcjP2/q/7hGaM2ft0X/51mvYv7mSm7rmuThud/y
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
t84x8gqrwvLcYNysWzG+f65N46avF7err+yOzkSyZqSTUbJRf8EcLiDxOCg8
oe8s16ZO9Zo6BtMrE1F9TD5uUyPH2M5aL/MTrqvTj5DrZYzxppfBaMLIgzyn
mH/xZ/rRsieYvWfcDI92rN7ffSs3tF30+5KX+3Gjf9D1qyOn+qhz/iE3+qrT
DzB4sKi9VfSe2Isuy2dOr1n5+wuatSkeJ72E8/POyClqXKjF9Gpv15rlJ2Jm
O/LYzPu16/EErDVFsoo9Vfycd/U6w8yoZz6s8xF1Br2Zieg+NNzappfIgcll
8/ms7TNmfa7xy/sCMsehN4jtX+HZv+fmiBmN35kyCZpLRZJcCz+2ciifxrJI
eFDZEo+NCq/msbpSA7+wqn+oXHvS+H1hDswYcS7XzQeHszrHkvHKtzso9zE+
7SGV5HrUhsbMI82nyKhVnJ/L9ff5AjLpSSsWk4mjcu0tcf5sTOIi150k1p70
YNdN/kxJDtaAbKJJe4H7u2/AeN7NILxLn70qnQdldAkdOAy8s/jUob23yik0
qvaPLAk4nmOGsxKzdap1MJ52teqfPtz8NTpqvkJH0/fql8e1oNaG78y+UxVo
rfkDkqEPSERq4Fh9qrkR18kme4Qrp3XYEe5l5LWpGdyzP8Ngx0/qe7u1+ABT
ow8w0HNH8ot+HCWYPw0pq/achZqrOdckP7O/xFCPNQ9SNRbCqWwFXt//M+1x
Gh+6C992CeYm7sPrfA/76nNMjtyBmcs1oPMo+X63ZF+c0c7ZTH7/APaCY3rd
x+tph3dG/gZWkD6xa95zptcWTisHMj3ZFSXfWJzpQPGb36vuhTpF/04TkvEh
fd7aSgX2Ar3Y2Gi2eCd/S8kJ5E7mcXw0hWCA64ke3Z9tvUTP9fjIc1y58reo
qC2SHH0QH5pLML+zCLtco4655jC2N4h55h4ni5gPLmPcM4mvbv2j+jew14pz
5Vs2WzC8PyJXWX79Fh+de1Hb/AG+411U1j7H2GwnGiRPGt4bQs9QHbaP/Whs
K8GobUKO0C551SjaR5thyy1hMbKIRy/v4m75XdQKT+rYe+zq0h6ukpGPKBor
RZXkSXWchzhUjOalegwHBrF1bpN35sKYewrTwQmdl9ggOR/90enp92a0BCWy
rxrmgbK/ATkHy6kZVIx+RP2yPFd41UY2Cs+etDzDz++u4YeS26qlaJTcqIt9
U01yvzCmJ3iC7z7cwu8KflC/CnoDUodR7wyrBoOMom6QnKKnBdl2RThVaxM2
cZa9Iyw/B9EoTGuSjRp15k6qE1M+GT9ueqK7rXmIWxHJkSSGJ1Xr7dMeYJd/
HhvCqlX/EjbDm9p/SS+KzaBcw8ecWAtwHc9jciFqx61+4XyfLDfmWOqxEDNa
Ql/czJgllwLKJ+OLzjkevKU3+sGRC0aHnFR+5OtfZAz1euQU8yhyw3jIr+lr
kJN5jd6xpZXg3BM+hxpAsoobcynmVlmrv3c/YXyL+FrMv/gY9XbqP3+6o5yK
pmz6OTJnM17sW+pRmxBexdLr6qfE+l8ksS7M2lBNIOt91D6QoeYYN1SLqrla
2nXBKdb7fOpJu6GMzPcYG/8r4w+Vr9NyYy5FTu1b8x4595caGF/M1G33WFOU
9+zjnMS4mevLTed8WDkuZ3zY1L/2k9+S7bPNbtX/qG9RTv03zFK0RU3f7nbC
BXdiSzlps7joFDYpM7XeJ5/HuR9GN2U4RbZ4fcP6PaDPtFkXl+uoLDmwJHFn
DLHDMbjdPXBt96Krr0w9humbxM8wq7mVcP5gFv7gpPIpejCpfiGGe3YsLZZp
bpVODuP8dApGD72gWzLWi7xujPVA1pUYz06zQ5pLOTbe4/R4VDlxetSlemlq
0cw1+pzOCnFuvIPxuzC+tqwFpsMfcRIrw7Fs50eGR4Gtl9h1vcKhsMvneIG5
ccb3HsMC1CHpeYGhtu81p1mavKMzFnddRcKfDj0O1h9PU9WwLz6yfndcNRP0
tMhGPqCh/J+EX1Vag1RunNYgJvscaf9B8qiPePn874XBTTA+RlPmOZwRIsdt
W3xojiUln1XsI6qK/0Hf89mR8OykFmfRD6h683fCya+QOmyS16lDeI91QMln
joUTxw0W13r1/ZwFXmFz8qZcD9SiueS3eh5iO6/R0/KDnl/vDnPRBE5ON6xc
KGBxitcrk5rP2ewdeo5Ki/4OwwNPtX7n9zXJe2jVnlpyjP211GHYbfU4OprX
2dyh8KTFpyVs2esuWNXceAv74Qncv/+VepDPLLRgcLodh7kd2CT+kVcdwoTx
4BAWJR9yybVSn60br9oK8fs7X+D1RLl8Y1M4ufDqN/8xdnQN1KFruB6hs4Ds
uwfFZc9R1l2JFTmmxul6uCTnf1f5EhOhYX5DMbnQjYr2Mq0z8nN4/vouigeL
USev/1hyqT5hUYPkVZzTS6/aucMJNAhX3shzPkhuNxkd1zrgvNw/LcyclGMe
lzypfa0RD+uf6JzeN8I4zmZsF04xJ1tKz6JXcqr3kkPRo4IsK5D39rDhqeov
OP/jgbDp+4+31WeiW3KjjkBWudTpzyhzGoVHZBH15/y5fjOonGLdj3qMrsCR
6gL5nJp14bMjz7KIzglmLzFZeMmqS1ZdsuqSVZesumTVnzqr6A9HTuxJTKau
3COxcVt9kNaUPfSL80v8Zu2UMZK9pBuSi6/75rEmnFoXNnEunyvlxqpvAQu7
y7DFt1UDEc751OcmZs2CYg+m6UUy8zK0vpZ2WR6CW5b2e1t1Cmbm+7auA3FL
CBNyVv2Ra01mLWdDa3ysl+VnIJJRrIVRV8CN8Zv3R6z6H78jXOdh/Y/7olZd
51Ad76hn0pH6MPku/A2pEScPWfvL9/uq/kLrgztaZ9P6onx+PO7EybbqKhJZ
p9Yu6PtHHUUwuqRei9x2I8taQ9Weau1fs2kPW167wfolfa0448O8l3V9nTyr
+LkcWBqKC06R+exv4xoV+cp+LKuW62d/XFIYnjKzu/ysyZJdwkYyjF7C+XUs
ZZX2ubHfzbDqU/3PZm2faS/+xXP+rXqe8Em+Gz65tgmw302+C2G+H3nfabkO
Mr6x+3o9we8L32vmYsYPORVCJjOLuflGGL3xNkz9R65FDkeRTEwhGhnVeV8n
J0uYkL/RwfEm1dCYHjuXzrw85VpfYhH2rT65f1fX9BOJKd1X9mQNg0MlVjyc
RzoxqP60Zj1sUmJZhTInER+B19OGPa0Zbar/D+P51Ngzffww0okdTwP2g12I
Rztl68B5bhipmMUn2fxurl914zhRjfRBOY7jFQj73iKXqBRe1avu4ixdi/h+
CaKBj+q1p7E+Vw3X4gMMdv4sbHqt/nUR9yu4Nwo07gddL+C2v7RmEI6j8t3f
w/TptmNl4hYG5PemRu7Bsf4eZsYHa3tNsM/fV+/biqK/RXvT9xajjdbjOFEj
z39jfHlPOq1jaVQNR13lV7h9868shnfD63yDydGHaG+5jvdFX6ivr+nLsjQl
ZN55g/4+j50efjvrj4GjCiz2/YTSt2RVJ17c/X9x/de/BGt9He1PVI/Ea9Iz
vabY1+NzO0vx8eNNNLaXWPzqwpM7fybXES36nhMHcns+Cv9OHbJH49j19cGx
1QObowfbnkH9Di2tdmh/yN7+DObna7WP4eRkHnW1t1Fb9xQjU63aO94qLGFN
fkPiX+d0F9qWGtEnsXwqPKr9tAsHU2hZqsPjmoc6j4O9S2YtnaurTl3LZpyh
lo16H5tnWr0qV71zKKl8ga65XtjOV9C3PoTurQ68EAaRGc4jn/ZDtvRVy7fV
CW/GizuPrmjt7p2wqHi6Em1yHB/63+l8eZt8LmOuGYx6h1A9U4nS+Rr0cc6H
HCfX19o2W3SNjRysHi/F665Xpv43V43alQa0ONpVc/Gm9416DD5qLMBDaybW
U+ET9eQFPW9wX+7//u01fFX0KxqES9RHkDFkDnuC620h9Ulq8ySEQfv6nKYt
09/L/it6MXHNirPru/eO8WvtY9VkUL/O39f6ID2ayCrOPpKYRUY5JTa6hFPb
OgNxRfMj8oZ9ReSUY2cGm7sLWN1dxPLuEpYld1rYXcFSaBPOlBfz7lms7EuO
dezXvqeQ5FRBaioyLuOVl2G+YXxtqVPIrxFFkmaGY97nNd+zdJBxWeszLuXT
qa4VbakvIR/Pe+JGrBmQzKd0zUZit1/ztU2N3+ELDwnvBau4xsXX1/m+Gbfx
oDgL6PeIc43JL/YG8++CbFWtBf1uqWvQ4zdxlP+mFiWfY+V1f0enLu2lisZX
sBOcVe0EZ19xzSlwYI6b62mmt9eux0IGMi8kg1VHETFzlfettae8LoTxlvcz
X+T++F79ZJLsi/pK9vzSV55zmMmlII+Rnw//FuXz5H285SwrnzVTjMxiTuv5
jFk6Wyz6Kd/J51ROyw/Wy01yImphXDGj3/xcY6E5kjx3J+NRn2ayif3aKfn8
Yxafkqde9eQ7UTbt6jUAzzM1LdyojzlXVsX0O3As19DsnZ6b47V9xIpNazg/
W8R+qF+uk5n7bGnPqW+nB20d71TfyvOXs1i1n9jUfSYzq+pxnc5xXT4o+1gW
1k0gI/vga/CaPZtdEoZN4jQ3a3Knk0kkDntMfnI+jNzRIDKSe+VO5Bx725BK
DKlvnOHaAs6y3TD+FKPmd3h73qn+pzp3MVSus3ZPknU42JNcJ8G+3xbNoahl
I29S0WrE9qtwkmqw4n0DPMIk+9IjnHOd57xO85O9jcewzd7FQeA9+jpvoLPt
1gU7uuu+Qnib++zHu8K/sfzxFgz3hBdr03cR3CmVXKdF9RpjPVfw7sVv5OcR
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
E/7bo37BRu+nOVfSfsH0PBPI+qjlEfyJ9/aLnrVw/jb/82dbfuZi8LMcLJLZ
utCuqC7Tek31KyH3+XyyVd5vXNf5/Mp6k5MaX2LVn1jXCvz805rrmL9xrguS
+Xx+/vqAa4FcH8x7AR9rvhP6jFNJvUZOZTeEd1w738DyUjXGJ6s0zyLb6Pub
TEsudb6lnGHsOz6eRy63iLTEBZ9vAFvuQSxv9Ep+uqS5VFLOTVjeGz/DPZ3J
avpLA4Eh5d1+eBzRg2lE4iuq0UwdOy1W7eD4aFxYuGDFwxmYHqJRJA7aNAYe
hCTXOSBPlqzHhnU2sMlrhnCW7UJkj37gzYiGmtXvgr6AnLlkNBZ91i3jZodq
Ane3XuLsqEFzH8fcPZwkKrEyfQ8Lk3et5zVhuvdnlLz7B12X2tupsfIek0vR
y4J9VSfBtwhuvTD7PWtHbeX3KH73HepqbqsOxfTCLhh2CA+HO39SXvo8jdhx
Fau+Y378luo9cNaD/r4XePXyW+FSKXr6S1Fd/wLuwIJe121uDaGtp1K/S/S/
sbmEfVONePv+jvx7xjpX20glp+FzFeFd4W9Q9OLv8erF15gcf40nj36Hx4/+
ER8/XEV11S10tj8RNg1JvjyMw4NRzEyX4dnLm3hZ+tzymzmxrlVGVA9i1t54
Huo1X4u5X2Cm7xcY3ciQfmbsYRsfvIHluefIHfVrD3dwtxHLiyXymvfw4Ok1
bIbWLAYmtIe4qPix6jZGJMcadAzDfr5Kt2vJouISZ5zy/aV24lTnK5j/kmjt
fK99vmUjH3WW4OrxomoEx7dm0TLXpLMKx4V3zJv25bvI3tapxW7VKVGf1jrf
jPbVRs29ZoRpzcKp580FqJ6vRQHXkSQH+Vn4wn4lzlQkb9hDe6P2MX4tv4cf
y+7gB3mcHnzfF9/EN2+u4jt5Lv32mLvQC/ZLYVLpvEvYEEKlMIjrRqqLEBbx
Pur6Kld2UL7kQdmi2SpWhFMbQVSumts6RxQ1m0HJq4LCp0PhUVRzq3rngf6b
bKoVjvG5tXI/f661h9Hqy6AreKK6wNqNAKrX/Mo9bjpfkXOEvQm00GeQGgvZ
lB0Si3ZVE2ZqQ6oTo/ab+oITr7JEtRHUM0g8Yl+pXc4nZ59vRDaFU4ZRnHHI
+g/X/dzJbbjipp83kHJpjYmb1qQSJpZGrTpePtfSPlbOh5cYv8057BK7qUnk
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
xruIheiMavsal+rVY69Ann9b8idq9W7XPsI3r6/gi8KfUCv8qVr3C3+CpqfW
6rHV3Ma6JZeocWB/U70V/1uEM7y/ai2gORM5wzm99InlTMR+YQ57crVvV3jW
KbkO+5maLS0ft2ZPQn4vpcxr82XQGz5Dd/AEJXNONMv+jXYiqkypFAZWM3cS
xpFdhlXkmbnlc1q8KeVWreZM+xds/MS5fc3NGj7jIzfVg8l1vY9aALnGp3ZB
PU7p/8r5uNZMD61pcWYfn3vImtym+h2ozp06ZdncceOPzv5Qzj2mJzv9knzM
H+KWj4+VN7Hf2Ks+Pw7d8rkTddPcwurLZLyZQklLt631Q5tuEYtZqgWIb+q6
edSahXtx/WzF7n0rR8jHaaNV37bm+LolJ1rTnMfo1Q6USbyf8Z5/L/n5ifwc
8h6xnHdoPDNcqo0gf4zGzcxg5P7jVtwnB9lXbP7t0h5DagH/eV6U96zNszZf
4zPv59Nt/vE8l7iZXgC3lTua3oCExVqjtzO6cKO9D1z4x3+ufTSaSK/FWDMX
hTw50zka+5/VPR1W77bRMXL/rOUZvwm/zj8+SG3gMG1D/MipXvNkF2ulnJtC
b19+l8xMTMMq1uJYzzvXOtuGsiFztIhkag67/lGEovM6i+9MtRumNkit+rlc
y5/k1nB6tiE50qLGMsagRGoR+9FZ9bU/0ZxIriFixjuYurG45GTM33bDi7LP
Hb0+TslrrdmY+4SUVbzuP9M4yeNZRSTcJ9fkk8hrKFLxQe39PT2ZkDA2obo/
ass6Wu+pLpG/k0qY3AznczCawgWTT3GefbZXZ/l5XMKh8ykrnxL+nHUor5KR
SqzMP0fAW4lMvAXRYL3kbz3W71MHL8/LVSDufIrm8t+jvf4bDHTfQlXZN+jp
uI2NlWLV4JV+/Fk+G+rgGPd5HG3qwf74/n9BTeWvWJj9AJezDqPDRVhaKEd4
fxC9kgd8rCjU75lhBHlDRm8K/17A6E4W9XOoKLuGl6+vo3+kVv8eppd7sRRe
197VobURDCz0oXeqHavbU9qPUd3wVucezCz3698E6wvme+DR/SbTy6iue6F1
5CM515y/caaM8mteSp+Ktpa7mJ16rfqU00wDnGvP9POgBgVHtar3i/vforb0
n3Dlpz9DUdE11eZxVveGrUOvT5bWe1FW/Qrvywtl/8YHmzNRa5uL0dZfg0Xf
IoJyfIxZp+rnv69zRHa83WhtfYHymlcYm+3CpHw/k8LgZduYelb0bfaic6YH
D8rvoFI4dKv0Du60v9SZ8DMHE+pxNCbfrZ7NdlSMleBFx0u8HSrGg/onuF5+
F9++uaq+5NTdlS+5VXtAPyLmUA35XIks0t7biG5kU70jonyi3psMaRHG0COC
+nDmTvSFGJJTyTm8nHXYJPukH4T25gqv6ClLTTk9Jdqsub70SdLH5d98TeZe
7OvN52lN5IkwjPqKatkq14No8qZV50e+kEmGNYY7zKuox9C6obCq2tJa1HCz
8TainNJaImuPykBTV7xk1SWrLll1yapLVl2y6k+dVezNCVjecd7omtb3uFbE
3iiuNQUZ17OuCy8hsiFgefeQQazb7VhzJlSbTt9Za6PXLDWd7NVhzc9r9Zdy
BgW1HH7uX2I6tfJhMoX65896VE0PkFlP+1yLvW/xio9FLQ9c/bel5c7H8jy3
9uO2iznzpl5o1q7yc+dZy2JsNhrqkK7HHFj1QjN761OvF3XlrOfFst4Lv1uN
15Y2W+cjJp16H/9u6e3HdStTG9y+6KnK19yUm0efGPPPa4Cf8+pzDYWyyvq3
rkEd5d+f8OnEMNnMnPTrcX0+g0v9pCytiGHUzh/1Qas3osUqxhByin27pg7p
UJ1+xNp4Hx/jWsKJxBLW79indCisohdiThjBft6cxny3xiLW7SLCDc5KMesX
u9jfH8XxSV7L0Ku3XH+KRMaxF5pA+JD9T5taHzLaZzuSEjdyp6vCpkWrNkSm
rCORmNZ6D31pU8c2jXGMdYHgBNInDo05fr9wJruuPks85nM5Ls4FYe9WXDjH
OuHGJjXpAY3x9P6LRoRLql1fxVF6BNnMBHLHk1bMnlc9xbajAitL5TiIDBim
KoPys6/Ir1HgdAhHyQ7Eo+3Y26Uv7Dgu+n+oFchSV9EL2/IT9b09P+5AJpZ/
3phhFNdqzquw2PM9ih7/J7x5+VvU11yFbb0SXncTbBvlunbmsFXB56Vme8s6
hk4szT5BR8t1rC0Xw+g7OuFxvMVg/zNUVj9FS2cFtgOLWLP3W9cTrPc5DQMw
gOXpe9axtGBj8TEWpp8og6fGnmJiohwj023qsbWR2IYn7YFPrs/Wduaxfijf
H/n+8RqPehpvcFl7vvm3SYb1jzahtuk9OofqMTjRbPExYl07eA1nzxdwGG6G
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
VuXJabbLiuf9cC48wPbGM7g23+gse7MORt19u3Kqo/S3uPbTf8CD+7/H4HA5
hsZqde0w7ztldNmzyoBYpBG5o26Yntsh5dTJYRnqKr7Avdt/g2++/3v1JeqZ
7sTK7hJc8S04DuzCA2olTE8tNRKr7mlsBRa03kvPNHq4mjpfzmLjnnWugvD7
WixW8rvVa712l/ZFT4/ewczkK+z52+HSOWJb+hm5bO/x/u13qiMvryrAx/IC
7VPmfMT6lo8YXxmwjicMb3ARU2uDeCExelG4RB3Zvhzvthzf+j6vh/JzEdM4
lmOwuYZ0HhLX4VbsYzpfvn24Abdf3MWvRb+icqkOVXM1+OXVL/ju9RX1d6Xn
0Z2W53gzWYGX9OQbeI/nwgZ68LHu95vbX6BKmMCeqFZPzHAofKa1urbdjLKJ
eocWa84T15vuCl9ejZXigzDvw3QVikZL8HrkI14OfcDT3jd4JK/zoOMVrtc9
1vUoaihYW2xQz9g4uvdP8aTvLa7KY79U3FP9RrkcQ9WyR2d60FO2xuKT9uCS
U8JP9gOzJ4tsIU/IIa3fKY8iypvKjX3lTwUZxsdZFxTe6Ca84sbnla/t6X3s
O678/HGHeTxfO6xzxZRztc7Di1rg/8fee303ll5Znn/NrDXPM2vN00zP6i7b
6lKVqnu61F1VUqtKVZJSqpRSUnqf4TMyMrw3ZBhGBMkIMsigC3rvQQeQICxh
CZAgQe/dnrPP910QzKp61wNjrbuAAGEuLoDvd885++yjnm6rQa3LOJxRrcWS
0e4llSdmVi97g6nNY75ZezsXjXcq2cXHqc+56gk9iEocRU6lrKd3gn4UtqeK
nOL3gyxM6qxa20clnCJrpu0MJtUlyvc6blnHfUpZjwqnruVwK6fH0L/5NPbK
bny3x8jMneL67HjWOn2t6/spO08rYrwkZtyq1zM1LsOYXD8WZ07Je3BYRk7x
/3pd2GI0DamcX7vGUTvOjMlE7rUPGWWZJZf0yzPMOBojOXUtcz2S24x/vNH6
OfxhPGRixelcD5XTF+XoFM39Te1uzuoYHc9ex0+CvVLUYVHXx3iHHnnUN6zI
Ok7Nwr7VbdE/grUp9jjt7HGT/8t11qWoj8gIF9QPVtfBAIKBajsfKopQqFb5
sbUl69i6S/0n2J9rYrSg8mx9y4vsoktngsE+x/KKMHBzRDV/zqzFzQ0n9pHn
WO21vhZ8TES40of9vUFsrPcilW5XbwEylOvj5sYQZmY6dB+XVkcwFWlBJN4h
x0D4viH7P9dlfTHGrGZiTJ6nS/1ss/PNwl7Hj9WDmVS9xFecc2V8A0P+YqSm
38A9Vmr33Wcvu5QF2+tNWFlqRTL2SvWAm6tkHb1W2+HoBui74B+9hLLij1Bf
e0a9MFgvWpgttc/TKEyqsFyrQnfTl+hqOS0xmPFlNTOEy9W/4sXDX+Gdt7+P
s2d/I++zSY5/DRZWHX/EJcvHLswkyxALP4NroEBi0EY9fmRmNHAXp0/8BL97
72f49Mvfo7y2SOcO8ve7hmn9Pi6yNizfrdCsB67okJ4DQ7Wkzmssq15HgiE5
H6EWk4zN6muHJgvVC9J8pv0SD9Zjc6kEEd8N9HZcxNDAPd2P3Y0avCg5qf14
Xe3X8ODBCdy8ew4j3nZ4Al2aB9G604xLa0v8x/OItp4qPHt5F5UdlULIKPoD
PZg6iOo5LX1MuU+M76hbJa+CkXb0DtUro3qH36C5vxaVXdW4Ixz6quCk+sI+
GSzB8+EXuPCC/rBXhFOXcIpzdqtv4pow6rxcvymXp4Vh7wvb2JdEj9YmYcc3
wpYLEgedrriGc3L/S8Kba80FeND3HI+ESbclBrrRWog73UU6T5F8uiyP+Vbu
yx6sr+Vx9EHna5KNV8kseb6vOXNKY6arOPXysvr/nSy/ov6Ab337nnr+Fbvj
Es8lUSKMUm8In2EU9RIvtUcrq7q9YsZV7mnlEtmirPKSR3N2k+vyN8OtrN7m
cKbE3u7wq1j/P3e4BZdyj9PYinGW39StlFOhJft6s5pXYi7N9NgGc9xRXR01
edS/Me5RTbnZyCNq15PWs5u6DHKFHhTk07SdM5yy/OBt9EuKqU/SpHJKvbtX
D3WAM5yvKzxzHj9tvb4dPjlaizmrY3d0foyrcnoM536r1pt1PZjzZSWrqD93
vIGcdf8wbolYHfqE9vcyn+es/ybemtZ8IeMP3m9G9RPhnA87N8OGw/s78Qxf
y7mP8VVPqqaB93c09MvKp1gu3lJu5JjmzCeJ2utRqwsxbDmMozI2lpq2+57M
zYBctp4UC1YjwzXFyTMa36NIjqHk3a76KU0b71855yarOJOQjNrcC1hdX0w1
5ju7Hhj/oSnlxP7eiK7J1JurBnmlB9PTjVjbdKsuMJlsgcmlBbXflFxb35pQ
XTU1wSvCMfYAr2yMY3FlVGIkOX+Z6cHWflDnV24LC6lP5/x6wzW/xmX0ZKdO
jHHGTKrB6sZtL+mBS/XjU+Equw5O6D7ubA+o9n1uvlt17NQFzi0MSXwYUNYm
M8PyOUzZ+3uFS/U27yjs3XEpp0yu06evu7PVq2vu0mKLzhn2+yoxMlKKZLrX
xg8hXYPj0QpsCu/Wlxt1FsfBbhd2Ntvg+OKaWKpD2dPffgqNtSewt9mAdJxz
Q1wwXrTUR1RicUZu26lVri3NPsJI/yX1czePl/2LXEfPm09w79Yv8M35t1FS
cl7W7Xadezvpq4XR+SX1dYcG78PjLkXQX4b1tV6srxhtBj/fseG7KCo6g+LS
K/acYEhnMVODwu/knnz3+LuhJs4dd6mneGQzrn4Bq6oRnVMd7bZ666ft687A
8byfHH+IN3XX7b5MmNfdr0BT/TnZpxL5+xNl+qT3JdrbH+LevS8x6G7SPuVB
d7P25vO1o+kxPX/j8/Pzm54fVX+Yz0+8i25vJybjg6hqeYmudKvOeV/Bon7P
+Y9r4YZ6J48Lpzq0J5jPMy3PQ509Y6rHLQ9woeQC7gh/ioZK0Sefs2d9EPfq
7+CM3E5O0a/8rPDkjsQ8jLNOlV7Eh8K2f7n8oWrAyabLTQ9wjwzqe6Zz48t9
VSjiXN7xCryUjc9/ueYmzldel3jpls7puNpwF7eEXbdbzazDb8gk4dHXwqnL
DfdwXp6XswpPyz7Qy5be6b+58an6MHFGL/lEj3R6xTKGIovUT9Zqx9Vf1j9v
NBTkBvlC3yWJo5Q1lkUaR3Hjdcua3N8sq3j5zDJNGcW4ycZS+nfhT0V8A08k
ZnvuX9C/ldj4y2wOv8x2zKpjVh2z6phVx6w6ZtUfOqvoCcL6zsJG6LDX1Pbz
GBZYLUOeFx9ZQm8/hxdaL7Jzj1LLfsspwyrTWzWuHkqsTcWO1MLIqvCRfB4f
47CJ/KLGgjUsx1PJqYtl1w9nYWUss3JzL2ye0MxlOvRn5Xqs/U/qz+rTeVnU
oDrzGskp9gEbH8BUzpvVmTnFxzp5w5y+PU+TwVzi4eyrhP6f9SJHm75se6mY
83Pup3nALaMlN96BiVzOcSUvd2hyhLEj87Xyc35mtkbacsrwiX23nKdFX116
F/KSuQ2eizh9Y6aX2sx7NLr6mH3/SdsDLbdvh7CyFcDGXggbO37VpJse2ZD6
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
50mOr8mXMuYLqU5d838SUx2yKpq3XgdUH8f81fZmu3qL42AAiVg1Jidf67nz
muqQPVhf7dLzefrNbm27dc5HZ2+55dS83DYGJxZbXOhS5iwsSfyT7kNsukfi
uoCseWGsb41jc9sj66FPeUNvC+r+Zud69HZqPExMNYHtLWonWrC6Rob1Cnv6
JG7rU7/c5XW36pHpuWP8UU2+L5FoRHvHU81XbexMKp8WlgZVX8heY8PnceXp
1qbxT9rbdSEs723UXaH+74wZA+EWzSs6Ojfq9VPTDQgGXut73NnuV43g/q7L
MmpUmbS5UoXddc6If4JUzMnxdUjc9EAvF8LX0fD6Y1nbeXuTsksv955iNXwV
n/z2v+DEFz/Bm7obiEZeq99uPFqNhYVOHHpYdNrLSp39MRO7i+Inv8VXX/5C
Z8MzxibPnsr5+tlvPlHPJWqOjJ4uafe3V/087j+6grr2cv3dMT6ZnJbf3EpE
e3353aI+lr/PWHpIv087+hkHNd9oNOtuJGNlKCu/hodFl1BR88R4McnnwtmZ
zR2lOtNlbJJMz+rvN5zoF64MK4/oI8G5Op3+PnQn29CfHERJwwuUDxbrXMMy
4UvVeAWaIvXyygFMrU7hxvO7eFD5CP49t1BrWX/rA8I1rgPPXkjsVHsLDyV+
4vzesvbXuPn6Gu4IT57J+UfFRCVaJCZ/JjHQR7c/V059rHM6vtDYiXHOq6kF
fPr0a833cXY8NXqMjb6lVk+YdEq2M8KvM+wLfnlJ5yR+IceauTvy6DM+p7CI
Pbzv3T+hz03tOXV67Oml78RL+lrIpnETc3p5PcTaK2y3l/bSyfNpPGXzfTmt
ufU4cjZqGpzcH3N+RZ40ihhPkTWWUWTXc182x6bcZuMs59KJuZ7ZvKDzWIdz
+c+hcVjgMK4yvcHHrDpm1TGrjll1zKpjVv3hs0pzQXbGnzObwvFQXdwwPkSO
N4/qqK0nqtNbq+skzHqtem/20C6ZNXBGmeVoLAJ6PW3nJKbUmymkfkxzOoPK
sMN5DUcbwOddypuTlPN5tczKn+fONZf9hcpFOxtrcnoE4QWfzjbh2pu1foJO
/tJhzKad/bdpa1VO/s7p4120+ginX8nJUTper/w77+tcVx7l+QU6DCJzDrkQ
yTFJL3cSNl94VNtuPPpi1psplvPvc44/+bqyPaUMYi8UObW0No7M4qjOAqKH
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
Hc+knL/fZiRPfxHN1fBMTtbxXIpYPUtMecK1kes1ffTIIF6yfsPrZNX2nh8b
2xM6w479uNQULK25NTfEuhFrWLPCLDNLxdQayUCua8wZZle9Oi+R3Frd9utc
DrO2B5QD1EEn41XCnTeyjvcgMlWjNaGDfTPribMv2Nu0sTGE1HSzsor5qcWl
PkRkbdncHkcg+Ea913TW1L5Hn9vnq8LKulu1EJztEZxqRWZxRM5NJmSfmdcK
YlY4trYrx2zFY+Zk7Tu1pLD67q2t9Wmv7uLSgM78SGd6NQ84k+mBf8rk4ugj
xfkippd4RPatV+tkpr9qBt09z2XfIurhS89Daj2oeWd9ivmz8FQj/KFG9fIx
7yGlj2MvrdGUpLXfayraIpcdcDQfzAfOzgrforUwtSAXFjPlMPnARiR9VzGf
5Nx59kFVYTt+HZGhc5gLXUd8/LLOE1SerRbgdz//Y3z52Y8sFzsx0HlWuFeD
a1ffRUvbY3inmE9cxEx2RDUIxleJvnejqG8sVL1IedUjtA9wX/hvVbX05y99
gZauCrjiI5jgeZmdW8/68ZCnGe6ZceFARs9HW7sr5WjQNy2keXejwTiw7834
Ks5n6hGNvkEwWIcXFQ/xoOiaMo3fZ+MPyMdk9fiwH4+9vpVtr1QjUVB7H0UN
z+GR852+iAu1ria0+TtRNViLWvdrtEbr0ZFsln2Qc2fZpyZvs3wLJvT33TnV
hXp3M6Z2UvLpZFDbXYUWOccY2XBhcjWIqKwXj2V/ivqe4czzb3Cl5iYu0MOI
M+VfXVWt+CfslXr6tdagLtffPdrrVHbF1KXksQV9k5qjo49fBTkUzuq8+Yrg
nNaZXqlHbFZ9YrnxNmVUwF7m5tJndVaiXg+ZGVWaK+T8D1uHepmbIzX/HT4d
bvla9MOc33zOzy/f88jxTnLyfkUTM7m8nWHVjLJKeeXL5nJ5DmMOc31me6KM
k83hln3sv7U9/S6zbC3ruWWh41ln/BQSuXP7fM8GJ47Y1rmyMzmvO8ZQrLPM
WC+8nD9sLnaIWXY5fcaHm+nNndL1Vuv48jjT9xPKzY5iHy45xnw4+zboPeho
FKkJYj0szvqUxFOTsQGMJUYQXg5ikbGhPI4+7Yu2F3jZeuet2ZqQxkdOT1Su
9zae80Z3eOVsOR8+O2uKlzwuRoMwZRl1dG5U1vqgL20e9i8bX/qp3OzHQ64d
XppeN8enNpzzXc+/H4/bjs43jGLrIKzn9Vx/WMPJyro9v+xRj9mtfbIqAMej
lT6vK+ujqn9blNiLNaysrPtzy+Pqmc45ioyxDNvDcowZf5naFmMY8monxyqf
9ktRO7G40CFxU7N6/y1rXONVb/O11T6JO5oQDteptsLMkJJjke1STd7QSKV8
tgNyfuxShu0eBDQupL5vbq5b60rxacMUPjYUlcet+/UY0Nt2bmFQmUWPC2dW
1sGB4RhjqJXlHtVVsE/L9BUb3/Nt1TLG4XKV2JqM0WPwXJ8zihnDMQblfaib
oKfG2qZHfRHis6N6PPr6XyjfxyaNZ4LpoeJzRfT1yb6lRcOm4eFiPVfY3jef
xfx8O+bme9TbY3llUN/fwRZ1EqxTtWNj7hHGhy7C1KiEH+uPEeg/jejIecz6
ryAbuWk4tVyA62f/Fu/8y/e0z4u1r6sXfoK2tgIUPPhcPRUDkyXCzT6MTdTb
+VTb2Nl26X52djxEXd1t1fFtKSN29PNprL+Mcxc+R2llIbyZCcucjH6urGWR
S5z1G9ufVU9r9vcz5gmux+Gh3/RuUplGHeXEZJ3WTqOxRjQ3F6Co+Bpev3mq
sSrrpvsac62o5tcT6EZV/VNcuX8RZ2+ex6WH1/BqsEQ9JjrkPKcl8gbDK33o
SDShXz6rhOwrvQZimzwHXbU+g+uqM6L/tFxDq/A3KoyKLgcwJMwdk/Ody8KU
OjlP8su51ITc3uztwInbn+GaHItbEhvdbn+ERz1FuE4vCMZUNbe0H/eSbPSI
oC/EZ0Xn8EHBKXwkDGP/bfHEtM5CJJuMV/oyXjN2skxirMQ4yXipm/hKeUWe
cU5i2GwOp15ZTpUHj25ODPXCaiby46YXgUPPCef/RkMxd7Q2lfPnm8v15Dq1
KYdTTjz11DLIMMdw54nljsZXZBZ5M5HHqHHDqMfjh6x6PH742PztMObK45b3
kFmO/oJxAc/v93T2w3Rupq3JiU3ju3ktJx+YnJfznrlxO7cinNMW5PSCVitg
/GBNrLWwnu8jO5W77szvNT22JnYz3u/GX4EaWGrVGFOZfl+vxlHac7wwrj2+
o6EeRNcj6uufsn5QWctD85wmf+bkLY2v+tEZGcqoncM4Mn+muzNzw/G/cI6D
k8tzfD/y5/YaTWU4r9fa0TGGTL+zxohT6idBHR/jg0Wd9+7TXNyS9UUyegdz
ubozZbR++2RURLUOGxJzUF+gcZXwirHS6pbRdh/OeIjo+fp0sgHLq0Mmtlod
Va8GatkzSx6JqRhfTcixHrfzKcOqu6BmkDMWua5QZ7GdY1VQ/ZR2d4ZUPxFP
tKgfKpnEnCP9aI2Orxue8WrVEKZme/WxvJ2ze+OJNkQTnaplpM9oWj5PakHo
Scq/M+ba3BrVx4RCZs2bX3YrKxjn7FC/LrEi59iTb3yc8Zn1aq6JrFxa6rEs
mpQ1elA4YXTbfP66Nw90Pd2lzn/Lra/FvuLZTJfGeHyO2dlO1R8uroxojMec
KeOIkYk26xWUhvEKYrwUVa0IdfP8//x8hx4n3+Qr6+se0Jymx/tG417mLo2n
t+zjXgV210oktnqpMzjUu2LvuYQZBdicLUDSfQHj3aewnLwn6OCc9hIM1ryP
j379n3HqxE/Vd7er6wm+vfSJcrmv94nu14N776Gy9pHV103bfoSExryvq27i
8fNbNpaaU15fOP9LnPnmM/VqhRxVk7sL6FyNp6V31SuCbGa+hLyJyfmiO9KP
l50VGF+jX8UiTM50Ux/rnHd0D1ShTGK3B4+voN3bjRZfOx5WPkFxczlqR+tQ
7arDy7ZKzclVDVWhM9WCnukO9KW70C3XqelrklhrUs6P5lTnvq17zbzCrnw/
pmVN6vO2Yzzj1bxk61ADhhOjaPP1wD0fQNNEO6pGX+K15xUetz/E8OYQJjfH
0TL1BgUNd3Hu2dd41PsULyYq4d4dRbEcy6+FSYyfLr+5o7HUtxJvcSOr6GfO
3l7qzxlPUVtOZlG3R390buU2nirXmYmzyhnOfT9klXArvJjjlcMpeqOXh5zL
hUNOOZoJ/6H+3Jl9mONTfm+v3UrztH0mdsrzns3X6+U4lcnxwtFEMKZ6zM3h
jMZWC8qq/DhK7+OZwSNnE0Y52+PcZSZ3+dje/jifXw77LMO4L8esOmbVMauO
WXXMqmNW/aGzijUcfnednN3cSkjrUM4MCaf2xBwfdeMzdu4g+ZHKTuRmrGtP
jl3fqV0nv0z/k1/9LOdt35aztvPSeOyFbG/PYW8v12fqKGIzo6q9oG7C1Lt8
yqYpud0Tc2E87cFYYhijiRFEloOa92P/1gz3ma9l35vR1qeVx7s6LyNt83dx
W7+1eoqcv5DVSWwf5v5W7GWuvytvhpRh8pT2d+XPRDScCil3FnTtd/qqgzkN
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
bav/+Iyefzk9vjoPxGrruBlG5cd1ts+Y7F0L5fJ++bq8RZvDI4fU68Nhm8Mr
qyMxfbVh1SuY2e9c5zmjkPN0/RoP0YN1e5+e5WHZglp7pzab6yjzZatbk/oY
ahqWN40Oj3zjPF6uy2TSChm16dUc4KpcZ78sYw/+bU9ZElFu0Gd8d6cf4eBL
uMeKhVOjOheeMQDZwXhsdoHx1YR8Tl5lLY8t5ylk1wNGcyG3M4Y4ZJXxrmWd
fiHbqmttNFKrc3Xpe8RcYDTBWMIwLbswAMfndpl5tqxL1rNBJOfceux5DhSQ
c3d+TsH4gMZy1FGQ05nFMb0v17/N/Yjyd/fAr97nZNW+6sxCOreeMz2oH2Re
UNfn3WHhSp/GVvv7o8KdUc31hSLteF37UNdxMxeXenWPiYcORmH0IUPqecs5
kKHQG+wc8H6zqlGhtjAWb8PgSLXGnNvC440do9+gB5R5vgmEgtXWO8qHeKxO
85SGHcMSfjzB2VP/iJXFBsv+OglLHuCD3/wXJMIPYDSB1Rhp+cLGU8KpzUeY
dp2Bt+1znPnwL3FVWEU9PM8ZIqEX6Gq7ou/jccG7qK5nHnBFP69splriu1d6
TD76UPg20mD/NoWnT8+ipp7zRjZ0P9Mznbhw+YTOHYXVnsTizXquOjU/gdHJ
NgwEeuS4M4Zalc/LpfmKoQlhzcIg6ryVaJKYqMpVrTFUf7oHfRIXebeH4Vkb
wojEuGNrAxiW84ah9Dg8cu4ZWo8JJTMaN3G+Jpk0GOxFl8RV9KJoTbWiJd6E
u4xbnp1HhbxGt7CsqK4E94URZRL7vBx5gQqJwRqjDSgbLsXriQr1rIjJZ+Jb
CqGO8zaGSo2vxWAxbr25jQJh0QPZLsnz3pK46Ko8V0HXE1wW5pzkjMLSbzV2
or7isvWbpY6d1682PcD97iLcEl6dK7uc85rlTBDGVMUTSdPHGxQOcA5wbE3j
KScP6MRTuRjq32VUNtfXexhLzR/xRHJ6eA9nauTdlj/f0ImncpqKfH34fI5Z
RdT82Vygw6pHeazK35yYyDAqrXzidWXSmGHSA7m8N5LEveFp3B1K4q69vDeS
wv1R/m0a9/W+8ji32QrztmNWHbPqmFXHrDpm1TGr/tBZRa8j5qyc3linh8jM
ZA/oGs1aFXuDnBl9pj84kpvL4fjIOb2t/D/5ZPp1/Pr9NrnBgNZCuLHXirk9
nW1INiifjKab+UEyjX9z++X7PSPM2ozqjGzm9kw/bMz2GUXtzENTezJznGZw
gAWd7cbfj5P3M55k8Zz22+TwAroua8/yopnlxTqaauc3I0fqUvnccjToWpPa
yJ+RZWdsccbjekA35s50W6fm26+68pXNSa2tU2euenNqx4UXK8IZ8op5Pe2B
Wp9Q7fnqlk81E2TW3LLH6hwCqqfg7ENqsLd2OTveqzV29ho5Hkhcc42Oexyx
SCUGB4o0B7ix5dFeIZ0ntTSmGgv2WnE+h9ao5P3EZkdMXcjJz9JzcHdKtQj7
mjPzmTlOSz1a14lEmxCOtiKe6tW+YXr0cR8Wlwe1nsY+r0x2QHNp05lBfV+s
rZFFzKOxt5PnF/TOydq5lvz+sX7Pz2ZPdeEzhgecPT/Xi629gM4X4XEjq/bh
s+87rKxYWuzVuYn0a+LMe+o6FhYH1JOvu5c5tZ0ce1lH4wwS9ngZzUiHataZ
P0yodt6wP5Pp1H4t9jBTa8E8GmdErsqxmV8ageO/OzvTjvVNjz6OHrXsGTO1
HDlPSD3HrRvvYinbCFO7qge2n+CjX/85nj9+B+PDN6B+SwcvsJ28KZfPZBmX
LXsP5z7+AdZS9/Dbn/8xrl/5lT5+UWfaU8vRjZGBG7h9+3PlCPuFN9fadP4G
972y/AROnnkfRoe+gPHxcrR2llhOxdHXcx8bm0bP4uhF3KNFCISa0Nn9XOt7
U9Mj+psZjw+hoq8aRS2FKO0pwoO626pd6BYuTe6MYCDdj96ZNu17Ym5vfGsY
AfldTe+lkdUeGDJ7Xn/rq1jQc+GIsPB+6T2UNJUhthLUXD7Pb6eyk6pTL+Es
98Z7eOoqwUvh0r2m+yiV6/ToI8t4vcxdjhJhUuVEJSq9r1ElXHsm+/e06zFe
jr5EidynsP2hev2Vy/4Wy+UTed5Lwqmb8nyc08G835lXV4RRN1WvTn3FlYZ7
Ou/wil6/i1uc+Sicuy7XL8r9qGn/Vph2ruKqev099ySUU+XCq+duuT61jFeR
FVRMmfzfq5CjTV/4V7Uph1H5daoXgaN9vUc5leeVZGcWOmzKv8yfgfhdfYWT
F3xqtRSOXuKRsEe3I1qJTN5lRvN0hbmcXlpZ82BU+CMMuuOK47ZstwZiuDko
l7LdFk7dciVwW5h1Zzglm7CLzJKN7LovzMrnlvHpTuS8aM0sKuNBa/xhQ7pG
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
fE+7JrvgXhtQr6MaiaMYS5UOPFdtHmf4dsrtnDnP+buscXEWb59wbWi+n5OG
MR7sRsewsG2iC9WuerQwd8j59KkWuFeGMCb775b35ZbPi7lF5hH5d14WDxZr
beqrJ2fxBWfJPzytM3u/Kr2I06+u4BQ9k2Q7JTESWcXY6krTA+2luiDxF72V
rjTe01nBzAGeF6ZxjhV17Wfkceyr+kzY95sbn+KZO659Va85r4q8Us2f8fj7
bu+UM1f+ZWhR+ePMf8/vlyr1f5dR+fr0+SP69CPa87w6lcZN7vS/9p+w8dOh
3s/GSsqmdG4zXhOHGvIHoyncE0bdHozhcsckPnxSiw9eduHXhbX45f1qvP24
Ee8Ud+Kdkk68VVCH377sxfvVY3jv1SB+W9qd234vt79X3o/flXTg96VdeOve
a/zpLz7Ej66+wCfNYXzWMKnbMauOWXXMqmNWHbPqmFV/6KxKrE2pN7npz7Ws
4hxf+ktw5q78nyxhzzB7m7SWQY0fdRdkEGtdawFdX9ivqX28y75cPUuZtmLq
Vg6XZqzeQp9f/k8/sYRsEXn86FQ/BuKjCG5FEN+MYY5+7fvWx3zV+ApyfWMt
id4SO3amFtdO8sXxoz3s+Q3l8n7OJfNHrE8pq+h9J9xkDSU2M6brMp+b7DOz
u1KHcxS3ozmPasMprr8x9WXg3KXtvUlZs4extedXfZz2q667tK+StX3tXVkf
0rlFzMnxOlnGWg/nIy0tDaifxMa2B0srw1qnZx6QHoGcMzU9N6Q8Mf4afl0r
qCUhr4zWMSzr+6RwTt5Xpg8j7mrZv7R6Ba5uee16HtW1l56A09NtyGRd+tzz
Kx7trUpkRpRVzItGUsPwR/sRn/Uo91kTZN6VdUL2WtOffEM4pP7jS6PwT3Vg
ZLxJHtMna0qX1rUO5D5bOisqqv1GZBtfL54eUG0f+cfjzDoH55RRd7mtes4o
krODuh/UVSYzw3rexPOROZ1hHLC+8yGbA4wqJ+hTy74o+lSsrdn86jKZMaHH
f2mxG23t9HJYxd7+hNbvtnZ9qpFgHpb3N2v/mM6PJHfIAfpybG4O6ZZOd2j/
l/GDnbIauiRMvVA+q6UhrT8azQaPeS3KSz7EUD97e7vUl2K8+VNc/ur/g3/g
HBbD1zDrvQSsF2muDwv34e/4AtG+E8KsBxiq+xBfvPt93LzyT/C5r8l9Km2u
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
0Mxct7KKecDM0pj2cKkenucF1quEGsBAbFA9ErU3wXrmO55Vm6rN8+m5jjfc
rXlDo2mf0dwj/fGoNeQ+UmPIOJaP90V61Lt7dilgNZZJRGV94zE/0Nkts6pJ
T8wMqHaN7Awl+uVvc/I3emlNaf8aP489m+dU38OlLvWqUM+/TZfVlEhcSQ86
zxu0dr+C0f8t2NhjHAf7Q5r/m59rtDwfxmK2BQvzrco9aitWVgetT3pQ75vJ
dGFuwaXzWPatnxIZwPnsTn8VUKkzpsoL3kJ1GT2NhCOLBTj1/vfRWPkBOOcj
NnROLl8KGgp1Sw2dgb/rSxwkJQZbvI+2F+/gzjd/j7XEbUwNnsWlkz/U/eus
44yqTswn7mN17rEwpRZ7mw1wjxRYbnIeVit+/S//FS53q77foienlKEzqTr8
6u0fo11uP3XpJIYkLgqvRhBZZE55zuYtt+S7xdwfj00Hzp/7Ba7ePIfa1hfo
GW/Xniv3nA8TGa96SXiX5fe/T2+zdQQTLozP+5A4mMWMnHtIJKxcoobDzLGb
0s+Z50A9I/UYXXDLJ8jjuq05d35/mC8cmhrASGQQb1yNGF3pU8/04dgw+kID
GFsa0d4r5hIZt1GvUS+cYv7wlTDqkfCE+onTnD1feBrv3f1S50sx5nn/wUnV
pJ/VWOmm9k+RRzrvVzhFdjlzPS7TU6nxvmwST7UWqs7iftcT3JHrFyXOolb9
XMU1kwMUVn1a9DVe+jMom0wLqxZznhX5M38ZXzmcYk4wN4c+p1HP5s32WMDL
8JJyq9jqyp/5F3I5wnxGHeYCze3srSoaT+t9NUZT/YTl1LjRVKiez/qgPxih
10RMGBXGlU6/as6/aZ3EqboR4VITfnazDL96WI8fffMQPzx5Gz/4+KLw6ST+
5O0v8ae/O4M/ffc8/uidM/jPn93EX5wqwJ98eAX/6d0L+N6ph/ij9y/hTz6/
jf/04VV878wT/Ee5/U8+u4W/vlKBP5PL750swA8uFOP7pwvxvS/v4H/7f/8C
f3a7Gf/tTgP+rx//Fv/nj945ZtUxq45ZdcyqY1Yds+oPnlXJlaD25zLWZk5u
mnUoatdZF5I10cyrMl55aVuLSltWpfNyerO2j0rn9VLXzpwhfWiVgxPa/xud
HxceTWh+kVoKson9v2HhUzjjQUi2MJkh++SR9dG/FEJ4I4HkahBZ4cWa1axz
Dd1AUtdJ9uiSM6bOYWr+rFeZmovNi9ncX3rBo3k/avLT8p7Zizqz5Nd5opzN
xbzVgZ3H6GjTc3MXd2J5frnsqYpoboo+tJnFUfWkPdC6lV/rVpvCH86Giia7
kMy4hJVe4VrQzOJbGtW+qdTcsPYMO72rnLPEPBVZNZcdQDozoDxkvYlsS870
IxTvNT3L8h7c/k79zZNRQ+PNeiy4JnFWIfOT9MwgKzatr+3Ovk/2MSBr+IjW
xph75Lzb2azwaX5Ej1NqflRrVtSWs27HXhlvuE+POd+34wlp+txS+prLWzG9
L5nF/dpRf72E+h+yP2plw6t+ruQV83rMV0bSw6oPITd4rsLPjI9lnsjM2s1o
bjU569LPjvMn1VdyK6i5oQPhA/XnPC840Pwf2RDF6kqX9Ugfs/MMJzWHR29d
avWpIWHdhv6Fpg/Lh71dlzJrMcuZT6PKop3NDiwvNGsP8NamMxdxDPt71I+0
qxaGnxX1GgfKpoj2Oe3sTlhWlWGy8yvMBq/hyZ2fA7uc0fgK7a9+j2/O/D1S
kXs42CjR27DzBEjfxljDx2gv+618hIWqr5gdOYsXd/4JVUVvIzpxBVcv/C8s
ZWvgHzgrl2Rio3Ks6NFHoI7C1XcTnR339ftUV/MtXtfcwyefv6PnF8xf1zQy
dziDW7c+w9VbX2Ns2o3h1DjGZr0IrEzJEZ9VTu0prw4syyvhHrqBTz7+BzR3
vsL/z957d7d1Xtn/7+L3x8xkmpOZZJxk0uMax05PbMfdcSL33osky5Ks3nvv
naIKRYmUSHX23gGCAIgOEAR771Xk+Z69n3shZV5BfmtJa90FCkS9BJ7Pc87Z
Z59qf6lUNTnIp5DeB3Pk0JMLLRSYhD1pfs116af2po0z50ydrI+PndDvOLQ0
Ad2nuMLlEmqvlxpXjn5aY+Jqa5D8+jwpbCjkc+R5S+SKO1Ou+bI4twrPh9d7
3ZkvN9EnpceVxizJ8l6iJwVqVrnxm5JRlyZbL2yXpSnr5MtDK+STXYt4IO+3
PH0ba1HM+6F3N8vMoIJeYvs1M/sXeT54/yHnt83ypKC/unJrN+YyKgcPFR1n
HhBa9g3KRJtTXygP0wOdxq/CYhXqVXeyKtPK/2VauvXbOgu7t6rP0rL3W/1V
hl3oHT7l7aC/RKqlmUBO8IzvTv+/v/8Z9S70+h6vT1A/cdxladK9Judn90ah
RgVO7S4Py/Ziv2wu9Mn6PK8sy66Wjw5nyfNLd8jj89bJEwu3yp+X7ZXfz9sg
v/50lTz8zkJ58O2F8otP1sjDejwyd7M88OFK+dk7S+SBedvkgc82yoPzt8v3
//a5/PCdZfKTTzbITz/bLPf+9TP9eaPcN2+7/Pi95XqskAcX7pWfvLNU7v98
k3zjvl/LY5sz5eFVqfKfv35O/u2xZ6RZ9zjwhO2fiBhdBWIqeIxPmjoVPSh0
bYT+wWYTa0xkk58xVTv9KLzs8QWTwL3mPtPXG9VYJQ4W6vcFR6veD3EX+Ijb
oCcYvcBR9AHrvi4BT23dP1UHSrlva9W9Wb/llYA4qVWfx54PafyOmjjDBLX5
Gbk955j1tWEz1wL9OOhJwhwS6AXANfRpYF/HmKrXeCuN3IqTVYjLoCO47VEb
tfQcMV1vo1YPcIS9xPB6gO/FlK6TqF1wnoeljYPmoL2rirEBXgviBPgYoecp
2lzCeppZD5q4X8cceMQ64EdbZ5VEE2W8D/Rabd11rD+h5wnfd+hK4PmAOAp1
NfB2gmtkP7k5PhMxXkSTPs6xAKdQE8PzoO7fpzzsH3JIm661Hb16qazqYj+0
OU++aDnXN/SvBeO1jEVNzTLEOpTdmzk+g7jYZzG+g8+Nv4HtzQTPdrzf9u5a
mZyNsHbW3lPH+BZ/C7CqZwh7jYBEWutYJ2nvcfBvCKYhlgTzUKdDfI/rwQLO
bBwycaok5xRHqbE0PupVelTK0FANfZXQr5ubn0KffvRo43zOJH0qvIwfZmeq
ZZY9RPq367kmwwMaj+h1U5h5LHp+Om4oC8upTYEnRih0VQJh9HN1Ur9p5gGj
TpUl7tzFcj1jvkz2puhbTBX29Y4el3WLnpLacsRSqJMpbyZTqKdI2f6qnN79
mrjzl7D/FxpA6CucNxbKmX1vSlnOMlm/5lXOXV6z6i1Bn29vR7p89P7vOQty
bDhPzp3bSJ3IpLL1RMoGybqeKrnFmfxuG4+OXupB121aIudvplFv69VzCr0D
5iSOKk8Q47ZY+QX49fsaM2TXjk9lybKPpbqxUErdBfRIcuj+0qf7h/BQRDyt
9RIeaZLW6Tb27WOPCjbhe4T68Sy1lqbXG/3g8M2Fnq82ViuVsTq55siTAnex
HC88Jmeqz8o15U+h7isKY9D5XafWQqkoReFSagKveS7J1cZLkt+cw56sS56L
kqkHdISX9Viful4+3/GVnG6Iy6e7FlNHgdrUWuXT+qw91PfRO0ljKcRMB+CX
pM9NvYSyBzPr4ZOEeAk1LPQDI37C9fBbB6/QY7VHL1mz0tvQq0JZdTHWf5tV
yVpVrzVTsd/UrPAzYipwymJVhnLp/85UJKvuiLPOwi9JWYXeYbuH1571bmsH
z7KW1auXhlVgG5h2zJlgPHWcXumdydoU53XUt8mBGuOJtLXIJxvzvbIu1yNL
s6rl46NXZM76I/LAX96VJ1cckB8987o8semsPPrZOvnZq1/ID176SH4wRzn0
xkL53pwv5LuvzJdvPfmG/Ocf5si9+v97Hn9V7vnTK/Ifv/2LXv+6fOvPb8p/
Pf2O3PPHOfJfz7wj//3c+7wt7vPdV7/kbXH9//e/D8rDK1LkJ59ukn+677fy
Tz//Db0h+rjmR7h3vj1DyvQFQ4feoms52EStOeb4In5iX6+fMRRipDj8/pQ1
TfBSBnf0shm5QMwXhn4B+nXrAOtwf8OqRnIq1O3lHPpmjalCnW6p0v1b42BU
V78u4xuojx9F7X3a6PvAKqOb7iSnkDNCzhLr37B1GzOvw3j+YcY4epTRX4/8
HhiFmKqtz8d1GHv2cXrcGa0Gcor4nnH+h+WH0c+5v2buFfUHVq808oGYf4H1
s19ZZOZ4YKaUm+tXIJxPTTx4C48LaLrjbba3gJm7MKPfRayxnV2lZBV8ewKx
Ur4naBGaO+rocWR6CHy6L62S5i63la/p4xqMHBteO/5meI0Ts1H6O41NNZo1
7FYjPQgRt8HzG/lHeOmh1xasgi4SnAJn8Pj0mRqJSDjhoMaz3zqnZj0ep38S
9B6NwTzGRfgbJDQOgl/gGPujY/ScaO50WH7qjfSLAouiiQpyD+sXfKLwGuDF
gcfGnCr8zcClULzC7Jm66qgXGae/Vgf1hG26DxjV/YXpt41oLOtUJpUYrcqs
nz4TwyNO6lnCsULxR4qt89Uo9swQ6Fkm9H6zM27yCrONZ29VSFM0U1oT12V0
tJrx2ehIBTkBLQbmgfT2VUkokkNPeWi6TT8A1mONwcZOyNK5f5KhLviVX2GM
JeMpcnzby7Jt/RyBLoL5wFHlVM9BmW7aJYs+/r0UZ3xuODV5UkaD2+i7tGvV
C7Jn8yuyevlLkpNzSMZHS83+ZiJLZiYLZe2qN/g+aqpOyvXrBxnvu9yXpbD4
tKRfPCoOjb3hVYbPSEn1Fe4N/eFCqfdcF4+u/e7ekDj0cwTf8lF9H1H9/kQ0
1ungPCAzT+bokWWyZfsSfidzPcVS1VZF36PQeFwCgxGJKq+GmPPtEdM7PMZY
yt7z2XEV8hjIJzu9hey7h4cJ+v8rI9WSWZsmV72GOZgXX4jeYOUR5lCFdC/h
0e9VQfgmfZjSMQvEYWZ5nKo4RZ+k3Rr/rE3bLF8fWy3vrf9c3ts0T5bBR+L8
duXTbvJpE3wmlDGIkRAvMadXepJe6fsKjiZ9/cClddCv29r1SyY3uN6Kw9D/
C88lxF2bwTzMAT6zSRboc1+MDUi6v0MyQ93JmIqsgiYQ+vWoNbNeWXXe32lx
ymgBwSa7R9j2rrjTZx26C/DqjOXxR/8+PeiPZHlP8LB8klIsr6Tj9S1yVFl1
VNl0nLm+Fmr8oDfHrI69VTHZURqUbSUB2aScWnuzgb287+7LYL7v2aU75aFX
PpEfP/uG3PvM2/KrpcqsNxfJPb99geyxD7Ln2feUSy/Kvz36jHznL5/If/zm
RWXR3+Tff/28fOupt+Q7L34s9/7tC/6M68Ctf/3l0/Lt5z/g78C2b+oBNv38
y93yTeXbP9//ez1+d5dVd1l1l1V3WXWXVXdZ9Q/PqhbMqoIuPDk3MZj0qIXe
vEXXL3rQ4vdWvg/5QHj7obYFBrXaOUDk8JRP8Plr0bUe3ui4n621MH1Vt32X
bF6BbUHlU3ggKJH+gHhb66XQXSiRWeXcdAu55291SmI0xrUK6/6k5V8Lf1nk
LcCneGeDfh8akhp21Kvg54N8GXpJY231XN+pp+j2kEPmPvUyMNVk1Un6yCXM
Pua8KnrXGj93e94iDqNjiFK7Dr9a9Fiitwl5KdSg4LeEXt6OnlpxNd4kD5Gj
RP2pMVTI3KTw+YIyPOqgfh0e3x2dmOlXxhpXKF7Oeht0IOilQn0H7ABfGwJY
s0bJu/HZuN7eyV4o1K+Mb1sH+1PHp3zMSUJbgdoOngcznJD/Q/8udB/t3XWs
UyEvB70JmGz6ol2mZqXnDXWrPqt3YYaM7WcND88djOTRAx48Qs4YrIPWAucc
a1WzshMsa+tz6+eqkez1RUrIINQ0MIcr0lxG3yj83VjLaq5h3xx893HfRFc9
tTvIuU6xJ9hDlk/pug3NPPYJ0KKEogX6+v0yOFxPrTrOwdR0A/tyo/Eics5w
yimmV1ZZNV5+x3V1nCmF3qquzlzOPEaOsKM9VzqVg4NDtVy/R4bLqa+gR+6U
29pzxEVunZNrZz6Vgzve4Awq+s8OHpfZjoOya82LknMJ2nXUxdKUS6m6rKdI
VfaXcmzry8ofZdvoCZlp3i3Stk82Ln5aPnzr13I+bbmsXf0W+9PguYu/5b7d
n0phUapUO69KOJTF84KcZCxewPN24uQmScs8LNVNDmmebBGPMqLIXcS9QCJ+
VfYeWCPXizOlur1GArqXQa49oPs4V8Ip4f6gNe+3T5qjp6W66rSknNwoNwou
cE5VUTxH3ON19KFlnWq23apxjZBTYBy+d/huQjPTPYS1JcSctTtYyvo0OFWp
zKoMlEtJpFzq9Dt41ZPJmb2Z/svs3YW/bHlPKecJ5yuzrkOLrvxCfSq1PFWO
KWM2K0O+PrpKFhxZKV8pK+DDdz7QKQtT1tHXb+PlvdRPbFEGgU/w9kNtCjUn
+NAeLDrB+VOYPYU5i/D2Q/1pjTIOPcLwWl+TYZgFXTq4t+WqmQ8MRtk+gJhV
Bd3GhbByRlnF3J/FKzsHmNU0xN7gTGURcoHp/q5knQqa9YuxoTu41Xfbv9au
Wdl+6sqtU+42y0u91/JH7zY1LOQFvV3W7Cnk+9rliKOZuolj9EJK0FsWMw/3
WHr0ndYBLcWaG/XUUby0ap88+eUGeWrJTnly8Q558LXP5XtPzJHvvfC+fPOJ
1+V7r33F3N3//PVz/h+5u++/sVj+43cv8ed//9Vz8uOP15M79/zpZWXYu/z9
D95dIf/75tdk03/87i/6OAvl+68vkl+sPiX3fbWXv//h+6vILdSqfvDOMv4e
B/wpE/qZahkOM27CeoMaN9YF2xcdTOkYDll9UD7rMDoM9lKxn8rUusCmbo3L
WMfSAzUs1Ffxs82qTsvHAv1WXRYDobMIden60xcUb6dHynyliBQkrszwtjeI
X6+HhwVm2KPuNWPNpjd9qs3W7OIgvxumjzfBNbJ7KMw5E5gxizpPe5+PehHs
6cEBzN7GujomJi6ABhDxFDwx0OuDGMzuCca6jfoQYjnj2d5k5oHAt2MyzLgB
fqCY2zetu0Fo7BIdVdLgL+C6DF90aNnAOTNTI86eq74BM3Md9QHU6r2BPM4c
bIyW6/c9RN0H2Ap2gLOmlhbnuoDaEDgBHaCZNwlOdXP2IDQNw+NglalZjYw3
sK6C3q1e5RR0D119+pzKRbAO6wfOGRiMtQZ90ajtxcgtJ+dhjrO+NsU9NN4v
dHjQPkAP1z9UT70IziPOCfSEU/T9TTD2gH8FamiYoQH2jOv6fksPaB0THbUS
bze9XdgLRFpqrT65NuM1qbxGnIU5InjPeF5oFuGzgHi1bwTzjD3UYkAfGGup
0nPm5OucnKiTysrTfE6zx4c/o8tik1M6269adataHremyiUey0yyC0dvNzz8
oK9o4PXuhvOSaCvj+4IvhnlcZbZvq2Skfiqu6k2mRoWjXxk0liqHN8+RtuAu
oZ4C3ukaUyWq18i5/W8ZHaByy4t6VecBqb26QL54+zHJTp8vp458KLt2LZQK
x3XreZrlctZGcdSdYox19foR1mTzSzPkWl46P5+HU3ZKCOfQ2tvVxGqpTfB1
+2TvoU2yc986ySzPptd5RM9HVJlTFawQ30CEugizD4pIVsYyuXplm6zbtFh2
puw2cxQ7i9jv2ziqnztdN4IjcenQ/S5yDMjJQPMUbjZxP7Se0W631LnzlUtl
1PjCrzq3LkeuOW+Se8Ua82Y3ZCiHsuSyxlY3o9cZJ2X6sth7lR+/SVZlui5I
qsZBO8Ee9EKhb/f0RlmOOfPKJczhPR/skuzEiHwFfz/06Or19PW7doDesweU
TejlxWxfzPiw5yPiwLzELZf3GFYpg1Zh5iL6rCw/C/x/lRVr4feoUUFTsSR1
g8w9sFwyIr2MlZKMQu/vHazKjg+TVZgRnMFZIF3klM2nO1llzwG+7WPbn/QC
PO1p17ipLdnna44e9k/ZnrSc52v1/O4saJBVF0tlU2lUdlc1yd7qJs7m5VHb
Irurm9k3hXhqwdl8+dvag/Lwyx/JQ69/IQ+9/ZX88rN18oPn3pbvPv2mfFNj
KcRK9zz+CvnxnRc/Yi3qm0+8xloVfvffz7xLZv3wvZW8HjHUjz/eIPct3Cc/
/WKr8mi53PvyPPn2Cx/Kjz9aJz+ft4Oc+vn8nfLA4oPy4NKj1F88ujlD7l+k
MdyHa/VYI5E+v0Q1lmnF7F3dJ+OzhnUB6zdiJegckMcDXxBPIQ5KWJwysVWA
XrS2NhC8QzwG7R9+Rz4Nm9xft3X0WnlGW7uOGC6qa6Ff9++hXr80dHikyIfe
9Rh73DELIDIal6bhiPRMNvH7x5yfciSq9wEvjJe6mV0F3St6ehF/DE40JZmD
/3daeT/jPdvEOm8H+0pNnIb9IW4PPwXEMLiffSDGwtpp6wTtHmloJOAbBI0b
8m6zEqM+HL2o8DWFh8MktfStjF+GJiNcXyf0HQ5YsRdmASM2QK2e8z70cZBH
RH4MXuKYz5FgLGj7Ww/ra22jt1KsrSY568n2skXuDdwEH+ABPqExFVg4OOKi
D3r/kIt6ROg2oAFEj24CHui6rmBuF54L56CLXgZecgyfgTGycEhfe4L6R/q0
W/0H+L/TfY1+FfAzRv81enURc8J/ItJSzfUMz4V8Hz2VOH/GT19e5pw7nWQT
4jtoEfH3QKyGfQLiZe7Z6eHbJP5YJeMwxJbd+tytykncBzlQxGOIoaDNLCq/
IEUV2cmZ1rGWCnJ6TNkNj6vxsQrGV9MTmFHvkOGBHGueh0eG+m8qu6pksD9P
Zm7VyCA08QMlEotek7b2Ivr3Gn44NE5Kl5QjH0tXS6oVU12S5PwpZVH6/jdN
PhDxFGZ8DB+jJh29wfBQv5rygfQ0bJCp2E5Z+tkfpb5ktZza84Z88dnTcvj4
ZiteNt4T+Tnb5OTJddb7b5WMC1vE2VjAvQF0ddDVYs9mtKFjUuu6LvWxanH1
O+VQxnH6HxU355BVIY0vG9o9Uod4Zwp7qFErP+2Wc6cXyFcLXpXl21ZLhsY8
YEaN3qdhtIZ9voFJE5ONW/3bZv/UxLwxtPLucJm06vcot/KKVCovA/pZaNLv
IHysG3WfWBV3yiVl0EVXhlxSTh2GbuHKXjmmTErR54On7WVl1j6NZTaAR8fX
yBLlELwi1sNbAsyAZ+ypjfLxzoWSFR9iLg6X0FSALZssbyRo+3ZZ+ont1jwP
zqO/cYDz5zcrp6Cp4AwqPdZajIKnLTwu4Eu7zPoZDFyBnKNyCs8LPwrk/jI0
pmPu7w5O2T3AiKvALM4GsWKqOzUVGZGB23GVFVvZ2kA7zjrr1ZjZGadegnPn
bU8l/+0cYKo9x4N+Se2yp8Qnn+w8QR/Z9VXtctDRas2Pb5E9yqutJUH6xS69
WCGvbTouT8xbK/e9+I58//G/yc/eXWpiKY2N/uevnzG3hxzfv//mBcZN986Z
K9/4xRPyrT+/QZ0EuIS83bdf+Ei+r/ET8oD/+/ZS+ZnyCMf3Xl9IDQU4hv8/
tOyYPLjkiPxqWzZ1f4+sS5OHVpyQB74+JI9uPE9u/eijteTVXVbdZdVdVt1l
1V1W3WXVPzqrwKmYrkfNGsu36zrYPRbhegUtQ8LiEuYDoCcqitpOv6lFUX+O
+cEjlg8t5vqOGH9Au6YFBkD/3kutRsSayxhN6h6wboCL8E+KdLgkpmsSPscB
/bkiUi3ByYA4OrziHwhLy2RCOibj0g0Nud7P9BAHmGOwHwtrHdZxcAv5Mugj
+seiVr6vmfkscAZ8Ql4KegHUko2nTC9zJ2AR+lOhvTA9RYZ1RlMR53p523ep
yeqXjjIHg/lV8KbDbFowIRDJ1+/rDX0sj1nflT+eYCFzlTOcARVXRtVLR69T
Ovtd5E5t/RVrLlWQeoJgvILreZ0nn/lK1L0wywI90Jy1OB2iVgG3w/vD++dc
SeXbyFRYRqeCZNXYpNfS0euhfER/V1c/dOoNrHWg3xbrO/rOcM462VfnZ90O
z4laOD4bk6yxmbo5ep3A01n2NrWyLtYYyGUfG849zlGstYaeOjgH4Dt7bnqc
7Bse4t4oyjUu3FzOGWrIjyJPijUYjMc5h0/gyHQL9yJgFvZRZpZWgjVA9Kw2
t1Xyuew5IZh32TPcyJoZcorQvaOGhzlf6LHC7GPo5ydnAjIxoZ+BSYdMT9bQ
E7aj/boM9BUItOuJODz2SiQaucJcH7yWWlrypbO7gnOxTN+QmxqKyrzl0tuG
XtxCkYkz+ieH72CW4VLvYfrPyvgJ40s7fJx1qXDJCrlx6iO5cfoj6fZs1ut2
Ubt+eMfr+hin5PWXHpQ167+Sa3ln+X7x92nwl8qegxslLeMo9yydXWXUoaN/
t60VecJp9pMZ7c0EX+Pufaskv+6m+PV9FwerxDlQyf5az1itnhGvlDVViEc/
sxH9PPeQb07mRTdveFM+/uRlOVd5mhpxl97eP9Eo3nGHeMZrJayfrbDuI9um
W60e9TbWpPDdqXblKo90H9Xro79tvq9EfJgLEquTat175TcUSW5jodT1VkhJ
Sx7nT10NXZXKvnL6zWJ2L7QSS5RPX+xaxFzcVmUIcm/oj0Iejv5Gyg14xqLH
Nys+KJnRfrIK/1+hv4NP0lZy6ZDplbpu2LTVnpWI/yvPoElnX6/lt4T/w+9v
tVW7wqyPz/Ys4bzfeYdWKAvXKQMWUad+IdQtF5RVlyK97AFm/s+aV2Vr1cEq
aCsuBLrNLCtwy8r1IceXGTWsyrjDJzCtsUPO+ro4p4qzrlwJZVUze6bOWsed
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
27fX0gcO+jQzC3iQ+wL8DNZhDQb/kXPsox9/lPMvTd61i+fboX9Ll7+Y/v6Y
uwaW4vbYA0AzM859QBvPoalF9pLH0FT4wkYnh/ogdDCYYYm5YJjDjJxgdyfm
VZXRm6K9PY/etN29VVaOEPnCiFXrqmOecHzosnS1pknQe1hmJm8aVo2fkYun
kP/LYW1qquMQ/dLrrn4lg74t5JTAQ33gqHJrv5zc+ZqsW/ikHNr+OvOH8GCf
98WLMqavo6HhklzLOWlxqkfSzu8S0287IrMz9ZzFietrqw7L9l3LOcesp+u6
7Ni+wKqnReSLuW9Q64va3sWrJ6XEUySl4WrTH6WflSrdG9Z0l9IbYkZG9bPW
Ixt3rBRnf5X4dc+5ZttKSas4JZeDV6R2pFrco7XiG2/Et0L/Lv3cJ8JDEnn1
Yle+1DXVUTsR0+euClVKsb9CCkOFkl1/XrKVTcUteVKle4Czlac5V2rp0VXK
qJW6/q+kbs/2QP9Sr0evFPqRrrVP0BP9ztwfZyRas6bW0ON8s3x92uQB4Q+R
HR8k4+brY+NYfHI9mYZeq030Rt/JHl/Un9jja/n+gVvgGHq24CG4xuoBXqm3
Az+/PLqaeUnDKWWKvsaLVj8V5v9esjxq7Ryg8VU3GouMZB3qtmetzaN0q+8X
uT54U4BNqcohHKc8HdbP7XLG15NkVSpnUbUZzwrlFvKA8KY4UB29zSnkAKub
2UO1qyou28ujsvqaQ97cdFQeeeUj+flL78u9z78nP/18K3N2P351ntz7zFvy
7T+/If/5+7/Si4KcevRp+cbDj7MeBUZBJ/HD91cbXr32FT0moOtD/u6RNWf4
WMjpkU/KJuT5wB38DC6BR/ct2E3NBOtXyjLWrpRJ0Fw8vOok74vf2QxrsXp9
4b0S0JglqPt5f6dHAsqI6FCYOkEwAkew3UU/pOYB40OLHmDUjMCuoLIH92+I
VUu418f+XfgmwTO9hXMUG5QtPmo5UOP1trkkqM+B3sC6RL1UtdRKeUuxckrX
uCll3niLRJVJ0FSE9DX4dY+HHmFXq0t8+rOnS9k3HpfeaVM7wd4afuv2vtod
LJGagO6Le3ysoY3ONrO+g/URe3HEVuCR8fkxHtAdA16ug22WRhuMxncR+9FO
+qbGuQ6auSMdXBeh4WbN3pq9CF1Fa2elNOn6H++oY89q11AjvZV6RwKMXTDz
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
pyph9BHOngapx75N96l1nU79vx69TrLFofv1CmVDTWe18qmK83GQ36tVBoFZ
yDW4NG4KTfuVfU6paq3R2Cgghf4yKW8vIKvQy+Edq5fa7mrxT7ukQvf/1Z0V
9H5xDVWJZ9QpwamARCZajD5vMiHd8KPjPPko11D4fiNfBj94zPuGbnFAGdA5
GpGesTDXduQJkadCLw/yXJeKL7GvqwsaB41tAsgHwtNdeQIPwlB/SFrwXLqP
71C+DVr5RjsPaDzCQ4yLED9h7UbMAm89rNNGu2188xBjQZcNviEPh71Cy3iT
5XXURV0ceALNYK3ulwdnWpLzSNAjhliqfaLJ4lULdRBmhnGjMsLJWAU1dtwu
2lJDjQZ0gU1tNXw9uD04ODRl5qEgFsJrxFx7+Fggr4d4FM9V7cplHrPjVis9
nnB0K4/gP29zH7OuEKtBr0GNovITzIKeD/M7BiajjK/aNZ4GpzF/zOwb2slo
6Nzhb4/YaERjoknOODYzZ03Pl/FvRKwM9uO2iCXJQe4NGnl+hvXzPHnLJ939
Tsa9s8zzxcmBySlo+fScjTvJIvScwetvYLCWeU/jpeSxYiq3xaebVjyVzbhG
xlOVP6kyEtymy/9xelOsnv+EYRj8KSZSqaOYadqrxx5d/k9oOJMi0bLVcm7f
W/Lha4/IC4//SBx5S6Ug/TM5tOstGew+b9gkuVJw4Qu9LGMe8UrK+7JuyXNk
JPwvFs//syz4co7s2jlfUk5ulLPpGtuVX7Q4hP1Gu7R3Vcq6DfPFE0W+ctri
cCfzl9ev75VTZ3fw/EOr0zXdYmZ+019kmHrZ7Ye3ylVflmRoTHW2Nk3SNF66
HrshVbrPLGvLpydFUUseNelZ3ktyQmOrTcqQr1PWkStHq87IpcAVOa3323nt
9nz4TcoozJLfkr1blmMG1NHVjGEu+Dskp3OaeoZLllaPeUCNd+A/sdLyVF+l
z2HiJePht/IOTQX0f6v/D69sT6al/6fXyvb0Q4x0uXlEriZGyK2Ld/DJjqOy
ooZVhlNdzP3htmBWsofK0qanW/k+6vzgRxEyWgo753feYpodV9m8sj3/MPfD
9lJP+qhrLJWi1yPnB07Zub/9lRHm/eYezpD7npoj//3IH+VfH/gd83zI+XHe
lPIK8RQO5Pvwu3uVR4i5oOuDNzryeYiPwBnoI/B/42luOIK4x/b1oz+SNefX
9ken15/GXia22mlyiJ9uoq4d3hb08tPHs+dWQR9BXbql9UP+D/EUnuNBa5bV
g5ZnBThnzxSBTzsu77LqLqvusuouq+6y6i6r/tFZ5RsN6focFi+0Esor+koo
nxqRA1RmUYuOXig9atuhj1Au9dUpm+rE0VPDGpOjTxk0UKkcqZb6AeVKR7Ve
Z2pTDl33PKMOaipcQzVkFnKB0FBUd5UqzyrJsKJoQbL33TNRx9vWD+oaPuGW
6nblXo/pw3Jjrs6wgyxrHG2Uhi6/NE+2SMdoWDqRf1MOsE9f11j0DcP7rNxT
IEHlMGpxTf1+Hj2YB8m5h1HW8s9nHZM6ZXKXrrtgSUOsSspDlazTYV6xfyDC
cxIaMn3SeFz07SInBS5gXcV6j7WWnqutTq7fs9Y8VtRt4NMA7zs8H/ToYFGd
R7//vhLpYz9SD3NZ0FmAG50Wq/B+ML9y2Jq1DH/DhkCJ5Wfba2nDa8lM6vOH
w3we+JyjDgb9Mn5Hnfigmf0Lz3PUk+BHgVwmmAC24bUhD9ilfIEWHb1P8Par
Vt4Po2o1rHsM5w3mCLtHw+THJGtlCbIZ3oD948ZjEfoK9KH26O3gowhPCcz2
DLY6pE3fX7uuk6NWz/Yw5zu3cO8wYnnnM4fKGWKmbxh9bKjnYS4YeDhg6Vum
lEdx/YzcggvDqJ9+IdBTCHOCPpmYicj0bJB+iBOTDTIxbc/1bZTe/mpp66xi
Tc/0N7ktVlVYnEL+D9qKC3qcURalcJ7vKFl1Qs7sfkOWfvYHzvPFzF/0QHU4
Nsh0bLdI12G9VF4175VjW16R9H1vy5JP9bbTZ8mtFV89La7aXRYT06Tmypcy
OXSa/Cu+8Lns1/vIyCmRyVMy94Pfyv49X4jblSLXru2Ves8NzgMz+vNWScTS
xeXOlpyCM/T/E9ankBOvY2/xlp2r5HT6AUnLPMzcIDwmMTsV/cHoM8SMuT2n
9smJvMPs+YVuIrXytJxU9mSHrkqZxajiRK5cD1yWLOXZWf3d7qv7ZNmxNeTD
7qITkuHLlnRXBnuy9ucepq5irTVrar/+fgPyfyfXc/7heat/6VrrOLmA3ir4
pF9pGaXmYhmZtC1ZowKjcB1qUfQFzLxTb7Ez+bN9rLL6rcCrRfRgX87aFfTr
0E5cUVZdjg+b/inoLsAn6CesmhR0FKhXGS/AHkuLMSjn/Z30pQWXOCcxYHHK
0kykW1609nE+aPvV9iQ91M8kPf+MXh35P+jUjW+68aSFnsLmVIrlpQ5Ovbfp
oPxl5V554MW35VsP/U6+cd+v5V8eely+8Ysnk2zCz//8wB9Ym0LeD760yPch
7/eDd5bLj9En9elGq/a03apF7TJ6B/bjpiR90FFzSs7wtfwo6EtLH8C9lm/F
AdNbBV59tonzrfC8j225JL/aftnq8z2TrEPZeguTU9yf7Cd+yPIRNPWt87wv
c4CbM6ipY4+u8grrMWpImIGI2Ao/g1vom3J0eHUt17ipG6yqIZsc/aYGZfMH
8ZJ/0m1u11MnjZMOcQ+7xK2MYG+vsgdxlmFVOWu4FZ1FUt1Tyr5C/OwYrGSv
VWBKYzp9PY5Ojem6/x977+Hd1nlli/8Xb+a9qXmTyctMpqRMMhPbSVwTx4lj
O+52HBdZ7nJRZFuWLMnqvZOiKJFqpERJpHojKUrsnQTABoIgWAASLGDvned3
9v6+CzJv/f6AeWvJXnehX1yAwrfvPmefvYuoDYS/hVfPiauHqhSnahVn/eJV
vtM81kr/9rCuzQ3KZzCDj54Zesrwf8c87SDmdnTNhNcuPhvmioFl8KbIdmdJ
RuVtYrVfOWaet4BzZ9BWQCti5pcb6B8FXgUviQh0boobg8w3bCc3meYssY/n
rOAj8LCH/g04hdyPgGJ9va7d+RW3JL00XXLqi6TYXyJd00YPApyasdklmGkF
T2niTGcptRTAlzC9MoLEMLwvcpcrFbfK6vPoJVUdKGR/DtoP8DxoHaB7gHYC
2AGMAQYCB+DRgewI9Nxnbe6uOQdXfjJRR+4RGfAQ68qr7ypSGc/unKJr0tpT
y6xF4DN8f03eZR897MFX8X7AOmA3cLdD72eGjH4HI3aWjH5Kuk4iexMza+g/
LXjjN1FbMWnfY8JmpOA7QnbxlK7DkYEq9qZwHTwKOhJkTI5M1JNjwCO9O4JZ
3nYxc1S1Mjvr8KYm6evNlU49PxoaBd+K2Ofhc1db/DB6htGmA0Z3NwXf2TNS
n71WMSmJXrLL3nxQuuCXPpBAXwrvnXUyH1TM6j1GfeAwZrCAY73H5ZO3HmHu
73TbIflI+dXxQ/BMKqJWI2Hnq5J/ZwM9mVJi3yTf6myJF2g3dq15Rjase0XK
iuOlqOiUFBSelkAQn8vMCrf4j8mpkxvk6g1khEzybzgGzaHi7NXj78rbbz0h
WQWXpcibJ/n67w3no1VtLuXJHfy74d9CSc1dOZt1gXNV15QvpbnT5LRiVTK0
FHr7ivcq/SvS/dclVflWqjtV4m8flUOZR5k/D61ebM4JOakYdU5fe6rotMTp
YzG67YQfEnpWilsb4SmhfAmZv2n1nXK9dVjSOyYUp5TfhOCBvob5G+BVKxUD
1zt4A12fbrjt4JSjo8Clw6U2pC5kMdKD3fauHA92zB87GgrgEfSAxKFm4NDA
n3koXbY59BegoYCuosnoM857O6N8Ks3Jobf9qmgvCvhE3URflEc5lws+Fb3U
AAKzkEVPDyV40yp3cvpUuIz6qCtOfRaXIj964nn5x589Lv/wyLPy1z95WP7q
p78iJkHT52R5oCdFfd+z78l3X/jQzPMCk76MoZYC/MdwoYPWy/yUnc09ZrJ4
LZ6A8xjMMtkcxBvo9ZQXLcYYYJkzBwyNBTa8P/hQNJ9+0Tyw4VXGTwmetzg2
8jDO/55lfws49ahuzlxW3Wid1A01sgYVGG2J+qPX2/neyvYqKQ9XSVVvPXkH
MIdcCtryvgIp7cmTEt3K9DpqdzXDVVIUziP++GY89J2Azr3c+lDUT1VxltfT
V0U+hX0As4q6cllfgK6iQdeYhokGvl95p0t5VbnVZVQoP1M+N2hwEfqKuiHF
kYGAcr9q5oUUeJCl0yBh/g576HdgdM1d1K116brZM9FMT/PwqGKTfk7UQKCV
QP8efnX988YbgTnEVt+IDbPSmCXuAH+YCbEeRV8EXRehLUC/3+PLlbzym5JX
dYc5XdB99I42ye3cS1LZUiHN40HpGzf6g1nOqUZY32JuE7Uhg8QNcC7kA8FH
w/TN+9kvHwY+6nuCLzl5JsAk1MmAc3PskQ+yVggPJOjBgBVGm9BFLAUnwfoE
TjVrfXaM/4HBqT7lycigRR3VXZcl1zNTJKv0Br3g71ZmSmFNjnTPhul/BA6H
73iU3lAD/A4wIww9hKl5Gu2Hwa9W8TYXyRB9081sMGqN5GPTreRQwCh8HrwW
OG9mDzr5OU0GWbdyJ6/eNjgKvcScXu/sqSBWwUuqf8jNzzM9i0wqaOrqxfj+
BcT4JVUTrwb6siTQeNXyj05bAwSvwowt/Ckw+3vW5PlChz5ynH7pF4++K3PB
GNm+6mlJO/aeyLD1+ps5JxU3VulbH1FcUw42rRg1As/1NFm97Al5+an/0Oec
ZlbVvo0vGr42d1rayjbJ3s0vi8ynSkflVjm07RXxFsJH6bIMtx+RTetelEvn
v5L0m3ukpuayFJaA400T5+L3vyWJCV/J8eNbLJYr3s6kyLavnpKKoh2ydOnT
svKr93ie4/EX8LwL2qHCpnJpUr5ZUH5DbpSkS0bdLblUliqZgZuSWnleThUm
yQndLipOIb8K88CYAYaGHT6BcRlHONe7QfFj1YnNxIbdet/x4jNyrCBJEvNO
cou7nSCbgWXXD8lezALr5QbFDGDVBeUnt9rHqRlHVscVmzOFS+bOJ29njjx8
KKC12Hhhoe4H/DI5VKb+h0vcXp+6gF2La4Qm/9dgFrgZcO+8YmW05gfO1Gzm
fTknbGt9Tr4vPSnAx6zHn6OhuGBrfee5LcaqfoNVwDHrn+5glfH8g09FD3V/
wCl6U9R2RzEKnn+OP4Wj99uR6ZZ3dh+T+154S37w1Gvyvx9+Rv7yPx6i5wTw
ivrzx15QDvUaczwwz/uvb3xJXz9wHHhOAFvojbR8j/GbgHcf86FO2ryoxGhm
PHKofmY9/Zx6njOfy4wqfS5ngpE/RU1EAjkY9g2NO47l4T1XmA1M73Xg0yK/
JWKV8qqfrNhn6o96HND8EaP23zR6DOVWzvF4x3yKUy1ch5EXD7+kKl33gVHQ
35Xr2lOt63aNcixqxvXffGWkUtwDJcQrYAjwxukzVfSavhMyrFHLA68CLjmv
903C588jJR3FysvMa8GninRD/a8BOdnjimXKh9Dzgo6wsC2P71M/7db3dknd
hJs+MQ2TPnosQTtf2VEnjWMhqWitlO55XTt1TZthDynMNR39H/SQIiMNPBcH
xsww16PLZj+h/jPEmj1wAXpx8BlgN2qHyNKipl/fr1mvd3DOqoW1LewDvCMy
G+Z67WTcQ3vdpetxsa9Q8mtz4WTH3gLnhAa8XI9NjSvEmqFTDwPmoM8ErMBa
jfUenA1cCrxlgj4b3cQl9KecTA5HMw/shCa81fp1GJ+8HnKWgvJb4guWMduj
si5b+qGrG2nkcc/MG76BfKuwbpXV6XIz65y4mst43NAhgt9Aa9+uGAzchFbc
aC/byYMwmwbfCdRBcX9Hv5e8DV4XwCX4WIzSY6mTj8PfwlWXw887YbX8Ubzu
r6GGHfr0aeJhkBkr6FG1dbvYgxvUfyuYCRscrabfH7wPe/rLLfY2En8i3dmW
V7XK+FiRTE2Wy/ycR3ojd5kBYvhUve1VVRiuwzx65VLTyp/CceRTMpVMXd+d
lE8lXvHkTMwbil2KX72JxKOLRxS3uhNktuUQ/QFlWJ8/dkbST30iL/3uP2S+
LYb8DHVAD3Lux07JVcW6L5f92tQbuw4rxjwjLcUbZJviYKQ9Sc4lL5caT6Kc
T1ktxYWJUqGcprG1UCbmW9nf+uDtR+Rw4k4pLE/nv1+Zy5PyjFWy5I2HZdOm
ZbJ159dy/NxhyanMkPzGMvHoeWdZuEKKw/n8PWXW3pZc5Vo5zVlyQTHqkuIR
sCq5+LQcL0yWs54Lkqb33cS8lXKrJL3/gHKkLbrub4FX0ukd5Dm7lTPFw/fP
citg2yl9bkz6YWLVdsWofYplqAmuVW4DvfolxSvg1C3drrQMRvM7rtgNeIW+
FPLk11mfP+CNg1PrU03WlKMN5H02l97BqsU1wQ225wW8AvZ9tG9ldOYKHAr1
PeoDrU6dWGV9k5z+FL2UcNtuqcz4MHNTrPP5TR7VYp2fwShT+ztnfSnoT2s9
lOD1R4269VBy+BQy6ePLmuVAXr3szKqWlacz5OHXl8k/Pfgb+VvlU/CZ/Wvl
T+BU1KH/4in59m9f5+wT1v7v/WE5a3HMSHxthfzwoy3U9gFbTG3PcCJ68gFL
WNs7ZnCE+JDyZ5o9R6tnPCbOWt8+4zPLS5tN5XhYwCvD0Z1DD8/3WmMyQoB5
9K7Q9zNeGatZ90NfC1jl4BTfx2Yt3sOqe1h1D6vuYdU9rLqHVf/tsWrEz76Q
byDA3A5gFDz94Ddb1oEZpyo+B3hQ3l4troibc1PQRFQy17qE+jxoJZzrZT15
4h4pJe4A56ARRL0OPhXVAzVS2mEyrjErVcr6X44U6yWwCh623lEf36uyp5Iz
xMUd+VI9Vi6B+XrFTj2e8Vo9rlrx6TqPeoZL8bNu2E/9REDxNjLXYWdvmljz
w9oKrURTr5e6wB6rAwRWTTCzz+gZsF6j/4/fPDL9PN4cXu8aaGD/p3nQb2qA
E7q+T5sZK2rPZkKSX3pThu38D+ptnbpGV/nyua7WtZRI40RIV3uTvw48xHGM
s+Y3yuNA3cz43oW5pgPPgFXAWWjw8Dg0FsgpQa1wxs4fo+cE/ALu4TM7OcjQ
+cGrvXfEaBMwB4tePGabjN/DKHUa8I5thqef1eD5WorEVXuX9cFjSQeA2oL/
0AfCcaPWiYxZ6Cww6xVkVmITr6N212z9OaAxxPeJ+V98t/DqwOdyKT5Cu9Ez
a2aGkfEHDB5kfuQI8c7JXMFnAx4Zj0PjQxvurSZmNYfLifEDE430qJicbVCs
arCY5LM4hevIpM9hH6pbz4d6B93S11ck0+xb2SzFuSL7fPSoSgxuQEuBfMSh
Ywv5iHPnqIs4tPkV+erDX3G2ijjWd0JyU1fI4a2vGg/10GGF2yTpce+W84fe
kSUv3S9bvnxK93VCNq54Ur54/zGR+XPUZnz81oPC+eJu1A3PyFsv3iex21+V
Lz57UoryY6SsNElamy/IubNbxV11RTw1mEuOEIPjYz+Qd957hf1I6ADnFHNn
p/I5g7XyT7+TuCOb5fLNJKlqKZM7NXq+14MZxnwpbiuWnNYMyYEHrX4nua2Z
cg0+f4qDZ8pS5CRqeLknOOebqc8p0fPJ7FAWMexE/ilZrzgDrcJG4IOu+6z9
lZzhloz6oWLViaJkxbokOarYtefKQdl1M454tutajGzS10FfAf9yzDelh8ej
3rLI7nA8+pg3b/PpgVPAt/WOHtDqLozeb3f0OXh8g60BRmeDF72Gc1eKr5/E
fs0aoOOfzjlf1v+GWAvErBX1fv7eaF4i8Sla+zPzVY6P+mIsogcFsWqAeLW4
R2VwyvioL3jURlgDhKYCeopTxKl2OVLewtrf+kv5suzIRfnZK+/Jdx74pfzV
j34uf/nDXxhf9PseJ07BJx3eE/RBf89k9poc38/18nNiBXpUzEJU3AGmoN/k
ZMhjhsr4xZq53AW8OmO1gUavR+xhHdDM9DoY5mT+Yl/AQNQB4WeBeiRuo4+G
OS7m2Ov+UUc0GcCJ8sMPN1Pzgd4Wan+oGzozw9gwv4WtdqiO/SM3PCSgoYjU
ML+DHKrLI3VjtewJIUeqPOwhpyrvKSbGOJ5IyPVl76q3gPyooCObWOWbrTK+
SOEycizO8g6W8pwOz4fuD1tJJJf9qjLFOcPFjDeTp7+K3hcluk/oLWpHPeLq
K2OPzadreNNYUKo7a6LcyqfYFBoPMm8KuSVFtTlS01ktFS3l5De9Y3rOrWv5
AL2Rglz7oE8wmogG6uKAb8AMrPno6UCTnVN8lef21Ako1vTqY8ApnPNjHQVf
cYMbgGdJmBiCnClwF2AXcAvcDdnKyFIxGDUsRo/dT1wJ2RzdKev5AI4B7wro
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
bSrn5/aNNqNKpxwsLF5dr5uhpYYv+Ewra1movUGnDr6GNXnS+qOjDgc+BQ8j
1BgxB+toOICLwCZs4Dqj1FmY/QGXBqhz90l7TxWxqGe4jvpARws+ONEoPUM1
fN7oDHCsnlgATydoIlCjA9+Dhn2euIj3nRBnLhjauXH97gaHKyXYliNBxSlv
IF8xrZg9/UnFMmSSzDM7ucFwt45K1gdb9HNAhwG8mrLa//aIm3VNYJPhcl3S
N+iSllA+Pw+0mfBvMvO87dxGRipkaMRo5oE/nR2ZrE2OTVTzEvjU13VJmvxn
xdGqu0v3KsbkyPBQoYRab1J7EGy5IuEQPP5yWDObB1eah8471eDUZJJMIpce
nAraiIGTJscXOvWwPrctXs4dWirrPv2NHNjwgrz98v1SfHWF4VPIBxk8Jr6c
dVKT9bW4bq2U9OQPqSkMFHxDPybpipfVHz8uX374S/pKDDfuo7/fiT2vyVR3
IvEu6cDrsvpPT8qGL56U8YEzxNEmb6y4y2Kks+2iTI6h3lcp46PZ5I4yfla+
UZ629K1Hec51OHGXlAVKxdPlpedZnv7bL+nKI4+CM35JxWXJqc5RPpWv56I5
/O2gzndFuRNmfqlNV8xytH/ALTwGLXsq/CrcaXIs94QcyTkucdnHJFH5VZLN
+ojLSpRY6/cHPyXgEbAG+ACcSizU59w9JkeUh+1B1tVFoxtce87kRl1XnEEW
CGpsmOkFjqxCnhU0DY0LPhbALGATZoLBq+DDvlAPHGI9D1j5jc2ucnJBqA08
t8tyrX3MAPn44Gpi3EVo+3xdpu5ntyingt5PuRI0gPCsWDwLfKlpkH4VTr5v
qsWtC00m8/eUOygnPW3R/CloKQ4V+WV/rpd5vg/8/g+yJClXXtqZJN976Dfy
d8if+skj5FTwbgAefetXL8l3n/+QPOKfXvyI+nRgF3AM+VPAK2TSY73HdXKq
5XvJQ1hjU6wyWR9x9HmAP5HxU09YlFVlaoG8rc81+fAp0Zx4atf1eeBU9EbH
7LA+l/7rdgb4Z+RRRqvB97S1PuYMo75orzteGbgELuG50IXg2KGvQN2S+KqP
4bOAW2JfTv6Vw6eiNUD4HvUa/R1wBriBPlJFr/FD4mwTagWREtYKwWuAa8xX
1A09LjwOXlZpH4MmFr0pZN7Ar6WA/oClzLcqsV5k6GUFpJb1u9pBP7Xx2A9y
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
kf5K6R7Q180FiXt1DVmsQU5irjdSKiPj1XadrpfxkSxpDqTJxLhysnHr4UcM
g3Yiw25XmQffXq2cRtJkviOOmj5ix8Rp6Q/FS8Gt1UZnAa+9kWPSUrxBqm6v
Jk5AT4EceszqXlLek5P6idw5/6mE3Nuly71NLie+K1tXPS2RYDzngI/ueEXx
LkmCFVsMD+uMU+71lskL7kuQ5UsfljOJH0hl8W6J2fOmTI9nynhgn7z6+x8r
Tr0kuXcPSkcYx+2Wyf4k+Ua514WUP8n5xPepCywpOkYtCz5je+iK5VeXyNOq
M9coLm6TD1//hZxNWi7LPn2L39XeXUuVR50iR8U5irs+R7bH7ZRCb77ccN9S
bLrOegR+j/ht4FwS+qgMaNFrLpEv5dqaB2Z9r6He570it/Rx4BX16dUXJU2x
CTp1aNZRBzxZcIr+FPuV++zV7YDiUoLyrGMFxssCdb9912Nl9w19PPMouRew
67CtD+L6AX09+BdqctA3gOtA94Ac+12KZ+BYeD1yrpATDO9AeEqcr21XTBql
jgKeS+BS0Jrfgp+FXr9I/YX1sFC8gsZio/VW/zp5G3GNmGS1E9DBU2NoPdWv
Ys7X8qrFXOqSzf5I9RmMgjfFn+FU/UIWvYNVx1D7U5yKLWqU7RkueW7FBvmX
h5+UR76Ok3/4+RPyN//1GLM9wB+++8KHXJOJP7oOY67XzPEe1PV+o9Wl7zKZ
VG+u4gb/CjwX+kBgFq5jHSfHUa7laNCxH8d3DxjDudyvFvQVP+Z87XaDAX9Y
Th4FrIB+wqn7GZxK4waPpfvXHY9q5oFF0FA4fn24BMf64UdbopwJ2VnmusEa
k0+83uaYGD9D4pR+LvoaLjW1PR7TaytYD2UWiH4ucCvn+Xgf4CC0q/CigOav
cb5G6idqpW6shjkbVdDEtVRKRU8Jz92c+hw2YA/mp4AZDlZl29qe03dCDTDH
Yg1rhYpD4ELws0BPqtTR8NlsLDyO++i5ZH0p8LtztIHgdwWL+BVwlT4aUzUS
mPUzr7t+qFlaZzqZD+8KFEtAeZS/zydNU2HpmO2Q4Vlk+3UTH6ANBxeat9mF
JuupRbmQ33KcHmLHHL2UGqW8KkvcilfwL/TPVUltv97XUiFV3V5pGVVs0deG
ItXibsiXHuJOO7HK5DgZLoX9IXcRazv2iZod6oM4FvgKTlrfWvSx4G2Eua8Z
m29FvwrFSsw9ofeFnhTqgE2KGSYbBDrvOVv36xfjF+FhPpWpA7YSE+bnq2R6
plYmpqpletYrk9O1thbXKnNztTI1VUUf2xHF/jlBLbCRXnzwX2rw35LahrvE
RRybkgL9TJjZikiP4h942OSM4t9wNbkcONXYpLmcmKggf5qbq+FxTI6mi8mY
KpDZybv2GAokEk6xNbRrnE2a6U6gxpszTopXIWRunHhfpDfReE2grzR2Usb8
e6UR3hHwl5hKkrHGfdTn7VrzewlW7aL3Q33OGs5AAdu++ew3suub54VzWAMn
5OTBN2W2+6h01e/jvkOKidCmw48JWvTP3n1UIm0J0tEYKycSl0tP9025nLpS
Du5+U2pLtynGrBDjwWHmoVYt+5WUFuyWk8fX6vaV5OUelbGJKp4fGK3+FR73
vOIpvDHAqZ595j5Z/qcl1Ii2d5fJiZPb9O9VLcVFSfSzSr97XqqHK+VS0Q32
m5BLhfrDXeu5WdhpcOl6jeFTyE+87rsuZ8vP0j/pKnR/ypuYrYhZKt2gT4dm
HbU/9KeSis/IqeLT7FvBV+l4YTJ502ab64Hr0P7FKkbtU6zZBZ6kl/BdimUf
y/Ar8C1mVinWoS8FbAHubFL8Ap/aavMYt+pjXysXcvIP0+rCkt45ZXpWwCR6
S/SSV4EngXPBF5e1v5Nb2KMCf1tzert8tG8la4jAqAVfCquHtzVAo0/vtVo/
i1OOn5LyK0effs5q/oBPqP0h9yOKU7qdrApLfEmj4pRfdt+plqU7jsrPXn1f
/lmx6rtPGV0f+i7wpIDPH7gUMj7Aq8CPnCwqJ6M9qpMD/3n9C+NboVvUr1ax
ZTGnwpqO2SeTTbgnml8IzyPU/4BdrOORY+0376H7hycf1n5gBLEKfApYZXGK
t/WSGAgetXxvdKbL+DfttZkdmxfh1FqTAWl7S8Sm141HFLDpX8AVnVxI/czR
fBPwLZvHhef//aPPEWO5Tz0+9rFQQ3x/0z2suodV97DqHlbdw6p7WPXfHqtQ
P6PfsuIA6geYHYJ+qH6iTsrCbiloy5bCsPGsdXIWs22tL9/OZd1dhFEmq76Q
GgvUzF3W6w8YZDwD8/h7KrAzvehPoRdWYr0EgT/oOxXhOYpL8NUstLXBPCdv
hJiWH92Ad+gbQ4fo1fW/dSLEel8b62qtpj4324ZpWBlU7ICHbLi/jms/ZleB
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
2ziVqQE6Ogpo/pgLYvEp12rVcy1OZXZGiVO3a/9M7W+UnArzVOBUmKk6WR+U
YzXdcriiS17cc0J++Ng6+e5/PSLfvP8JelBAR4G1GL4MqAGCSzjeDY7PEG53
6oDU/en67egrcJ/vW50gam4OXwL+YA3HJbTmwBFHp+7UAG9ddzzVbQ2QeGNq
jeBUwE7kKZqaX/YtLaDyK2gxTH7WAeuXtI/zUsAW8iBoJ6yGAjiEuqLhUW8S
q+BvSC0IsGrd6wavEjXAD3gM4xW151ZevdUR4lg4Dv2ZmGVldIAx5Qmji2H6
5qGvA19Xz0gnswpbB9ulecjD30e/9NKfaILnhVM8/6/tqpQB5S9Di30yout4
a2+jVEVKOQt1E/U7/Y0Ap4x/n+lLwdPJE3dL81gzPXLds02GP8Hfb8LkPdLr
yXrWlts+GDASv0H0sNpm6uj51zHfIr5lt/gW/OKb7eHvt33ML02jDeKd90tk
oZfYVN2FLLqQtOt78et9xhQ3BhWXw3q+2hlpVtzqNms6vYEGxa/vAzNWEb09
NhckrsBzFuvI1EKY2b3QD7tacJ48Z3tD0+xDjSgWYQ1ftrNSwCrgE+qKCzar
yvQqQuJ44c3MNElsqpVzv5jDRf0Hx5hf7aGv0sgk8gw7iVPQkU/O+6gp7w5X
kTvBk2lostP2p7BeBsUXLGOdDufx0PT5Q+VysyafuSDgXtD3jSk3i814mTM5
uxzkY8fGXazfTc8pP1h2s1a3vKR4OF3FHlM8Xi/Xr6fY+l4/eRr0/ovsh/XL
+FiVfW8DfB3zsxXs34yMVIhYvjU2Umz/Vm61eFmCXaek+NJ2aWs6Jb2hTFlZ
rpOJWInMThVJOADsKlW+dVbmJi7I7FiaxAdTpNd9QLrqPpXx3mRqBcmlFgyG
wFu2vvA92fnuE9TxXc97R6aVn8GPqSD9VVkaT7NcLsvU+xR7TiATEbwKeDeQ
xHyqUM12qcrbKN0VW/WxZ5g5hTnibtcOee4PP5YPN/1ZoK1vqdsvCzPXZHKi
Uvr0+xrqLZN333hM3t24Vo4d2yw1tefFaDKV98aLJCMrSbZufUnOZRzm9w23
+bsy5MaNFPakeoZapaPHxazqrr4Gcflr9NMe53cK34uOwVapDTZI7YDJ9IaH
Z1DPJTyTfqnqK5erPuWo7lzyKPwOoZvNR20PNUBoAX2YqbpK/V+B3ues6xzn
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
WNnNyb3C46HRAO79HwY6cwM=
           "], {{0, 237}, {427, 0}}, {0, 255}, 
           ColorFunction -> RGBColor], 
          BoxForm`ImageTag[
          "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
           Association[
            "Exif" -> {
              "Software" -> 
               "Created with the Wolfram Language: www.wolfram.com"}, 
             "GeoMetaInformation" -> {
              "Software" -> 
               "Created with the Wolfram Language: www.wolfram.com", 
               "TileSources" -> "Elevation data from NASA SRTM", "Projection" -> 
               "Mercator", 
               "PlotRange" -> {{-89.12583491500001, -70.37781738499997}, {
                40.299696824939325`, 50.709079558847606`}}, 
               "LonLatBox" -> {{-89.12583491500001, -70.37781738499997}, {
                37.33669151458333, 45.14836548541668}}}]], Selectable -> 
          False], DefaultBaseStyle -> "ImageGraphics", 
         ImageSizeRaw -> {427, 237}, PlotRange -> {{0, 427}, {0, 237}}], 
        TraditionalForm]], 
      PolygonBox[{{-89.12583491500001, 
       40.299696824939325`}, {-89.12583491500001, 
       50.709079558847606`}, {-70.37781738499997, 
       50.709079558847606`}, {-70.37781738499997, 
       40.299696824939325`}, {-89.12583491500001, 40.299696824939325`}},
       VertexTextureCoordinates->{{0., 0.}, {0., 1.0000000000000004`}, {
        1.0000000000000004`, 1.0000000000000004`}, {1.0000000000000004`, 
        0.}, {0., 0.}}]},
     Annotation[#, "GeoBackground", "WolframGeoGraphics"]& ], 
    TagBox[
     TagBox[
      TooltipBox[
       {Opacity[0], 
        PolygonBox[{{-74.12742089099999, 
         42.38157337172098}, {-70.37781738499997, 
         42.38157337172098}, {-70.37781738499997, 
         40.299696824939325`}, {-74.12742089099999, 
         40.299696824939325`}, {-74.12742089099999, 42.38157337172098}}]},
       "\"Elevation data from NASA SRTM\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Elevation data from NASA SRTM", "Tooltip"]& ],
     Annotation[#, "Metadata", "WolframGeoGraphics"]& ], {{
      {Thickness[Large], ArrowBox[LineBox[CompressedData["
1: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
/9lPWBxE4f8Aumfszw==
        "]]]}, InsetBox[
       FormBox[
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1: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
hBixs8ANBEGCgiUFQZCIwI22+X82g4dH
           "], {{0, 355}, {360, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          
          Selectable->False],
         DefaultBaseStyle->"ImageGraphics",
         ImageSizeRaw->{360, 355},
         PlotRange->{{0, 360}, {0, 355}}],
        TraditionalForm], {-88.2736523, 43.8618262447025}, Center, Offset[
       24]], InsetBox[
       GraphicsBox[
        {RGBColor[0.790588, 0.201176, 0.], 
         PolygonBox[{{-0.4, 1.25}, {0, 0}, {0.4, 1.25}}], 
         RectangleBox[{-1, 1.25}, {1, 3.25},
          RoundingRadius->0.6]},
        PlotRangePadding->None], {-71.23, 46.86120787494789}, {
       Center, Bottom}, Offset[24]]}, 
     TagBox[{},
      Annotation[#, "GeoGridLines", "WolframGeoGraphics"]& ]}}, 
   TagBox[{},
    Annotation[#, "GeoScaleBar", "WolframGeoGraphics"]& ]},
  CoordinatesToolOptions:>{
   "DisplayFunction" -> (
     GeoGraphics`GeoGridPositionDisplay[#, "Mercator", "ITRF00"]& ), 
    "CopiedValueFunction" -> (
     GeoGraphics`GeoGridPositionCopiedValue[#, "Mercator", "ITRF00"]& )},
  DefaultBaseStyle->"GeoGraphics",
  Method->{"OriginalInput" -> HoldForm[
      GeoGraphics[{{{
          Thickness[Large], 
          Arrow[
           GeoPath[{
             GeoPosition[{40.115057, -88.2736523}], 
             GeoPosition[{42.37, -71.23}]}]]}}, 
        GeoMarker[
         GeoPosition[{40.115057, -88.2736523}], 
         Image[CompressedData["
1:eJzt3WuspVV5B/DT9kttI7YSbINfxBq0wEAYcK40jYkYrprY9Is23lq0tSkI
WIYZLk5nRko1fiBpYhOs9yJxyk2pRRgkmjQ0MWlietEvxvPNaAqEmTNnZrh0
d+299l5n7XV91n29+/3/85ccD3PZZ895fzzP2pc57yM3vfejv7q2tnbrr7N/
vPfD+95xyy0f3v9Hv8X+zx/feOtffOzGG/7s6hs/ecPHbrhl10d+jX3yT39l
be3P2f+mH08QBEGQVQlURxAkNGuztL4VCIIMKQyNzecOQQ8EQYhhVqyv38Hc
4AUdCIJ4o7gBOhAE8UZ3AzsLgiDuGN3A4IEgiC1TGc4ctLmx+dxB0IEgiBKf
G6ADQRA1khuHbW5wOqAHgiA8RDeEHq1vL4IgjcPR8LkBOhAE2Yrmhn/kAB2F
8rMvXY07FhlEyG4Y6MA3ea5wMeAGMpSY3CCNHBg8soRbwfLqI+9mxf2J9B+B
Bs0N0JEzihgcDdyZSP+xuxEwcmBnCY0uBtxABpRwN2x0fIoV3/Pe2MSAG8iA
4nQjbOQAHe5sifGwQQy4gQwlMhq53AAdepbEcKIx+bezcO8hnSfWDRId+P6f
LN56cUsMuIEMPwQ3IkcODB6SGNdT0IAbyFCS4IbrdHTkdCyLsYwG3EAGHgUN
uxtJI8eodhZNjCA33gM3kP6ju/HqqSIjxxgGD4sYAcMGd2O17yVkBaK7UW7k
WGE67GJgSUFWMDncCBs5VowOIcYrZjE0N3zDBtxAOs8MjUMhbuQZOVbjuEMW
g4oG3ECGn4UbKh0zN44UHTkGPXgoYgS44UQDbiCDSJQb2UaOIdJhFMPpRsCw
ATeQQcTnRtDIEenGUOiQxLiOjEbAw69wAxlKJDcOJbsRuar0f9yxLIYBjbzD
BtxAes4yGjY3Ko0cfQ4emhhmN/IOG3AD6TmaG4eS3UgaObqiwyJG0LARdiIK
N5BBhOxG1ZGj+c5iF6PssAE3kEHE5MahZDcyjBzTPn93/WvHJ0aCG4RhA24g
/ceCRpAbBUcO5gbr+vq+avcGQYyCJ6JwAxlE7G4cMrmRZeQIAWTmRoWpgyxG
vWEDbiDdZubG4WQ3QkeOEEMkOkpcR4Fi1Bs24AbSbcLdyHI6GqLHwo3sg4ck
xrVkNMoOG3ADGUScbhxKdiOUDs/IkYuOZTGS0IAbyNiyQOOwjQ6LG41HjpSd
RRMj1Y28aMANpP8Q3Lgr2Y0iIwd/kCXosrKIATcQJCzLbhjosLvRfuSg7yxO
MQotKcHP9YIbyFBCc+PTXYwcFjfcdPjE6HrYgBtIh9HQMNAR7kaWkYO6qjiO
O2hitB024AYyvCS70dHIIQ8eZDG6GzbgBtJ/QtwYwMghDkt/+sV30sTobtiA
G0j/sbhxOMSNXk5H5ZGDjEZ3wwYORZH+E+hGHyMH3ECQdrGjsUQHwY1yI0fM
6WidJaUCGnAD6TBRbgzgAVm4gSDl4nPjcLIbDUaOEDcKn4iGowE3kP6T1Y1y
I0ePbhQaNuAG0nkIaMzp0NzIMnIEATIUN4howA1kqCngRujIQQckYOQgu9Hj
sAE3kM6T5kbekYOiB/WV9Rv//O7huqGgATeQ3kJ243CIG4kjh4OOvG70eCIK
N5D+k+xGlgdk09zQ6KjgRs0lBW4gXYWORiY3Kq0qNDfoaGQ/EXWhATdGmDVT
Wt8oa0q60XJVye1G1WEDbowwHIpjN14wOb1T1IhJD8JkcqO7VaWRG3nQgBsj
DEdjjoBEB7GVbSnsRjodMasKR8PnRqcnoqwTuDG+cDd44+hwd319ey5VgtDw
udHRyFHajfpLCtxY+chucDqUnSVzTy3Vq4rMSzs3yo4cwo0XH7xmcCeixmED
bqx82J/vUzddIDd6ZwlFw9iXNy5/9eS8uiqvnjrobrIbDU5HCfNGv8MG3Bhn
dDeEHvXRmLuxOetJtZwR8TJ5ryE+N3pZVVq4kQ0NuDHa1KCDhsaSGxodzI1X
T10+H4dobgxiVfG50fWJKNwYbWxuZNtZ4tDQ6OBu8FJ2FobGmY2/derRflUR
aJRwo9yrXwUacGO0cbiRYfAgo2F2Q9JDdsNLB0dDtI/njka40fWJKNAYc7xu
RNIRIobHjU2DG2Jnobhhp6PxEznyudHgRBRujDkUN4J3lnA0WKdzhc2NTYMb
jsFDd8O+s7RcVaq7kRMNuDHmEN0IGDyi0PDMG3Y3jHQY3bAMHkGrSvr7+dDd
6H3YgBtjTpAbfjpi0UhxQ99ZHG5odAStKnQ9OnQjMxpwY8wJdcO1sxRDY+7G
ptUNefBwo0Gmw+0GRQ+PGzIacAMZViLcMA8eCWhQ3PCOHIIOihvLxx3RbrgB
8YwcTjd6f/jVhgbcGEmi3diiI02MvG6InYVCx2LwiFtVKIPH4NxIHTbgxkiy
tvzStsidpSc32A87s7E3Bx2FRg6vGyVPRBOGDbiBiChu6HWgsfQa/MJohLoR
SMcdrAVGDteqUtGNIsPGffsvWfOl9Xc3UjBeOihNoSOjGwINQQdZj3tMdJRa
VRQ0srhR7bleLI985nLmxj/de5nerx95u9cTkLICmbpx04VbrU5HOTdCBo97
THSUWlXsbvR7IirE4HW4Yfw8K8UT2DKUqG7oDaEjQo+8bsTScU8yHQGrSn9u
uNBQxHC44UDD0VBPYEsP8bsRiEkoHXndmEyuNOrBv82IdEh6FBk5LG70dSLK
buTPvnQ180ERg6OR0Q2iJy89d4FeYNIqkW44PaHTQUSD4gZHgzdq8LhH7oKO
/G7oaBRzI3LYEBegTYxv3pNz3vDScfLA621uiK6vn8/68olL4EadZHZj0bn8
jdwQeoTQcU8yHaTT0exuZDwRpYjBW9oNIQavww0hxmRzOyvcqJNCbgg9Grrh
oMOih4GOmR45R45kN4oMG3QxSrvBb8bGQgyHG4oYcKNmirrhpaO0G4E7i+qG
NHisrBuhYjjcyCWGgobRDV0MVvZJuFEnpd1w7Cx0NFLccAwes0/mpcO/qqS5
kfNENE4MjkZeN2QxdDQUN/iYoYiBYaNyKrhhGzwyujFD410ON8g7i9mNZDpc
aBRwwzNsRIuRfdhQxDCiIdxwiAE3KqeaGzodld1wTB0SHVY3yMcdvbuRIkbG
ww1dDBsa3A23GHCjcthd/fRNF4rW3FkKuEGiw3fc4aJjPng8fyhuVUlzIxWN
tdnrSlLEyOKGUQwbGvxfTb9nfGjAjcqZ0vGJi+aVDCnHCPsdg9DI6AZhZ/G4
sUWHVY/u3EifMbK4YRPDiIb4PBENuFE5S24oXWYkoyTsN23ohm9nIdFh16OE
G5EnonnFsLnhRcMhho6G8km40WdcbvgYiZbkyb/6ff69lMGNzcsXaGSgY7Gz
+OlYGjyWAGnoxtawUUKMCDfcYmw4xYAbPSfADTImXk+YG+JJ6a3c8B13UOg4
otIx18NAhw0NghsqGm43yokR5IZXjA2fGEFuAI3KSXUjBJOnNTfS6ZCWlGA3
chx3mOh4vqwbNjRKi0F0gyLGBkEMuNFzirjh9ERGQ34NfiY3stFBGzyOcDq8
ehR1o44YXjeIYmzQxIAbPaeqG7PqblAGj6JuJOwsR0TddMS64UGjphgON+hi
eJ+tATcGkX7ccNNhdMOERqQbCTuLj47ni7hRXwyjG+XEgBs9pys3HDtLiBv5
6XAOHkcUOnQ92GcyutFKDMUNfjNevK2UGHCj51R2w40G75ff9zadjmpuhNNx
RK9ChwMNpxsqGm3FEG7IMwbdjQg04Ea36dAN485S0w33cYemh8ENhY50N3oQ
g1XfSohuxKFBdANo1E+3big7S6AbGegIGTysdHA9otzoUYwzt529/vGzQt2I
RgNu9JyadAS5Ie8suhtONPK4QabD7IbQI86N3sTgDXUjBQ240XPY3f69my/i
7c0NMXi0coNGh8sN1lA3+hRDd8OPxv5Z4cYqRnZDaQ9oLO0sAW5kpsN33OFC
4/Tj1zEcWL1u9CxGqBtzNNLogBvdZubGNqlmQ9IlSXGDLSzznaWFG4TBw+MG
r5EO7kb/YgS5kQUNuNFzNDe2FWIk0Q3+V1oLOuq7IQYP3s0Xd4myW3XyxQOs
bjeMg8dQxKC7kQuN9b88y+sG0GgVnxvZGMniBqdj9t3iRqPUyDGZ7OGVDeHv
3TEl4sTfsHJDeKeHGw9fp5TR8eKD1/CfMsXh05f2LwZHI8wNHIqubtglGeJG
mCQCkxQ0FDdY+c7S1g29XA/+8Cvvq6cOKvMGL79U+RMv+dv3MTpY52LMPva3
ohg6GjY3cqEBNzpP4LwRyQi79p++aavpbjy9b/caLXXQEJ39jod5+YOwfDfh
5Tfpm5/bwcqV4G6EiZHMSIQYk0Nv9A4bGdGAG50ntxtmTBQ3QgExunHvB859
4MBFrAoUP/zRO+QSefE6Q3SD08H1YP985dh7ePknhRW83/jMlh5JaJAliROD
1+1GXjTgRuep4sa2mRvye/iEAWKbN7gbSt2MeHv0sUvEz5U/1uOWhP8YIcYj
/7DTXYWU0HoZSRHD60Z2NOBG56nghoZGMCCyGxwNhxt5GZE9+eGPdsh1q6LE
6waxjIivH3m7Xgcpc+VmFLBu3vo6uRQx3G6UQANudJ7WbpAASXFj3jvmjWZE
dyOouSSxuWEs/42Of/INcgUgxhrFcLhRCA2KG0CjYbpxwwxIHjfusJbISCIa
GSWhuCF+QUUMd91oGN0ohwbc6Dz9uWHQY2qF/HGQG3Y0vIwITEq44d564tyI
4CLajaJowI3Ow+78Z265WLQbN5YAmT3JZPZsEP7x7XuoboSgIesxefZNokZM
HMliCK/OiM2NFDEoaMhuVEADbnQexQ2lrdGYV7jB0eD1uxGFhu4G6/qDr508
+wZiQ52h+KMwwpJLjCQ3iqEBN/qPm45ERrK4IeiguhErRhY3cpXIS6IYoW4w
LuZulEQDbvQfuhsRkjRwIw0N3Y0maBjLbsnxx84RzYUG3Q0+ZkzdKIwG3Og/
KW54GantRjIacGMQbgCN5snohgJILjSobuRAA27ADYSSEm7w5nVDRgNuZHSD
goZwow4acKP/FHJDPNtz/hYccCMrGqvtBg43+k92N44t/up58SL6dEBqubGN
VXajEzTgBtzoLRndUMQwvhFHHCBV3NgGN+AGQkwWN7xi6HpsGUJw46nFM0Wt
bmRCA27ADYQS9kfw1fdf4G0WMTyGuB9PkdBgFe/bkxcNuNG/G0CjbfgTDs98
Y/pc5Sc/erG7FFtCSzdEd2Np3siHRp9u6GjkcoOIBncDD6aMPEIMUf4Zrx68
T9xwAe+TN1wYXcWQr7zvbXq/LNXqRlY0ZDc6QQNuwI3m0cVQ9KggBr3sN/qK
CY0cbhjEgBtwA1HiFsNLRxMxWJ/Zv/eZ2+dV3cg6ZsANNxpwY2yZi/GARwwb
HfXF4GvLVAy5y3okuOFCA240PxSFG82zJYYomQ4WIcZTH72Qt7QYHI1n9l+x
6F6bHrFueNAQbrBLFW506AbQKBqDGCFubH7tUlb2KwgxlJaYMSQulBr0iHLD
j4bsRnMuHGhkcaPPww240SpWNAh0cDFYzzywndVBRxZA5k8O+cR2pxsGQALd
IIkBN+DGOOMRw+mGIoYo/zXdekQAIsQQpdFxBdyAG0iukMSw0GETQ3T9C66d
JRQQXQyZDqIeIW4EoAE34MZIEibGMh1eMZTBg0iHDRCHGKGDR1E3+kEDbsCN
7IkUY9YgMaLpEIBwMb7vE4NOB9xIdIOOBtxYmdQXI/S4Q3Quxs3bp/3EVivS
MWA3bGjUd6MaGg43gEZ0GooROngsiaGXAIj7uKOQG4sjjvZojNMNDBt5M/3v
4P2XNBeDQsdCjMuW69LDAYiNDrgBNxBHFjPG5Z2I4aDDIkYAIHQ6Crlx7wfO
hRu6G+IlKumNdmN9/fzW1+IwIokht70Y+nEHTQyCIWQ67G4EDxhjc4MjQHdD
pkP05IGz4+pWZc2Z1ldk77GIQdKjjhiibHtiNzVcDLselsFDOe6wuJGERldu
ONBIdyMIDUWPM3efw5pRErmzeeMP5a6vs0mDzRt7WUGHLQQxrHTUF4N18thu
1mQ6lgEh7Cxwo74bCh1yczEiuyGLIYrBQ0mIGKoeDcUQzUTHZcSdxeRGKhpw
I1EPhyRBbhjFUPRofb22T6wY0/YghkxHncGD0VHCjenbHd/1FrhBKZfBTUfE
QDJ93NApBuiYZBNDtJkYBQYPz0Mt7HeZXua5hw24EVR2pdPpcDOyceDsjfm8
4UdjtDtLbjEK6kEXo+jOougxnTc++XsLOjKgMRI3MqIhdpZoPRRJ5g6Q3RjV
4JEihkDDIkZmOiLEKEjHsh7cjQUdq+aGG42u3OA7SyId84viW3tZQYeSKmLk
0SNFjILHHZIewo2MdMCNxMEjUQxR0MFTXYx4PbKIUXzwuHnJDU5Hoh4cDbhR
jY6FGHsWVekI1WOVjjuaihGmR3YxCtBxmc2N9MEDbuSiw6uHJobe8Q4eiWJk
RcOjB/tdpmI8unvaAm5k3VnmehjdSKGjKzdeePi3S7hRGg3v4EEQQ+146EgX
Q6cjKyDajMHFEC1DR45npG/V5kY0HXCjKB0RYsh0rPbOshCDX5UZ3FDoyLu2
GMQo6UbencXhRtxxRz9ueJeUobjBmyLGyg8ey2Jsz0sH10Nc9QKQaEPMY0ZF
On5wy2Ws5dwIHTwEGj244R02Ondj/nrbg7/LL4r1f9yejsbq0WERI78eRiVC
AVmIsUtqbTfEcQfXIw4Qiht0OuBGCTEm376CNy8dQ99ZCGJk1sNBhBsQfvKp
ieHUozAd8uARAQjRDSIdXblRaE+JeNuNdDFK0DHcwSNQjPx6OCYKBRDOhVMM
ux4d00F3g3Lc0Y8b/K+mdaPBfkCcG03EkOkY7c7CHxQQF2P/pXFh0aO8G0Y6
KHoEueEdPLpyYyhLCl2MQoPHsOiY/tbf3ZXc3Yl9+Ts7/u8JT2PdaEBH6OAR
4YaDDrhRQQwcd2SiI1UPRodXj4SpY1c1N+J2lmg6FD3mn4Eb5cXAccf8futD
j5KDx662dDj0iHNDHzxkNNq6QTncaOVGLjFw3DHJOXgk6VGWjsd4u9tZUtyQ
6ejKDS8a0Q+m5BNjbzoa2Fmy0hGvRxU6qurhpSPRDbGzwA0HF5oYSvuiY1iD
Rz90FDzueKy2Ht6dJd0NmQ7RtdlfEduwzd0QXDjFyGlIczqmb2raiI5+9Cg1
eDxWWw/3zpK+p0wnjRvPY//8xm3niU7/HJ85u0kZGhv/eo7XkHJuxIqRwZDs
xx0RO0sTOib5B49IPSrSUUkPIx0pj6dwMXh7c0Ou0ZASbuQTIwmQtoPHCh13
ROpB3FlyuFFDD+POEuTG125+k8LFINwwGpLXjWJiRBrSfGdZiYdoyw4eMccd
VjrK6qHvLEQ3HGLw/t0H3zgIN0SnJzCLQ0siGrob8rFneTHCDBktHZOeBo/8
O4uLjuJ60N2QxHiTDY2BurGx/w28FEAUNMRb+TUSgwRID8cdq7WzBOvRgo6C
egg6HG4si+FCY+hu6IDohgg3OhPDz8hoB48yO0sMHfl3Fj8dpfRYW4Qgxljc
cBgiPlbF+Nbeadtb4WJktHRMhjN4hNFBcqOUHnzekOmwiOFBYyXd0A0xiyFa
/PLfnfLTsbM01yPzzhJAR05A5HlDfGwSw4/Gyrsh6DCLUY+O1I528Ci2s4Tp
kfkh2mA6kvTg9+HLj1/Hyj74/JXn37njzayMiC1M4MZy+d3C/6ttdQN0dEzH
pOzgEaZHtp2lCh2yGBwNLsb973qr3GVA/GisthtzMb5w6eY39/C66GjNQhM6
sLNkp4M6eMS4EaCHIsaZx6766RffyT6jiBENyEq6wb/wE0d3ss7c2L3oKtBh
0WPXovLH4jOrMHgU3lmoenRAhwsQoxisrzx8tdcNCZDz3HqsmBuyGCY3pmWf
serRmoWQwWNXbAdMx6T44EHSI89xR6obqh5iVNDF4KW7IWobP1bDDbGSyGLY
3JjT8YVLJ9/aM1Y6VEbi6FjRnSVAj9Tjjjx07PKKEYeGA5ChuyG+HF0MhxtC
jxkde1RAWptApyOfHrsijjtWemch6ZFhZykvRhY3dEAG6oZXDK8bGh2SIa1N
aDF4zPUYCh3suu6EjqSdpbwYed3gvXPHm2VABuEGUQyKG8s7i9Rvi7aXYRB0
rPTOkmHwcO0shcUo5Mb9734r79pwQhGD6IZ18Pi20vY+uOnAztJWj3g6QsTg
D6cGiVHaDU7H5NQFTbq+fv7GCxd5G0oH0Q0aHb0b0sPg0YSOWjuLR4/44w7a
jGF8dLU+GgN1Y+OFT228cDdRD7obgXR0CkgPdDQcPGrRYdUj/rgjWIyrZoUb
YW6wrq/v89IR5Ib5uMNDR3eGtN1ZxEA4Wjrid5YwMahowA1285gVwg1e9+AR
6oZ58KDS0YshnA7Wkw/vytKg06cff+icJmgIOqaXZGs9IncWqhgdudEQDbob
MzSW3GBlPtjoiHMjBx1tAOFcnHhoJ7vYhR6nHt2ZXg6CrT2IIVLxpNSlRwQd
ZDHgRgY3xOCR0Q11Z4l0o54hczGO7lRGBWZILj2MdHQlhpzqdBj0oB93BIrR
Eo0hu2GlY833+pT4wSMDHUUM2RLjoVktu4YYP1IMEUoIMVrz4EoLOsx6ONzg
dyMjgiwG3Mjshr6zpLtRjI4MjKhiPOShI5ch/Ysh0ogOVQ8jHfMZ46mrXz52
DSvngiAG3MjvhkJHFjeWdpZSdIQZMj/2fEgTg0xHnCH8p5x+rOVLYkPT4rjD
TIfQY0sM3mPXvPTU1azZ0SjtRls08rohH3fkcmOLjuJueBjxixFOB8UQIYbo
gKaOSTeDhyrGjIuXFiOHmDp6HjaG5cYyGn43xHFHLje2dpbadEy79dAqRYxY
N2yGKGIoerQmgZp2dEw7F+PYdae/e5VRjBA64EZBN9bX97Erfeh0BHORiY4T
D+3kPfnoXtkQ0BEthiijQ+ihuyH0gBvN3Hj+btYSdEzfNKxnMRLomHPBPn50
r16jIQPaWWoed+hiCDdeeuqquR4WN+x0ND7cGI8bJejYPLq7HB15xAinwy2G
15Ch0DEpP3jYxJDd4HXrYdpZenGjORpRbvjpkN3gdGTWowAdmcUg0yFWkuiy
mz2gqWNSjA63GJob81MOrocOyCuzdvKylHG6MW32444ZHVn0KCXG3I0di+YX
g3VYYojkpYMihs0NBRAZjWU62g8b/bjB0HC7YUIjyo0SO8vR1MGjrBgGOuYd
sxgiazleB0cXw+uGrMcrBjrgRuKwEe9GZjqOxtNRSQyNjrkYj+xZ6sjEEEk5
KV2Ice2s2dxQGkfH6N3Ylt2NzMcd4XTUFmNRsxh6fVyshhhyQulYFiMADckN
lxX6c8MEHU3eG1BxozkaPje2FXJj1jvZr3zy6E7eXHS49WgmxuyJ934x7Iys
JBdyiHRoYsS4MaOD6oZRj1ZoDMGNbaXdUOhIAuSoZ/AYpBizrrwYIm46LGIE
u7EYOcLckPVYvJgFboSikc0NIx2RhljoaCKGeFEwxAiK8bjDKUYwGrob4sWw
oYUbRjTquMHpcOhBBeSoSkdDMVK4GKcYcjgdzAS3GNHXu1L5mWCsLxtqmD1a
ufH5K8/v0o1tNDc8dAS54R08qIAsowExhht+P3iv99lzLWxziLUKFEoT3SiK
xv3vav9ISm9uEOlwGwIxViCzGcP6yhGtDdxw7CmjdGNbRTcy0CEDwt+j46T+
BlwQY2gJcSMYDeUlKtHDBtyIQqOUG5TjDqX8b8TY+gzEGHiG7MY1I3NDRaOh
G/TBQxVD9OEdPYuxqk/fypLSSwpzI8vhBtwwotHcDTcdVjFkOnj7E6P1pdl1
Sg8bjnmDiIbDjQposAu2ORqdu2Gkwy+GTkeyIRCjWvp3Y/r3JnznSrjRsxvy
cUeAGDY3wg2BGJUzZDdqLCkvPXdBD3T07wbr+vqtEY+z+OlwGgIx6qfC4Qbc
KOqGD41KbjAxWKMfog2gQzIEYrRKhWHD5kbQ4QZzQ6ejNBqr4oaLjkQ3OBdC
jJRndwTRATHaZshuVBo24IaJi32zqlykPLtD0KH/zdd6IUbb9O+GQGOcbry8
8Vb+DoGL9wls7AYX4/j/Wrlg/0ru2vLfYU2se9KAGM3Tyo2IYWP13JBBkHty
80L5/54+c7Gorkc1N4QY7p588YDS6dQRenaR1Q08fStv6qCx8m7YLn9vZRCC
Kn4FGhrpbtwt7SbT6ji4m5GOIDfARYlUc0OnI9mN4mjcLx2KijFAmQQSL//0
zp5ecgdrHTdO/GI/a5we8+OOWm5AjHKBG2405lwcv5i3Byh0N06fOczq0yOn
G6LiwZSag4fXDYhROq3ciEOjmht37ngzf48vIYbSfvQQbkh6TCeB7G6wH/bC
zw8obpz4xe28QYAk0uFwA2JUSE00crtxTQk3OBes9111IavDjX7GD8UNCZB9
y4CUdSMUkBQ6jG5AjGqBG4oYnAtRrxs9jB82NxRAHHTkdWPRfV5Aoo87FDcg
RuW0coOORgU3jGKEutFKDy8apvGjkhuibkBC6ZDRgBhNMmg30tFwiMHRkE9E
Q/WoAwjdDdZXTx1k1QFJc8NGxz69NkCC6OBuQIyGIbuRAY04NxQ0Fm6kDhtu
MeKGjSbjR4QbokKPam44ACHSgadvNU/lYaMTNyhi5HKjwvhBdEN+vpaxFDQY
EbncMALipoNzsfkv5wCNtmnlRsqSkuIGXYy8bpTT4+TmheJJX1qXWJhMDs96
yNSDrF46Crmx6G1cD+NJqRCDF260zXjcCBWjhBuhywvlOeqzK+jIwgRKrW5w
Ohx6lHaDV+hhFANu9JDKhxt53SCiESdGUTeU8cPWyeQSbzO5sUWHY/Co44ai
hyIG3Gie+sNGhBs6GnQ3UsQoisachc3tdB9qumGjo6YbrDY04EbbtHIjcdig
uJEoRjk3hBi8MzR2pehRyA3jzhLuRhAdcGMYWUk3sohR7lBUiCHQEI2jI9wN
zxGHY/CAG8ikxeFGUTcyipHXDV0MoxtxdJR2Q9AhXgZrcSN9VaGiATfapokb
psONMDS4GwIN5WVoXblhE8PmRigdCzTKuiF2FriBNFlScrnBym5/IS6yoOEW
w+FG0HFHNTc4Hcd/eQBujDwr4EYhMRLdoIjhdoM+eFR248QvDzA64MaY02RJ
WW03FmJcSkHD6waFDsmNbE/9crtxAm6MO03ceGXWl2hoDMgNSYxLiW540aDs
LPXdwLwx5rRaUoLccKDR0I2gNypPd8NBxzIaRZ7CETJswI3Vz9Dd4IeiGZUQ
D8qI9xS1UXBy88LTpy6ylb/V+ZnFBw5A6G7YdpaVc2OLDsczzOFGw7Q63Kjj
hoKA0vuufZvxk39/3Vanr0y34+AWg1fwwj/QAQl1Q6cjwY2Yp3DUdANo9JmG
hxvLbsQcbvAXSLplkBGIaJAbihiKG6eXP15+2VqYG8rOAjeQyhmoG1yM//nQ
b7LyjxN9SHTDKIbuhviRuh4RdIjBA24gNVPycMO/pBDdUNCQxeB94urf+I8/
ObuQHl43HGIY3dAHDxmQCDo0NOAGUjZthw3JDdKwoYshu8GbVw8HGpwLtxgO
N4x0xOkxO7m9A24g1TIUN2xi6G7k1cPoBpELrxv6zhKnx+za+Rx/P8DSbgg0
4MaY078bbjFsbuTSQ3EjVAyvG47Bg370wd3gjaIDbiABaX64Ieh4yUQHv+r/
+4bXMRbi3EjS4/pphRtxYhDdcNBBGT9kNyQ6VsENNxpwo0maDxs2PYQYFDS8
bgTrcf1Wp88UTRCD7oaXDoceihsLOuAGUiRducEri5HXDZIe1xvQSBEjyI04
PXQ0wumo5kaQHnCj03TlBr+if/Kx17OWc8Osx/Vq77t2WvZj0tEIdYNCh6yH
zY3J5LOLk9Le3CDSATc6TTE3Ag43FDHklnODlf2UuR4aF9OnmC7mjSZunLY/
zqLr4XCDl0AH1Q0ZDZ8b6XTAjR7Tw7BhE0Muu8D/64MeN+h0sB/G++MPncPL
b4PMhbyntHLDOHismfLvX9pjoeOzZDqauOGlA270mLZuUMTgaPzkI69jZXS4
9fC6oXChuKHPHpXdMJpgVMJY/m9tbvjoaOWGWw+40WNaLSlEMRQ3vHo43HCL
MTl47uTgG3llPXKhcYZswvcPXKF1L6uDC10PmxtOOtq6YaPDjwbcqJ/6bgSJ
YXTDoYfRDYIY58puyHoQ3SCa8INbd+r96vsvMFmhuvHM/r3uYcNCh+rGjA75
L5WGG0hYiqFhdiNCDIcbRj0UN8hiGNxQ9PDG8NMPLTXdDV46HbOryeCG0ANu
IBGp5ka0GF43hB6KG0YxpGv8XAoaqS3jBp2OxeBBpANuIKQUcyObGBQ05MFD
f6DEOWAM1Y3wncVFx0IPkhszNO6AG2NOUTfSxQhygzdKjJZuENAwu1FgZ4Eb
CCmF3MglRqIbZDHKuHGohhu5dxY/HR26ATRqpgQaecWIdiNQjBrDRrob7eho
6QZ/G/P1B18LNzpJXjdKiBHqhnjSeIgYq+BGgeOOXtyY3tpnf4fVQQfcqJlc
bpQTIwiNWDEqLSlGN2hokNx4Zv+e792+p8xxRxducDqMesCNmkl3o6gYRDe2
Hlo9cvb6x88auRt0OkJ2Fh2NNm7YBg+4US0paIhLtagYXjcEF6JwIzsdMz36
ckOnA25US5wb1bhwu6GLkeZGjcONmm5wOrLuLH25odABN6pl+ncKhLhRXwyj
GzYx+h82KruhDx7PfnE3b+zOYnbDh0YpN+TjDrhRLfR5o5UYChoOMQbqBkPj
Bwf+oKgbnA4hhrsUOrpyQ+gBN6qF4kZDMWQ3vGLADYcbYmfJQkdlN2xorGlp
fT2NIl40movBSxRjEIcbDd0IGjwcxx3cjeNV3Hjh59PqPgCKhnG4UU0Mx7fE
0rcHDY2O3LCg0dyN792+O3FnEcPG8UxucBx4hRWix395AD50Fd0NcZ1Wk4F4
OwujMS43EumQlhRGx4HjZDcUEBQcHIUbXUV2I0WMdBm8t3NV3eBo8NZ04+l9
800kYmeR3eDDxvFlN9jHpnIf7liuiwu40WEEGhQxSsvgvakrs6T04wYvkQ7G
haBDd4PPG3I1H2yFGwOLfOE3l8F7U+FGITfodIidxeYG2Qq4MeB0JYM7RDcG
saSkuXFFCTdC6WCp6Ubn35xIt4Ebpd2gH3c8cNdbGBcSHXAD6TSF3aiKhuyG
jEZzN4iDB3PjyXsvYl3QkYIG3EDKhkIH3Eh3w0uHcGNBB9xA+g3coLvho8Pj
hntnkd3gdLAkuOGnA24g0fG6MZTDjUG48fS+XaxGOhQ3WE/MLm24gXSYwbjh
Q8PhBv2h2DpuHLvNQIfuBusT925LoANuIKVSzI3aw8aw3FDoMKLB3Uigw4UG
fxvz1t99yFCzem7oaNRyY0+QG5wOrodt2BDlPzKjG0ADSQncaOiG0MPrRtTg
ATeQUnG7MaDDjeG6YaNDdyOQDriBlMpUhpUYNobuBo+sh9GNkJ0FbiClUmbe
gBvBbkz+842ssh42N8h0wA2kVFbMDSMaA3JD0cNBB2FngRtIqQzADRoaq+SG
oMOrh5MOuIGUisONYR2KduAG6fkbOho2N8QfkFsP+84CNJBSKeBGmyVlVd0Q
f0wOPY7PXoAPN5BqgRt0N7xLis8N85JCcUP8YfHQdha4gZRK726Q0Zg/nhKJ
xjDckP/UjHos0wE3kFKBGzQ3Ch6KRrgh/ux0PaTjDriBlIrNjcEdirIbnOCG
932Je3RD/Aka9YAbSLnkdqMBGvzCmX48+3IauRF/KGp8/kbEn6Oih4MOuIGk
x0jHINyQxZC/nBJuJB9ulHVDfO0yIIudBW4g+TNEN+Zi2L8iWY86bkQvKRnd
UO4BIx1AA8mSYbnhFkP5umo+CNuVG+IeEHrADSRvdDf6RIMuhvyl5XAj8zt9
VXND3AkP3PUWMXjADSRL+ncjQgz5q+vEDRsapd0Q94NI9l8cGWF6diPL9zmB
jpaHG4obRa9ruIHkSo9uZBJD/hqLuZG6pNR0A0FyRXGjORqF/pvIf9kCD6bA
DWSM6ceNClO0iQ63G8UPN+AGMsT04EbNvVujI/VQNHHYgBvIENPWjSYndct0
wA0ECU4ONwYjxtJXPZn0cCgqu7H++Gta3SEIEhTZjTrDRiePBi5OSou74UYD
biBDTE03OhFDDqcj2o30YQNuIENMBTc6f6Yiu2ENDzfgBjLEJLsxsAHDGH47
S7jhRePY8t+71PqeQBBSCrkxFDHkaHS43Yh/Q1E8mIIMPcKNXEvKEMUQWaYj
8VAUbiArm4xuDFoMEf4l1HdjBe46ZDxJc2OlxBBZHHfgcANBrOF0xLmxYmLI
YV9XghukYQNuIMNNnBsrLIaIkw64gYw67Ds2CI0xiCHCv9JChxvH/non3EAG
GroboxJDhH/VoW5Qhg24gQw3FDfGKYacZTrcblCXFOHGyO9bZIhxuwExRCQ6
8iwpcAMZbmxuQAw9i50FbiBjj+4GxHCH3TlZDjfgBjLcTL9pIUZgnHTADWT1
w79pIUZoLHQELClwAxluIEZ0+F2X6Mb646/B/Y8gY8syHcFuAA0EGWckOgLQ
gBsIMvIsdha4gSBIWBgCcANBkND46YAbCIJocdGxjAYehEUQRIQPEhg2EAQJ
jYEOuIEgiC8qHXADQRBCtuiQ0IAbCIK4Mz/ugBsIggRGoQNuIAhCiUwH0EAQ
hBixs8ANBEGCgiUFQZCIwI22+X82g4dH
          "], "Byte", ColorSpace -> "RGB", 
          Interleaving -> True]], 
        GeoMarker[
         GeoPosition[{42.37, -71.23}]]}, {
       GeoBackground -> "ReliefMap", PlotLabel -> 
        "The distance between the server and the current point is 1447.92 \
kilometers"}]], 
    "BasicGeoRange" -> {{40.115057, 
     42.370000000000005`}, {-88.27365230000001, -71.22999999999998}}, 
    "GeoGraphicsOptions" -> {
     GeoBackground -> GeoStyling["ReliefMap"], GeoCenter -> 
      GeoPosition[{41.242528500000006`, -79.75182615}], GeoGridLines -> None, 
      GeoGridLinesStyle -> GrayLevel[0.4, 0.3], 
      GeoGridRange -> {{-89.12583491500001, -70.37781738499997}, {
       40.299696824939325`, 50.709079558847606`}}, GeoGridRangePadding -> 
      None, GeoModel -> "ITRF00", GeoProjection -> "Mercator", 
      GeoRange -> {{37.33669151458333, 
       45.14836548541668}, {-89.12583491500001, -70.37781738499997}}, 
      GeoRangePadding -> Full, GeoResolution -> Automatic, 
      GeoServer -> {Automatic}, GeoZoomLevel -> 5, 
      MetaInformation -> {
       "LonLatBox" -> {{-89.12583491500001, -70.37781738499997}, {
         37.33669151458333, 45.14836548541668}}, 
        "PlotRange" -> {{-89.12583491500001, -70.37781738499997}, {
         40.299696824939325`, 50.709079558847606`}}, "Projection" -> 
        "Mercator", "Software" -> 
        "Created with the Wolfram Language: www.wolfram.com", "TileSources" -> 
        "Elevation data from NASA SRTM"}}},
  PlotLabel->FormBox[
   "\"The distance between the server and the current point is 1447.92 \
kilometers\"", TraditionalForm],
  PlotRange->{{-89.12583491500001, -70.37781738499997}, {40.299696824939325`, 
   50.709079558847606`}},
  PlotRangeClipping->True,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{
  3.770787868048358*^9, 3.770788312932111*^9, 3.770799061150132*^9, {
   3.7708076468266983`*^9, 3.7708076553765697`*^9}, 3.770807889971727*^9, 
   3.7709242733157997`*^9, 3.770927226154948*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"a762a46f-34e2-47b3-a029-e49fc53a3868"]
}, Open  ]],

Cell["\<\
This period can be roughly split into two parts : lag and data transmission.\
\>", "Text",
 CellChangeTimes->{{3.7707885611380997`*^9, 3.770788562780731*^9}, 
   3.7709252774261217`*^9},
 TextJustification->1,ExpressionUUID->"cc431526-a01b-448d-bb0f-96aea841d069"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      DynamicModuleBox[{Typeset`open = False}, 
       TemplateBox[{
        "Expression",StyleBox[
         "\"Lag\"", "IconizedCustomName", StripOnInput -> False],GridBox[{{
            RowBox[{
              TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["Labeled", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Byte count: \"", "IconizedLabel"], 
              "\[InvisibleSpace]", 
              TagBox["112", "IconizedItem"]}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],Dynamic[
         Typeset`open]},
        "IconizedObject"]],
      Labeled[1, "Lag", Center],
      SelectWithContents->True,
      Selectable->False], ",", 
     InterpretationBox[
      DynamicModuleBox[{Typeset`open = False}, 
       TemplateBox[{
        "Expression",StyleBox[
         "\"Data transmission\"", "IconizedCustomName", StripOnInput -> 
          False],GridBox[{{
            RowBox[{
              TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["Labeled", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Byte count: \"", "IconizedLabel"], 
              "\[InvisibleSpace]", 
              TagBox["128", "IconizedItem"]}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],Dynamic[
         Typeset`open]},
        "IconizedObject"]],
      Labeled[3, "Data transmission", Center],
      SelectWithContents->True,
      Selectable->False]}], "}"}], ",", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{
      "List",StyleBox[
       "\"Options\"", "IconizedCustomName", StripOnInput -> False],GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["List", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["4", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox["560", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],Dynamic[
       Typeset`open]},
      "IconizedObject"]],
    {ChartLayout -> "Stacked", BarOrigin -> Left, Axes -> None, ChartStyle -> {
       RGBColor[0.87, 0.94, 1], 
       GrayLevel[0.85]}},
    SelectWithContents->True,
    Selectable->False]}], "]"}]], "Code",
 CellLabel->"In[28]:=",ExpressionUUID->"db86aa9d-a11f-4492-967d-634530cf1ccf"],

Cell[BoxData[
 GraphicsBox[{{
    {Opacity[0], PointBox[{{0., -1.52}, {0., 3.5}}]}, {{}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6859999999999999], Thickness[Small]}], 
      {RGBColor[0.87, 0.94, 1], EdgeForm[{Opacity[0.6859999999999999], 
       Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0., 0.5}, {1., 1.5}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{6.9300000000000015`, 
             90.89750000000001}, {-24.952263417841987`, 17.977862853624888`}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 1]& ,
          TagBoxNote->"1"],
         StyleBox["1", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[1, {}], "Tooltip"]& ]}, 
      {GrayLevel[0.85], EdgeForm[{Opacity[0.6859999999999999], Thickness[
       Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1., 0.5}, {4., 1.5}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{90.39750000000001, 
             341.3}, {-24.952263417841987`, 17.977862853624888`}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 3]& ,
          TagBoxNote->"3"],
         StyleBox["3", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[3, {}], "Tooltip"]& ]}}, {}, {}}, {}, {
     InsetBox["\<\"Lag\"\>", {0.5, 1.}, ImageScaled[{0.5, 0.5}]], 
     InsetBox["\<\"Data transmission\"\>", {2.5, 1.}, 
      ImageScaled[{0.5, 0.5}]]}, {}, {}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0., -1.52},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.05]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, None}]], "Output",
 CellChangeTimes->{{3.770788575523486*^9, 3.77078858365662*^9}, 
   3.770799061237007*^9, {3.770807647279428*^9, 3.770807655499325*^9}, 
   3.770807890185049*^9, 3.7709242735174437`*^9, 3.7709272263054857`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"09c01dc5-8b68-4f39-8f6d-2aa8da79c59c"]
}, Open  ]],

Cell[TextData[{
 "However, can this response be instantaneous? We already know the answer. ",
 StyleBox["No!",
  FontWeight->"Bold"],
 " It is impossible to transmit information so fast."
}], "Text",
 CellChangeTimes->{{3.7707888100944233`*^9, 3.770788821729472*^9}, {
  3.77080567699772*^9, 3.770805693552888*^9}},
 TextJustification->1,ExpressionUUID->"2395d1fc-be38-4fa9-b18d-a809672e73a0"],

Cell["\<\
Let us look in the essay at some fundamental reasons which do not allow us to \
do it. In the following paragraphs, we will discuss several constraints from \
basic information theory and physics.\
\>", "Text",
 CellChangeTimes->{{3.7707891297279587`*^9, 3.7707891361396503`*^9}},
 TextJustification->1,ExpressionUUID->"73d0f245-e6cf-46a8-b55e-454e2614086b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Lag", "Section",
 CellChangeTimes->{{3.770789242067165*^9, 
  3.770789255533225*^9}},ExpressionUUID->"328af089-abbf-49d7-9b72-\
cec4f32c9009"],

Cell[TextData[{
 "The lag in the response time is due to the time required to establish a \
connection in the network.  In physics, the ",
 Cell[BoxData[
  TagBox[
   TooltipBox[
    StyleBox["\<\"theory of relativity\"\>",
     StripOnInput->False,
     LineColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FrontFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     BackFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     GraphicsColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]]],
    "\"(physics) the theory that space and time are relative concepts rather \
than absolute concepts\"",
    TooltipStyle->"TextStyling"],
   Annotation[#, 
    "(physics) the theory that space and time are relative concepts rather \
than absolute concepts", "Tooltip"]& ]], "Output",ExpressionUUID->
  "95cc42e0-bc71-4704-82a8-19358dd06984"],
 " forbids instantaneous information transmission",
 ButtonBox[Cell[TextData[StyleBox[ButtonBox["1"],
  FontVariations->{"CompatibilityType"->"Superscript"}]], "Citation",
  Editable->False,
  TaggingRules->{NoteData -> RowBox[{"Landau", ",", " ", 
       RowBox[{
         RowBox[{
           RowBox[{"L", ".", " ", "D", "."}], " ", "&"}], " ", "Lifshitz"}], 
       ",", " ", 
       RowBox[{
         RowBox[{"E", ".", " ", "M", ".", " ", "The"}], " ", "Classical", " ",
          "Theory", " ", "of", " ", 
         RowBox[{"Fields", ":", " ", 
           RowBox[{"Volume", " ", "2.", " ", 
             RowBox[{
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"Butterworth", "-", "Heinemann"}], ",", " ", 
                   "1980"}], ")"}], ".", "\n"}]}]}]}]}]},ExpressionUUID->
  "fb449013-f664-4675-8760-4cfee0b74ca9"],
  BaseStyle->"Hyperlink",
  ButtonData->"00006BC4"],
 ". If that were allowed, it could lead to the violation of causality. That \
is why the theory postulates that the speed of information propagation cannot \
be more than the fixed value, which equals to ",
 Cell[BoxData[
  TagBox[
   TooltipBox[
    StyleBox["\<\"speed of light\"\>",
     StripOnInput->False,
     LineColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FrontFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     BackFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     GraphicsColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]]],
    "\"the speed at which light travels in a vacuum; the constancy and \
universality of the speed of light is recognized by defining it to be exactly \
299,792,458 meters per second\"",
    TooltipStyle->"TextStyling"],
   Annotation[#, 
    "the speed at which light travels in a vacuum; the constancy and \
universality of the speed of light is recognized by defining it to be exactly \
299,792,458 meters per second", "Tooltip"]& ]], "Output",ExpressionUUID->
  "93a6e450-2eaa-4857-8c13-cf9db59b12bd"],
 "."
}], "Text",
 CellChangeTimes->{{3.7707898776510077`*^9, 3.770789879004343*^9}, 
   3.770790070035707*^9, {3.7707901395327787`*^9, 3.7707901463669033`*^9}, {
   3.770790222114097*^9, 3.770790225840342*^9}, {3.770790378614305*^9, 
   3.770790395768577*^9}, {3.77080894105023*^9, 3.770808941056481*^9}, {
   3.770809262767577*^9, 3.770809262774169*^9}, {3.770809649253624*^9, 
   3.77080964925765*^9}, {3.7708099989568357`*^9, 3.770809998960628*^9}},
 TextJustification->1,ExpressionUUID->"2ddd215a-fca7-445d-be02-0c1aa9064912"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"speed of light\"",RowBox[{"Entity", "[", 
      RowBox[{"\"PhysicalConstant\"", ",", "\"SpeedOfLight\""}], "]"}],
    "\"Entity[\\\"PhysicalConstant\\\", \\\"SpeedOfLight\\\"]\"",
    "\"physical constant\""},
   "Entity"], "[", 
  TemplateBox[{"\"value\"",RowBox[{"EntityProperty", "[", 
      RowBox[{"\"PhysicalConstant\"", ",", "\"Value\""}], "]"}],
    "\"EntityProperty[\\\"PhysicalConstant\\\", \\\"Value\\\"]\""},
   "EntityProperty"], "]"}]], "Code",
 CellLabel->"In[29]:=",ExpressionUUID->"51a100ed-a3dd-46ca-9ac3-7961e266e4d4"],

Cell[BoxData[
 TemplateBox[{
  "299792458",
   RowBox[{"\"m\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
     "\"s\""}],"meters per second",FractionBox["\"Meters\"", "\"Seconds\""]},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.7707893616319857`*^9, 3.7707893711071663`*^9}, 
   3.770799061251504*^9, {3.7708076476393957`*^9, 3.770807655511158*^9}, 
   3.770807890388219*^9, 3.770924275134171*^9, 3.7709272263249283`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"d03a3c05-b10c-47a9-85f3-128bd34bcff4"]
}, Open  ]],

Cell[TextData[{
 "If it travels through the medium then the speed of light becomes less and \
can be calculated by dividing the speed of light in the ",
 Cell[BoxData[
  TagBox[
   TooltipBox[
    StyleBox["\<\"vacuum\"\>",
     StripOnInput->False,
     LineColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FrontFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     BackFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     GraphicsColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]]],
    "\"the absence of matter\"",
    TooltipStyle->"TextStyling"],
   Annotation[#, "the absence of matter", "Tooltip"]& ]], "Output",
  ExpressionUUID->"71e2ceb4-c597-47a4-8052-53394c2347c2"],
 " ",
 StyleBox["c", "InlineFormula"],
 " on the ",
 Cell[BoxData[
  TagBox[
   TooltipBox[
    StyleBox["\<\"refractive index\"\>",
     StripOnInput->False,
     LineColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FrontFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     BackFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     GraphicsColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]]],
    "\"the ratio of the velocity of light in a vacuum to that in a medium\"",
    TooltipStyle->"TextStyling"],
   Annotation[#, 
    "the ratio of the velocity of light in a vacuum to that in a medium", 
    "Tooltip"]& ]], "Output",ExpressionUUID->
  "6b310cd1-b743-4054-be46-c7b211c97ee5"],
 " ",
 StyleBox["n", "InlineFormula"],
 "."
}], "Text",
 CellChangeTimes->{{3.7707909586404533`*^9, 3.7707909600748177`*^9}, {
   3.770791030363145*^9, 3.770791039636983*^9}, 3.7708058130830917`*^9, 
   3.770805898954074*^9},
 TextJustification->1,ExpressionUUID->"7a6bfb2f-252f-4d4d-b3a1-41ba0314b4c3"],

Cell[BoxData[
 RowBox[{"\[Nu]", "=", 
  FractionBox["c", "n"]}]], "DisplayFormulaNumbered",ExpressionUUID->\
"b737c0c4-d10c-4198-b389-9b8ed00da42a"],

Cell[TextData[{
 "It is important to note that ",
 Cell[BoxData[
  TagBox[
   TooltipBox[
    StyleBox["\<\"quantum entanglement\"\>",
     StripOnInput->False,
     LineColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FrontFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     BackFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     GraphicsColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]]],
    "\"a physical phenomenon that occurs when pairs or groups of particles \
are generated, interact, or share spatial proximity in ways such that the \
quantum state of each particle cannot be described independently of the state \
of the others, even when the particles are separated by a large distance\"",
    TooltipStyle->"TextStyling"],
   Annotation[#, 
    "a physical phenomenon that occurs when pairs or groups of particles are \
generated, interact, or share spatial proximity in ways such that the quantum \
state of each particle cannot be described independently of the state of the \
others, even when the particles are separated by a large distance", 
    "Tooltip"]& ]], "Output",ExpressionUUID->
  "3b87a154-fc75-4867-b109-a8aff5d3ed1f"],
 " does not help to avoid restrictions on instantaneous information \
transmission. The ",
 Cell[BoxData[
  TemplateBox[{
   "\"no-communication theorem\"",
    "https://en.wikipedia.org/wiki/No-communication_theorem"},
   "HyperlinkURL"]], "Output",ExpressionUUID->
  "95061bed-ef52-4cf4-a2a9-b5352e1e441e"],
 " states this",
 ButtonBox[Cell[TextData[StyleBox[ButtonBox["2"],
  FontVariations->{"CompatibilityType"->"Superscript"}]], "Citation",
  Editable->False,
  TaggingRules->{NoteData -> RowBox[{"Peres", ",", " ", 
       RowBox[{
         RowBox[{
           RowBox[{"A", "."}], " ", "&"}], " ", "Terno"}], ",", " ", 
       RowBox[{
         RowBox[{"D", ".", " ", "R", ".", " ", "Quantum"}], " ", 
         "information", " ", "and", " ", "relativity", " ", 
         RowBox[{
          "theory", ".", " ", "Rev", ".", " ", "Mod", ".", " ", "Phys", ".", 
           " ", "76"}]}], ",", " ", "93", "\[Dash]", 
       RowBox[{"123", " ", 
         RowBox[{
           RowBox[{"(", "2004", ")"}], ".", "\n"}]}]}]},ExpressionUUID->
  "5c396424-3c0a-43c0-b75c-aeab1504e27f"],
  BaseStyle->"Hyperlink",
  ButtonData->"00006667"],
 ". For example, in experiments involving ",
 Cell[BoxData[
  TagBox[
   TooltipBox[
    StyleBox["\<\"quantum teleportation\"\>",
     StripOnInput->False,
     LineColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FrontFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     BackFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     GraphicsColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]]],
    "\"a process by which quantum information can be transmitted from one \
location to another, with the help of classical communication and previously \
shared quantum entanglement between the sending and receiving location\"",
    TooltipStyle->"TextStyling"],
   Annotation[#, 
    "a process by which quantum information can be transmitted from one \
location to another, with the help of classical communication and previously \
shared quantum entanglement between the sending and receiving location", 
    "Tooltip"]& ]], "Output",ExpressionUUID->
  "1eb81245-02f8-484c-b0d9-4195838dd5c0"],
 ", where quantum entanglement is exploited, it is required a classical ",
 Cell[BoxData[
  TagBox[
   TooltipBox[
    StyleBox["\<\"channel\"\>",
     StripOnInput->False,
     LineColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FrontFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     BackFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     GraphicsColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]]],
    "\"a path over which electrical signals can pass\"",
    TooltipStyle->"TextStyling"],
   Annotation[#, "a path over which electrical signals can pass", 
    "Tooltip"]& ]], "Output",ExpressionUUID->
  "664d24d7-247f-465f-9869-1b691bc18cb2"],
 " to send information, which in turn is restricted with the limit of the \
speed of light. But quantum entanglement can be used for ",
 Cell[BoxData[
  TagBox[
   TooltipBox[
    StyleBox["\<\"superdense coding\"\>",
     StripOnInput->False,
     LineColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FrontFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     BackFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     GraphicsColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]]],
    "\"a quantum communication protocol to transmit two classical bits of \
information from a sender to a receiver, by sending only one qubit\"",
    TooltipStyle->"TextStyling"],
   Annotation[#, 
    "a quantum communication protocol to transmit two classical bits of \
information from a sender to a receiver, by sending only one qubit", 
    "Tooltip"]& ]], "Output",ExpressionUUID->
  "5939111e-5aae-4694-a5b7-05613eb4b2f1"],
 " of the information that increases the data rate. The data transmission \
phase of response is discussed below."
}], "Text",
 CellChangeTimes->{{3.7707923860469723`*^9, 3.7707924214329042`*^9}, 
   3.7707927215794077`*^9, 3.770792785191267*^9, 3.770792868467263*^9, {
   3.770793054597026*^9, 3.770793055845414*^9}, {3.770793267032598*^9, 
   3.7707932674061193`*^9}, 3.7708033620193233`*^9, {3.770805960675911*^9, 
   3.770805979365473*^9}, {3.770809262712207*^9, 3.770809262784169*^9}, {
   3.770809649260829*^9, 3.770809649265602*^9}, {3.7708099989643087`*^9, 
   3.7708099989688177`*^9}},
 TextJustification->1,ExpressionUUID->"f2a07cb2-4e5e-4134-887e-7644c9925d2d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data transmission", "Section",
 CellChangeTimes->{{3.7707933413809137`*^9, 
  3.77079334937258*^9}},ExpressionUUID->"a0723505-63ab-4c9a-bdad-\
8b1093b48c81"],

Cell["\<\
Time of data transmission mainly depends on the data rate and many factors \
affect it. Let us look at some of them. \
\>", "Text",
 CellChangeTimes->{{3.770806280320828*^9, 3.7708062811078377`*^9}},
 TextJustification->1,ExpressionUUID->"65027991-9b45-49b5-8ee5-2ff02e2187f7"],

Cell[CellGroupData[{

Cell["Numeration system", "Subsection",
 CellChangeTimes->{{3.770793454871208*^9, 
  3.770793456009597*^9}},ExpressionUUID->"2ba4cb26-b857-4657-8a4d-\
e37561bb1ea3"],

Cell[TextData[{
 "The data rate is measured in bits per seconds. A bit is a unit of \
information, which was chosen because it is closer to optimal encoding. The \
optimal ",
 Cell[BoxData[
  TagBox[
   TooltipBox[
    StyleBox["\<\"radix\"\>",
     StripOnInput->False,
     LineColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FrontFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     BackFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     GraphicsColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]]],
    "\"(numeration system) the positive integer that is equivalent to one in \
the next higher counting place\"",
    TooltipStyle->"TextStyling"],
   Annotation[#, 
    "(numeration system) the positive integer that is equivalent to one in \
the next higher counting place", "Tooltip"]& ]], "Output",ExpressionUUID->
  "794eec17-337b-4a65-8595-019a5cda7477"],
 " ",
 StyleBox["r", "InlineFormula"],
 " for a ",
 Cell[BoxData[
  TagBox[
   TooltipBox[
    StyleBox["\<\"numeration system\"\>",
     StripOnInput->False,
     LineColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FrontFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     BackFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     GraphicsColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]]],
    "\"any notation for the representation of numbers\"",
    TooltipStyle->"TextStyling"],
   Annotation[#, "any notation for the representation of numbers", 
    "Tooltip"]& ]], "Output",ExpressionUUID->
  "af52be2d-52de-4f0a-8d15-e8d941df403b"],
 " can be found differently. One way is a minimisation of the size of the \
alphabet and the length ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["w", "InlineFormula"], "=", 
    RowBox[{"N", " ", 
     SubscriptBox["log", "r"]}]}], TraditionalForm]],ExpressionUUID->
  "7d4a9d21-3055-4c24-87a3-482f6e1d06e4"],
 " of words together, where ",
 StyleBox["N", "InlineFormula"],
 " represents the number of states of some entity",
 ButtonBox[Cell[TextData[StyleBox[ButtonBox["3"],
  FontVariations->{"CompatibilityType"->"Superscript"}]], "Citation",
  Editable->False,
  TaggingRules->{NoteData -> RowBox[{"Hayes", ",", " ", 
       RowBox[{
         RowBox[{"B", ".", " ", "Third"}], " ", 
         RowBox[{"Base", ".", " ", "Am"}], " ", "Sci", " ", "89"}], ",", " ", 
       "488", "\[Dash]", 
       RowBox[{"492", " ", 
         RowBox[{
           RowBox[{"(", "2001", ")"}], ".", "\n"}]}]}]},ExpressionUUID->
  "39df4cbf-0430-4044-9938-a6780effeb01"],
  BaseStyle->"Hyperlink",
  ButtonData->"00003AE2"],
 "."
}], "Text",
 CellChangeTimes->{{3.770793881690484*^9, 3.7707939152809057`*^9}, {
   3.770793954101388*^9, 3.7707939555820713`*^9}, {3.77079422043039*^9, 
   3.770794221987849*^9}, {3.770794288326675*^9, 3.770794292669941*^9}, {
   3.770794353169181*^9, 3.7707943574980803`*^9}, {3.770799193258088*^9, 
   3.770799218049918*^9}, {3.7708060646810102`*^9, 3.770806065906095*^9}, 
   3.7708060968817463`*^9, 3.770806241265848*^9, {3.77080627711019*^9, 
   3.770806278785213*^9}, 3.770806471393653*^9, {3.770808790895583*^9, 
   3.770808790911409*^9}, {3.770808941060142*^9, 3.770808941064281*^9}, {
   3.770809262788439*^9, 3.770809262796937*^9}, {3.7708096492681217`*^9, 
   3.770809649271632*^9}, {3.770809998971971*^9, 3.770809998975881*^9}, {
   3.770925444692411*^9, 3.7709254496392*^9}, {3.770925488597334*^9, 
   3.770925508256266*^9}, {3.770925545731941*^9, 3.770925595356937*^9}, 
   3.7709256292439003`*^9, {3.770925812524416*^9, 3.770925876105514*^9}},
 TextJustification->1,ExpressionUUID->"b1df91c5-c27b-4c30-8398-e604c6161ca0"],

Cell[BoxData[
 RowBox[{
  FormBox[
   RowBox[{
    SubscriptBox["log", "r"], "(", "N", ")"}],
   TraditionalForm], "r"}]], "DisplayFormulaNumbered",
 CellLabel->"In[21]:=",ExpressionUUID->"e92f68ba-713d-4251-9efb-ab3ab35e6b72"],

Cell["\<\
If we plot this value for different bases, we can see that there is an \
optimal point.\
\>", "Text",
 CellChangeTimes->{{3.770806543842149*^9, 3.7708065495622587`*^9}},
 TextJustification->1,ExpressionUUID->"04a3559f-db17-46c4-ae7d-732da25be439"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FormBox[
       RowBox[{
        SubscriptBox["log", "r"], "(", "10", ")"}],
       TraditionalForm], "r"}], ",", 
     RowBox[{
      FormBox[
       RowBox[{
        SubscriptBox["log", "r"], "(", 
        SuperscriptBox["10", "2"], ")"}],
       TraditionalForm], "r"}], ",", 
     RowBox[{
      FormBox[
       RowBox[{
        SubscriptBox["log", "r"], "(", 
        SuperscriptBox["10", "3"], ")"}],
       TraditionalForm], "r"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "1", ",", "10"}], "}"}], ",", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{
      "List",StyleBox[
       "\"Options\"", "IconizedCustomName", StripOnInput -> False],GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["List", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["5", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox["912", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],Dynamic[
       Typeset`open]},
      "IconizedObject"]],
    {PlotTheme -> "Scientific", 
     PlotLegends -> {
      "N=10", "N=\!\(\*SuperscriptBox[\(10\), \(2\)]\)", 
       "N=\!\(\*SuperscriptBox[\(10\), \(3\)]\)"}, 
     FrameLabel -> {
      "r", "\!\(TraditionalForm\`\*SubscriptBox[\(log\), \(r\)](N)\)r"}, 
     PlotLabel -> 
     "The efficiency of the numeration system as a function of radix", 
     ImageSize -> Large},
    SelectWithContents->True,
    Selectable->False]}], "]"}]], "Code",
 CellChangeTimes->{3.770795101435286*^9},
 CellLabel->"In[30]:=",ExpressionUUID->"8df773b1-e1ed-4ff3-a09e-4dd6c6a3d49f"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.9, 0.36, 0.054], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV13k8VF8UAPBhFntkf2Mwi31LISm6h+yVXYskKRV+KbJkLSElhYTQipAt
oVKkSIgWKQqllMgWg7Fl+b3+up/vnfveu/e8e895w/A45uDJTSAQdnERCP9a
F161oo7OCbTqK6WnrcICDur2H5H/MYF+YmYPr2WZg4O92cujYxOIB/tyqeq6
GSDfPEbN3ATaXRf+Y+KhKWhc4InkJ7FRbSuaN+7fAtSCI927hNlIMeLtYxXW
FuB9+Wp9PpWNlMhSE+f8TIDTp5bCUWSjAz2l0RlvjOHH8oXxLWvZ6GH+L7EO
PWNokxnbetmQjc7W0r6PFQA83WBT8N2CjX66Z2g3KAIUOt8jrXFko7CHz5ye
7kAQm+j3tNWLjUIF7IU0s4zAv7gdowayUWSyUP3194bg/kon6MhpNvKRDi2Y
EjOEjcQZLXI6G0nyM6Z2Vm0EFfrOC47ZbOQWwO9xT3ojSBhVDd4uYaPoPQ3f
gqIMYCIo9NbmBjZSMWMsvfHaAL0pPYsJ7/DnK26RMf6tD61lhrt7utlI+UFr
1OB/+pA3vLz6JJuNTJ47GcnGrYcrPO6+jYtstO80t9qozHqIUqhrEeedRLRT
gsE+D/TA1S06+r7cJHrgKyphy9EF67D+byuqkyhMcne+RpYu6F81M7TRm0Rc
zQs/ikx1QbSdhzO8dRKlvVVsrrqtAyt/jtgb7JxEcWHBVr+cdGBUoKUkzmMS
zYa2HJjg14Ems4RDCiGT6OAzCw7p1Dqo9Bir94+ZRKsVua43Gq6D7FM28nWJ
k6iDf7Khc3EthD8W+bw3D3fdcPB/0WthnWaqVfqHSeSuYcvJyNcGbl9dma5v
k+j0ynrP6uPa0F76YZQ6Oole5T9eLN2kDX7aokk3SFOo94/K88MlawD87u//
LjKFBq7dit6wfQ2IlNvpMGWn0B7hmtN8E1pQppPYeUdvCgnXWGUyN2vB6QCt
gkHjKRR7eXRJbUgT7B68CVG1mUIL5zJ7K9I0YXy9oGzJoSnkuuXBl+45DdDa
eP5AZfoUmo09Pf+5Ux2WQ1X0ZnKmkO0pd1fdFHV4W91E2VA2hT5RPM+62KvD
USNKYXXzFNq0SyKqrl0NiiF6on5+Cpk+emFp/FsVwqOY9STKNNr8k6Wtc18V
ttXXpZiLTiN5H/vek2GqMLKFoN+iNo1iy8LK2sRUQc0iIuL9nmlEiZMeOeug
AgtxNFuxI9NIwWUwbVBBBVqaq+nOAdPo+xveXus5ZfCyXnjxOQG/v2tJ8txt
ZSjYHsz//ek0Ukk5YSdHUIaTlyS/MFqmUcTyj4naLiWwfPeg5EDnNHpfOjai
UqkEg3bTdoN/ptH+E50hxj5KoOTkl/5HnoNKyMnTo32KMHNFxEtbg4P8Z6fv
bq5ThMaOexv9N3DQn1xYq31bETx3/vnKseOgwaVinz4PRch18VFYiuKgdm1v
jsCYAjD2e94X6OcgE/c5N29MAb58HbwcMc5BWj86X6VyK0Cai3fA+AIHzbWW
7pcdZQG/0zH9D6tnULHth/ENz1kwbR7yNBPNoICoxHs+/7GgWePiK9WsGfRu
69wLww9MOHNXuCgrbwZ1XV9f7lDHBCOlywlC5TNolxWTVniPCeXy6bbs5hlE
eMLQkb7IhCzR2x1VMzPooydt8a01E3znKvssHGbRz7BtRcVtDFAJ1H/xeO8s
ehafKWFbz4Cf7Me56l6zyPT3eCGjkgG7RmoPC5+eRRWjWT8crzLAuLd5rLNk
FjX3PQrp8GCAeMOXeU++OXR8U7Fl7god3sK+nk/ic8jeUrxmZIoO55/21VjR
55CkWGz2zt90WH44cEpTfw6tf+/umfmeDr/vTpA5B+fQwcGAF9V36FCdSBKN
eT6HQtZIVc460qE89VxoTesc+iKbGBZoTYfCLMGf051zaN0K2WuVMR0y88Ur
PcfmUMu7BWqSFh1OPlPYYUGdR20OikLN/HRYP26ayR8wj46dPRF5IlEetDjN
3FtOzSP5N94GYafkQfHvNp+w+Hm0KbJEsPSYPIjzOBuO3ppHD5Oably2k4cp
Oc/eN2/m0dqVtjALcXkos4llJisvoDXxReW/s+WgwInvwqt1C8hVbNLRPVUO
brpcnOLavIAehdk8XoiTg0uHUhv8nRaQ0v1q3rSjcnA08s4hp6gFtJ2zqsxl
oxyolb4slOpZQPUVDrl1XbKQK0TRuXHpL3LwOFESoykLkfrNIi2Zf5Fz3ZH4
OqYs7Nof/4eT9xf5KnpSqdKyIPhgVeH2Z39RkUrSHI0oCwGuUoyl8b/o7obx
SPduGpgWqQi72i+iOuuuUxkXaSDXMTwat3cR9fcW3vaJocHccnFLhdciunxj
8KZTGA2KHdaeFTiziL73+ip4e9FAfMFg6Un5Iurif6d6zZwGPy23jmDiS8hL
nak4QKJBjb/QKzP6Eup9IhXFuyQDadfe5flpLCHZfe/ZRhwZsJ5w9HhluoSM
OGFGfb9koDzdtetk4BI6w8foITbLwJmBo02fOpdQ+5cB30uJMsCMScpJzVhG
Os7rvWPUZGBwSC+ZnbuMfNImLosqykCxbU/k9rJlRK3VKSiWlwE9GSUXctMy
2hg8rUKSkAHL8mqRwOlldFXGKt6IIANHvw9EONmuoENDbYIvPlNhnXmCT5nL
CkqrWJtJ/EiFmaK1uwUPrSDBsT+hNu+ocDo4XLchfAUtZTl3czdS4fIq0RGd
whVEXdqT+bOCCq435IrPcxOAHHXTyD+ZCpvt2dn6vARwvUd+sv0iFeikhoxf
QgTA6kb01p2nwi8vrzhjjABG12y+SURRwVev0mN+DQHykxuGzPyoEPXaCvPa
SwArXV0RA0cq5C0EnLWsIoCKydGBGRoVQp8N6B+vJcDp1q8xFzEqbI/ZNZTe
QIDqWYGtGpJUmBYy3DbYRoBDxwh8Z4SpYMIgip4dIoB4mb9vAjcVei2Sr7+g
coHV4OGkVcMYlAsSbUfoXHCp4vIP+UEMYt8HEMSUuYBo89xlQz8GGnt2HfDQ
4QJS5oUzkb0YhPrKq3Jt4wJNMJJz+4CBZGpJ5eYILjB0jTjhVovB8G75Q4ei
8evDFNJ6qjF4Kpcsdek8F0h+2kTe9xiDgwUBoV9TueBurWj6yUr8+dWbILyU
C8YtHuhyCjGw+fGq9fE3LsiY8pLkz8Dns2bgh64JNwi/6NfZEYLBXNXnT8iS
Gw7vTTiSGIyBt0nra2sbbuAhfD74JhC/3rnsobsLN8iXTCXv9MfnFxYan+DP
DRsNm97n+GCQ17hqXX82NxgnxbwQ34eBtB2X8ngBN9hLp15O24tBfNeUzEIp
N0Q+cymguWLgO/qZLFLNDVHJxvF6uzHQF83p2vSBGxrtWlwyHDFo3qsflUIk
gvsRpWWmFQYbB1WDbvARIUrI+usvCwyKj9N87goTIZu9M6XYHIOkaC7nZzJE
WA6z9zYzxWD33VaVER0icMfnr85FePym97WZHMTHS7zvE9bHwDXS4eV2byLc
7UrbIrQeg7c8Zk92HSfCCd4+6io9PH5UtVzfcCL0cw6LUXUwCIPp4Mwr+O9B
N5Jc1mAgmHBOfrKBCHKPXUghKhgEVPxHS20hQqDcqdEqZQx6uu2wDW1E+HQX
Lv5VwqBQFROL7CGC96ZTv88pYmDZdJfCP0mEx5Ef0l4wMSj7c5FYMkuEW1op
H6VxS0n6E+yWiPCXFVF0nIHBwMGNC6m8JHD/lS2hQscgmrt1jCFPAhnr8/4P
ZPH1qd4bblAgwVJstYg8bgf7lMHDaiSQxALVLtAwoN/a01eiRwJ72zX13jIY
1BqNfjTYRoK0dD66BYbBwkmhGvsQEiC+qit+Ehh43GJXTUeSoLcqZisX7ldN
HQ/SY0hw8MAZixRxDK5K3rj3NZEEZW523LViGKyv1MrxyiNByYieupYoBjd6
RG8JFpOgxsS94t1qDMjE2Wv37pNA69Lbwydwf7R/lsapIYFpu5dVnQgG/uO2
8VEfSMAl5X0tSBiDbkndOIUuEsg/ctVRxW28WTqmqRdffxz3t6+rMBC5+D1C
aJgEOelcXttxn6xsCC0bJ0GpXaUxL+5vPQXBjhwSiEi+Yb0UwqBUzc8vg0AG
+gw2b4pb0sHZ15BChojGtwM8uCNCDHy+CZAhcX64/bUgBtuauTwVpcjg5J6Y
5Yp7yPPyrvuaZBCTo+SmCGBgclNC5K0OGRSAK9wDd+bnq03DBmT8f4Bwig7u
bVtvrlcwJwMP9z6/L/wY5MYw/8A2MvzN0FxXiXvp6Z07ex3IoBmmongJd6l2
sXi6GxnqF5euWOKmeK95XXGQDF+zrwio4t6XUx7d5k2GlTPv8gVwV33R2zR2
nAy2c5mHJvjweEg+nuQLJoMLccj0E+4jtoaFShFksDa6j57jrjv3bP+WaDKo
tU44FuGm1ptg7ufx8faFkVdx+/992RaeiMdn8FdNHO4WXatzGalk2MN/XyAE
N8v3NXqYhTtF7sh/uMPzbWfbb5OhrcD83X7cH7+3l47nk2Ggwnzzbtya1B2H
BEvJEOhkXO6A+6xjl6xqJRncnN1UbHD3Jrh2mD0hw8Ktlutbces3fkvweE6G
Ir0q4X9OWvEwPdVIhjSqW9g23L83DPzNek0GH6e5r7a4jf29Kqra8fl0N+k6
484sGvXu+EwGqQuiEa64J/uPMSd7yUBksio9cW+Vm+pa9YsMoRpWn47jzt0Z
lKw+QgbFlc8/I3AvJs1bWrLJEFuk/ikBt1NLOMFzlgxRnBul13GXEAlVUUtk
kLdKPVyGm2IUfewGkQLOZYErDbjdgijK1XwUmGguOtGD+9G9872fhCmQ+CS/
burf+xkSTJuWoECHRu+AEP7+6vaIkbWYFBAK/llsgZuamlZjrUKB+Mb7lodx
+7/FAg5rUaDU//H9c7gVjOk/b22kwJkzOX1tuMNDczKfAgWyevNzZnF3VCg5
dJtToD9QVZWO77+zSpp1Yo4UaDwgGRiEu3df2Unt3RS8zr5cn4tbP0NHe/s+
Chy6EFz+AfdvgY03z/pQoHNj1lt9fL9vZZtHzEdTwM84e7c4fj5y1Vp0JeMp
MN4tVWSLe/HA9tF1SRSoGNibm/DvfHU67vnvGgW6suNjBf6dzxp3g2+VFCgv
iHpJw8+vW0rHXMoTCij2Zhq54y72tq6yfE6Bp2pK0ndwW2K6+uWtFEihN4yt
w/PB6SAevdgfFMgz4Rt1w/PFuHaptroID/jeTmyYwfONIS9r4psEDyhUjVyz
xfNR/Lf0e1dkeMAwtODpXdxKl6K0lpV4YEJasn0/nr/cRpw03hvxAHwg0vok
8Xx/569ysA8P2LOe/aJSMaBFHB9U9+MBt/T4xDjc3k6/8r4H8QDfex5vDm4K
8Z2i9RkeCC86WfQRz5+b3bNZshk8oBxhZ3Abz7elVCv5F408cF7N184Pz9cX
E9MkhZm84FR0wbZfFa/v6glYvjIvGOjk5fipYXCoKYqGNHlh//W56RXcsPIf
89gGXqi1+RIvr4HvX98tWu9seMH3hZSntxYGO2wmzBLDeEHGSbxfE69HdCHr
QOEOXpiJyfl60AivR3fRyfxuXuhYansvvBmDeVO9MPSdF8QKy7OrcbeH06OO
jfBCadyXTgnAIGZ0JuEdFx8cOiJx7KMJnt9ac3ITtfigL+ZEaoglXv/ilz4I
n+OD0DzJwr1O+HnccDmZcYkP3iz6bNFxxuv3gJKtzhU+SLun+ZxvBwaqJnYt
O27xgUvB5L7HOzG4NZ/9/HoVHzQPV9FYezC4dMSyRH2ID346Hrkv74HH1zzl
rIU1P5jyCNU+PI4Bg1vV4JSgAJgelJDSSMLr3Ux15kSQIEiomHX/eI8BXoZz
21aEALMNGYpgUKGYcO1iVJQwCPpu1dkehH8vCjQaZAaIQFUvVV2uhQrnnG4R
ivRXw2rKHWkVVRnY51r6smZsNRSKbhbljpWBPdk3eskVopDHS3pgOyID6uH5
hx8FiIHzjHkYnwMN7oj3//FSFYdiubfC5ytoYDbC3eI4Jg4SRwuDnsjJQtJp
55zNuRIgeCTScjpaFkrvPh9N3ikJ+aPBc6t/y8KkyKp4GlUKZl/X/w5zloO+
9YmKBe+koLn15QGdGjngZE6K+1yRht0W6YHCGvLw9bJvQBoeV9XOyqXtmfJw
zEquvZ6PCpq1yeUPCXRQ3lwWrfSGCpJ+2dueb6BDPDtQ50K0DESxr1MUj9Lh
+QYnx13raWBdJK2beIsOtFrxJtc53IX7bnp8pgOLm8/Ao0QWJBO+eYQLMsA2
5tvyDT85iLj4LGLGlAFKL4fqv6jIgyap/1JpCAPaMgRnz3yRhx20R/U7Shhg
13kOldnSIWZ4aNjxFwNWoTtnbhbSobtrneM5jAm9jeXH1IQYQKNcTeJ3YMLV
q6+vDB3Fx8kp5/ifZ0KBFcFAtZkBmVG6U8JPmdCCKcaR1Jig0tlImJxmgsmr
A07usUxgEIVE+VRZkFtfunuilwknQyLcya4skO4Z5qUBCyy+H47YnMKCH+2g
35zJgrjr4QL3GllwQ2Wr5N5rLGhsXo670sSC3ZHOHPZ1FvSZP+IObWZBm6p3
hcxtFgzHtUyatrCg9nTKmmP5LDi3MfBp9xsWZGkNKEtWssCtpnKR3MECp/gL
0gfx/kFOCWPPTxaIfE+dnXvLgk9jdw5CPwta9W51Xmz7N6+3dxR/scCkr/LK
ow/4/SbLmRMDLNDe0Csi0M2CkbxnlNhhFggOaPOV4/1Itjm4lM2C5k2bfpv/
ZkFecs31lEkWRCebNfUMsaAq4lvdySkWLBi6xJLHWFDPKCNt4bDgd0o01268
/7bHyYBPc3h8hi5+H5tmQZHrlws18yzYh64+OzODrzvr6O3bCyzoHC6OKMb7
99pKNfkssuAyPHI1/ssCr5A1n+yWWGCTVrepE+8Ptg/4pbfMAv7RVqoP3qqX
/2JTV1jw0rhzfgVvLYOiF/+1/wNaTDcQ
          "]]}, 
        Annotation[#, "Charting`Private`Tag$153946#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.365248, 0.427802, 0.758297], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
XdvE/T+qarwu
          "]]}, 
        Annotation[#, "Charting`Private`Tag$153946#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.945109, 0.593901, 0.], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV1nk4VV0bBvDjTMiYpAyv6YSopDM4pmPfhlApCk2UZm+E6pN6RSVDKBKl
UklRCUk0olIJUUihzE1EZsc8fbu/9vW7rr32Wns/a93P1tjhu243lUKhcEQo
lL/XPrOz38RFBwnpJmZDVa4tcODB9lbZQSLz0NMdnf/ZQjbHkaP5zyARKhGt
Lsq1RTbnbO0t3iAhsfrJ4OUsG5zw009rtxgkfngfMG/1sYHjow//6a4ZJPLa
BtuYy2zQayj5z7095PiBU1qpecuhbxK58+HFQeLILvV8zW/WmA5YyBtOGSQC
3O2We2RZoyK/hGmUPUiovy3/SQuyhreAmZ5fOkgsplapz1a1RiZC+l6PDRL/
exc3bOBjhcBgzdd0ppDw6VTa1WZtBfvXr+Jt5ITEBtnntxNVrPDHisIv0xMS
O4vcQhsrLKFnGxT00VVIWO9eZ/BLYInxUyoOc/4VEokhSx7cU7ZEWWm+uouf
kPBIDNc2GrfA3pXjb76cERL6DEvvgGcWSFt9eFbrcyGxNWt9gQIscCRGoVGj
TEg0madzHVgWsKt8dG9nrZBQsRrIVhW1QLuj0LG9R0hE1G5TPlAFaDsfuNij
NkRYFO17cmAvMHxedq/B4iHi/LPDMz2OQHHNfZODRkNEztG+BT+NgN0bepqG
HIcI7xevZHVnAambvRZMBQ8RxivU+s7tJKCxffcDiZ9DxI5Yvxg1bXM0NrXH
BfUOEcudXme10syRsNnTr3d8iBhcFi63+LsAs5x9+Z9mDxMnRgo8XJIFENr8
9zyRGCb0LTecuqEpQOni6He6V4aJxweEWg1mZjh5Vybjyu1horhrrcSkhhkE
2nFnpHKGCaoPR++4qBly1C469JcOEzMJOfapn0xxRe5GzdPhYaLgkl6A4X5T
+Iw+/Ga7boT49GyAQntmgoWH+G+ebRkh1Ko8kv1TTPCj/1nqor0jxO5GjxPs
GBNs/PPCQ+bECCH5o+NT0C4TWDSXdtfeGyEyquMNIW8C+aLGsd3io4TOJqq3
/3FjVMC9oU5+lPhvn2riN29jRD7/VrBCfZRIvlryvxA3Y0w/bju+hD9KVBrP
vuRhYozfd/sYQ7tGCQXXpbcujxoh/yxdLrRwlOCVaMYMBhkh50JEQEH5KFGa
ud4429cI6VckfwhrR4my6YhrF7YbIfGO/MPd3aPEff6RhV+WG+HIywXrbZXG
CKPJJ3MWyxrBsNc6cZbfGPExtTYpIYMP/aFSqtXxMaJOUdbr6nU+tCbsvY5G
jREZqicjX8fzIS/qYtaVPEZEZM4d8Q7kY1B1d/OHD2PErpeNV3kOfGSvCdM8
pzNOpNyhhOuPGyLNWfz0O/Y4ERozZC7WZ4jrm6MHRczHidLG8VmTvwwRs+dC
0UHncaKh6Ey4QbUhvI/d2uMcPE6M8SXoRRmG0Mt6mz6vYZz4yDQ3XbvTEKlS
TE5SzARREKlwkvWdh2P8UtmyxAmCcq5CZ3Y9Dxu3R/UM3Z4g5BrL4+dU8yD5
SDp99csJ4oTqvjyX1zz4uc3TmOqdII55ctxLU3iwzlgo47Z2kpAd/a7G8eRB
taaz69SWSWKRDp457uRhdDqzLHfvJNH1uPvwcTceMtctC5c4OUks1HG6IuPA
g/y48VReziShaeeqNsTl4Yfdqj+K8lNETPLXK5k0HgoOSr1brj5FaL3/uK14
iouEq5W3DyyeIlxEtxzqGeFiZZ/TjnfWU0T3iErPv11c5Fx0+3rk0BShUbLx
J7WWi5Nt3iV1tVPENa0ln9IzuNAMjU25cHma+PUyzeGHOxftHbxz/anTROV+
bs8HVy4yHRqOrc6eJuIrtI+92sAFT1l7M6NkmvDc9ET1jQMXdjn5soeE08SD
z4919MGFd2tbkLPDDCF5/+qKOE0u2DZnvLI3zxDZNrdyqWpcDGcs2yS5Z4Yo
XcZpDFDm4sThQG5R4AwxxS1knZTnIk5a7g8nfYb4NFWU28nkwi1JNTOSSsGb
ZH7W3G4OzNf23+SLURBqFbpqvIMDdXrR5V9SFHys2p/2q42DX3v3nrJQpGDx
UIBHVSsHPryHO8aWUiDwdvIVfuYg+P0Kxb1bKODr6Lz3fMHB7XG/cLunFFzr
/7j42QUOAl628fe/oCB5422WXjwHq0M3dlwsoqB8zM7oRiwHQikz+/YqCk47
FYbfOM2BpQZNLryDAml67bqOYA6abc9de6MkAv/u1V1RvhzkSNIc/qiLIIPZ
07HBm4Owj36UOToiOGkia63nxcFi1407d3BI5/7+1ryHnN9HTVfEXgQaffcS
wrdyoHDh3kPzIBEsYSTVFq/hoHOT2p49ISKwdLuS/dOeg+eq5+bFRIrA8VuX
legqDnal+QU0XRDBtPSaA5ttyfnzTRGYJYKBoVPtfHCw5vu78mctIsj1r4wt
YZPrWdr2nWtJxaq4P7cpyhyMPv1SR9hRIWWzNyZDkQNPy/L3K9dQwaTclNg8
nxzvkv1422Yq6l7533s1l1zf0YCoMwep0PN2acqTJb9nsTT7500qDPalxDmI
cjDfUUSnN40Ks+rebgMmB1FfB5XHs6hIkrE+NpdB1qfrC0M2nwqNJQ90flM5
4MulfDX9RMX5gnn03Gk2Srfwg+NpNNhWXDWvH2bDpF3XP0mcBvWokd1dQ2xk
7lfxuitDg/FQsI8I6dgQEZeXyjRMqzyX4Q6yselu+cI/HBqC7wik8nvZ6BS6
V1nuIu+vcutY1cGG27F1b1d70kCwHgxE/majQnR53sb9NLgULzxf1s5GjpJe
qk8gDV6j0TFObWwchfBw4nkaar74d4X8YEPyTITaQBENtbOs32xuZsMvd5/K
hTIa6ta7PyhrYqOh3lHRqIqG7cf77pqRTtdVnHOsgYaz+9yztBvZsCu5y5w1
QMOs66oP5OrZyO6Jpt0boWFkh8/1uK9szFM4SHGcomGy/toJedJtu0zGL4jR
IbbYRFb1Cxsh1PJuDTU64kfa5trVku+ne7+zaAEdx1LP2NfVsLFubXy7hx4d
VdV17v+SVk92/XaPR0fg0ZTZsZ/ZeCHo+mxsT8f9ZaIbh6rZGD8iVbD2Pzp6
mVFL51axsSO5/6nwGB23o1JGCyvZeFdS8+hiKB2ny24c8iF9SSHpftNZOqi2
BcEVFWwYPtRP2Xubjlf7/02++YGNpAa5ZMlMOiTZEcWupBm0kav3H9CR0lkf
rUD689qXCUMFdORskRmJfc/GwV6HqOBPdOCcw9ClcjbqFbinFnylY31kWNtW
0hbm80NLmuk49cvCQ5u0bHRrkFQnHc+WvZLOK2PjyMOigOxeOk6a2S4LJ93S
kHbYaYhcb9XXeifSWXoHDlymMHDxyKe8wXdsKKxz8TFjMtAkr9z9lnTQf8Ze
LRIM6JkaJF0mbV8qsltrHgPmERl+y0l37I7b+GAJA9EJ9PysUjYsr8+VreAw
oNRHaYoknfjlUkmnMQMxnquy9pC2X3XdcIENA2EWoi5apFNDNXtgz8BRzk0t
UdJTz2/d2rKOge1uzVc6S8j1GWTKX9zKwLmgF76PSTM9l77P3cWAVsD90iTS
7ik5IVWeDBA3G55HkH7ayDPt3s+AiYnQ3o+0rMKzAfHDDIS8zvrfdtL/Opil
awcxMNJdtNSR9KuIl9utQhhwvyQ8BtJKry0Vt0UyQH0+s5VN+uDE26rAswxs
8M78oEW6jLsi4vIFBopKikqVSLN83hOPrzAQ2qOwZjbpwDsOI9U3GLg67ecq
Tvpza3VW7x0GupiPeqiklyit3yOZRT5vJpsxXcxGuNPXf3QfMsAstEkaJ918
xq1meR4D+aMbHo+S5he3nNlRyAAWlq3669iZHdbHixnojQ93GyP926ht4sp7
BhyIgLYJ0hYH9+Y+rWbgzY8L7TOkEzO6PGu+MOD4+8MWBjn/wE9fzYFmBk5u
UrKVJL1KdfCr9C8GXL/535AnnbrB/9yiP6RffvdUJT0ZO2Zn18/AzcJtN3RJ
O5cFUnaPMKBuNGJpSPoejfI0eIqB2uH7q63/1kcQ4ptEY4KwvvTSifRWf6ZO
vjgTubWFCbtIP7kf2Vwnw8SfcsFH/7/16ZBMEM5l4voNbe+ov/VwncPQ12Ri
xeX0V4/+1uNCQsHKhUy0O4f5f/hbjwpFPw99JmgKq8LaSC+wUP+RbMJE6w2T
uyrk/gkMSEl8DiYG257nGZOuydVeV2/DhOf8FtWNpMO1l7ya48TE57Kqukuk
m92zjxhsYqK7bI5uPmn+ZY7BancmzqR9fdtM+reEyfVwLybU9gnrdcn9vqrf
JmgshAn5B8ZWlaRT9cq4ClFMsH+uLZwgPblzdRc7lgmGt81R3b/nq9bJdd9V
JjTHdVIjSMsWbDNuechEmLnGeRfyvG6NrxmNz2PiijZXP4J0pufKp3aFTEgl
q1Tnk7ZT5PJzypnwme/E1ibz4IS/KC/sOxOT/cxlomRe9BpkGSySFYXcM685
Y2TemImx+lrmikK5LPuRKZlHUS0X759XFkWmq/ma46S1Y4L1p7VFkRsXu0Wc
zLOtf5wXfxSIwreZWrPwI5n3tyZ0DnuJInCzw+Lzn9hQCdrfvuiAKML672T8
Iu3p/Ot2q78oihvDZIzIvGTSKrVWnhTF1ROJJ1pIm2+7yfrnsigat0x2GpH5
m6W0Qu1NsSh+XV83+Tevo88mKMhoiuF4YZqpVwsbAYvOKN7REYPX7QKTGtJ7
SoJViCViEPPPGyFa2cDMPk1fIzFIm2qlzftG7l8fK/3KNWKIq/5YXvmdjfVr
+pafPSoGeULGawfZj9SlVh6SqRHD0xST2xI9ZD+6Sxy5Uy+GrS/cmk6THrPm
HSVaxRAzw8iTJPtfdaB6sO8fMbzerbVdto+N0K7hM5Ui4rCXdnRSGyDzrTwl
9ay+ONJSFAxcyX6bEzX1SSZCHA2TsYTNDHkejeLOacSI4/JU7ME20j5t2g6c
8+K4b6XpeIrCga6lY9n6ZHFYTQ+JlotwkDx2s/DaU3EoZEe5bKZzEPOv3b1F
HeLoMJd+e1Gc/L+wiQ+3XTkLB99GSkfKc6BB1TU+LikBtoTjbI3FHLQN5yf2
+UtCtjmX5bmFgyGPOalVM1JYN6Hkq3qZg0zK1ejgYBlExh1pe/aFAzeJYuNE
P1mI6zgnJ8zjIsI5mZLBn40zRUflmrdy4e6W9bagezZmorOiX6Vw4XozqZmR
K4dA5puSo31cLAq84/HEbw5eGB1SOSXg4Zb8z569uvKgXKwvvx3Ow/I/1DKn
bnlUfpz5IlHHQ+wJlxTz1LkQr9hqOKJpiKy7hV3nNiggqH9TgJSPIQZkpaNU
lObhqWJcj0qhIb4ZntVKq5yHmo2fo7Sl+BhKHJD3Oj8fwYeWXZLYzkdTnI9f
gosirifbHsvL5cN3hWr1a3ElWF6rl5ATMYKOeXaI9gclJN8dPKjuYoSo/kOc
0yHKQGdX5JMUIxQaOTttNFRBL0WrorbPCCov5EvcRlXgfVymN97aGCyquPGO
e/9AfZ3D+bw4YziEtkwnHVCFqfP1ggPtxtB+2/G6caEaLJnra8MMTVB1WXLk
ZKMagtPlFlBDTeBYG0FkO6ijuGVr61SdCaSJWyevp5O2eR9or22K5uIcXz0p
DeiK//wic9QUly69P9/hrQH5e3nCRRWmSFtBMdYt1YDH64qui8pmKFPUOkXX
04SphZ6Il68ZLN/tdN4Wpons0DlXop+bIfV11qa+Zk1wDAtkxWYJML+hU0wF
LHhWKRc0uQnwvRr80kQWVnaZnGOmC5C0cJXClqssLFwyXb41Q4BNx1yG+q+x
sLZTjv4kU4AqXc9c5RssNJUv3edxX4AXJ+KX+t5h4V3dUpXShwJc0W/TUXjI
QrSSzETESwGco07P3/WBhfq+0ByxGgFkWy+MjFaw8OrnaMK2WgHKecm10VUs
pNg9PvK0TgDLbw/PP/nEQrmXJPffegEMjJplJepZ2BagFlXSIoBkm4F4ThsL
LYsyc8M6BSg1Nf1t85uFI/WJ+5r+CBBybnlJQwcLcWaVmrxuAcbNNocxulm4
yRY79bNXgN/xISKbBlnoj3+obzUkQGpHdGu3kAXK6bKPicMCuBOXXp4cZoG2
d8HBgREBajszgzLHWJAcuZl+Y1yAODxxs5hg4R/DEsuxCQHWJLwyrZ1kwSBA
/4vjlACzusqVvKZZIE5/8UybFuCtRe3YzAz5vZe9HZ+ZEeD/68ySLg==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$153946#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {1., 6.259075399034752}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {{0}, {0}}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {1., 6.259075399034752}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox[
        "\"\\!\\(TraditionalForm\\`\\*SubscriptBox[\\(log\\), \\(r\\)](N)\\)r\
\"", TraditionalForm], None}, {
        FormBox["\"r\"", TraditionalForm], None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{0}, {0}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     LabelStyle -> {FontFamily -> "Times"}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"The efficiency of the numeration system as a function of \
radix\"", TraditionalForm], 
     PlotRange -> {{1, 10}, {6.259075399034752, 47.404811266280475`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"N=10\"", "\"N=\\!\\(\\*SuperscriptBox[\\(10\\), \\(2\\)]\\)\"", 
       "\"N=\\!\\(\\*SuperscriptBox[\\(10\\), \\(3\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.945109, 0.593901, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.945109, 0.593901, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Times"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.36, 0.054], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.24, 0.036000000000000004`],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9`", ",", "0.36`", ",", "0.054`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.36, 0.054]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.36, 0.054], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2434986666666667, 0.28520133333333336`, 
                    0.5055313333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.365248`", ",", "0.427802`", ",", "0.758297`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.365248, 0.427802, 0.758297]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.365248, 0.427802, 0.758297], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.945109, 0.593901, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6300726666666667, 0.395934, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.945109`", ",", "0.593901`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.945109, 0.593901, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.945109, 0.593901, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.770794533282751*^9, 3.770795102618368*^9, 3.770799061393358*^9, {
   3.7708076479851294`*^9, 3.770807655777294*^9}, 3.770807890564064*^9, 
   3.770924275430037*^9, 3.770927226494136*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"29dc021d-d1a7-4a73-8276-62b1b04fb6a6"]
}, Open  ]],

Cell["The point can be found analytically.", "Text",
 CellChangeTimes->{{3.770794616745367*^9, 3.770794624537004*^9}, 
   3.7708065044822598`*^9, {3.7708065602154016`*^9, 3.77080656190444*^9}},
 TextJustification->1,ExpressionUUID->"3d6f0edb-bc9b-4df3-81af-a0524bec5230"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{"(", 
        RowBox[{
         FormBox[
          RowBox[{
           SubscriptBox["log", "r"], "(", "N", ")"}],
          TraditionalForm], "r"}], ")"}]}], 
      RowBox[{"\[PartialD]", "r"}],
      MultilineFunction->None], "\[LongEqual]", "0"}], ",", "r"}], "]"}], 
  TraditionalForm]], "Code",
 CellLabel->"In[31]:=",ExpressionUUID->"dde092bd-3a89-443b-8eef-86a2772c0fbe"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"r", "\[Rule]", "\[ExponentialE]"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.770794638274659*^9, 3.770799061521966*^9, {3.7708076482298*^9, 
   3.770807655863173*^9}, 3.770807890704041*^9, 3.770924275585333*^9, 
   3.770927226654215*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"019acfc1-af68-4fa6-a41c-03296dac9bdb"]
}, Open  ]],

Cell["\<\
The answer shows that it is an exponent. The nearest integer values are 2 \
(bits) and 3 (trits).\
\>", "Text",
 CellChangeTimes->{{3.770794718899807*^9, 3.770794726126009*^9}, {
  3.770806573517788*^9, 
  3.7708065765847588`*^9}},ExpressionUUID->"4effee43-771a-4e06-bbca-\
bb2eea59f94c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"r", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#", ",", 
            RowBox[{"r", " ", 
             RowBox[{"Total", "[", 
              RowBox[{"DigitCount", "[", 
               RowBox[{"#", ",", "r"}], "]"}], "]"}]}]}], "}"}], "&"}], "/@", 
         
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", 
           SuperscriptBox["10", "6"], ",", 
           SuperscriptBox["10", "3"]}], "]"}]}]}], "]"}], "/@", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3"}], "}"}]}], ",", 
     InterpretationBox[
      DynamicModuleBox[{Typeset`open = False}, 
       TemplateBox[{
        "List",StyleBox[
         "\"Options\"", "IconizedCustomName", StripOnInput -> False],GridBox[{{
            RowBox[{
              TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["List", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["8", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Byte count: \"", "IconizedLabel"], 
              "\[InvisibleSpace]", 
              TagBox["1088", "IconizedItem"]}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],Dynamic[
         Typeset`open]},
        "IconizedObject"]],
      {Filling -> Bottom, PlotLegends -> {"r=2", "r=3"}, PlotTheme -> 
       "Scientific", PlotLabel -> 
       "The efficiency of the numeration system as a function of the number \
of states", 
       FrameLabel -> {
        "N", "\!\(TraditionalForm\`\*SubscriptBox[\(log\), \(r\)](N)\)r"}, 
       Joined -> True, PlotRange -> {25, 40}, ImageSize -> Large},
      SelectWithContents->True,
      Selectable->False]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Log", "[", "x", "]"}], " ", "\[ExponentialE]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1", ",", 
       SuperscriptBox["10", "6"]}], "}"}], ",", 
     InterpretationBox[
      DynamicModuleBox[{Typeset`open = False}, 
       TemplateBox[{
        "List",StyleBox[
         "\"Options\"", "IconizedCustomName", StripOnInput -> False],GridBox[{{
            RowBox[{
              TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["List", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["3", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Byte count: \"", "IconizedLabel"], 
              "\[InvisibleSpace]", 
              TagBox["544", "IconizedItem"]}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],Dynamic[
         Typeset`open]},
        "IconizedObject"]],
      {PlotTheme -> "Scientific", PlotStyle -> {
         RGBColor[1, 0, 0], 
         Dashing[{Small, Small}]}, PlotRange -> All},
      SelectWithContents->True,
      Selectable->False]}], "]"}]}], "]"}]], "Code",
 CellLabel->"In[32]:=",ExpressionUUID->"dd61ecff-865c-4e1e-a8f5-25be52c22dd1"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, 
      GraphicsComplexBox[CompressedData["
1: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
rlz1PeXSPsq5/ZQzHlFOGqpc87hy2WjlwhzlzDz0v4L+yeifiv4Z6P89+uei
fyH6y9D/Ofor0f9n9Feh/yD6j6P/DPovSdL+y5XjmihXNlMubqOc/W3l1A7K
iZ2Uq+5SLr1HObevcsYPlJMeVa55TLlspHLhGOXM59D/Evonon8K+qeh/3fo
n43+eej/DP3l6F+L/j+hfyf696L/EPpPoP8c+i+9TvvrK1cmKhe3UM5OUk5t
p5yYolzVWbn0buXce5Uz/k05aaByzQ+Vy4YpF45SznxaOeV59OejfxL6X0f/
b9E/E/1z0P8J+hejfyX6/4j+Lejfhf596D+M/q/RfwH9dZO1v4Fy8VXK2d9S
Tk1WTmyvXHW7cmkX5dyeyhnfV056ULnmYeWyTOXC4cqZ2cop45TjctE/Hv2v
ov836J+O/lno/xD989G/FP0V6N+A/q3o343+/eg/iv7T6K9F/2XXa/8Vytnf
VE5trZzYVrnqZuXSO5RzuylnfE85qY9yzUPKZYOVC7OUMx9XThmtHJejXPkC
+l9G/6/RPxX9M9D/HvpL0f8p+svQ/zn6N6J/O/r3oP8g+o+j/wz667TV/gTl
7MbKqc2UE9soV92gXHqrcu6dyhl3KSfdo1xzv3JZf+XCIcqZjymnjFSOG6Nc
+Sz6X0T/r9A/Bf3T0F+C/vfR/zH6P0N/OfrXoH8T+negfy/6D6H/BPrPoj/u
Bu3/hnJqonJiC+Wqa5VLb1TOvU05o7Ny0t3KNenKZQ8oFw5Qzvyhcsow5bhR
ypVjlYt/gf5fon8S+l9H/1vofwf9H6D/E/QvRv8K9K9D/2b070L/PvQfRv9J
9J9Hf/y3tb+BcuJVylUtlUuvU869STnjduWkLso1qcpl9ykXZihnPqyckqkc
N1y58knl4meUs/8D/ePR/yr630D/2+h/F/0fon8++pegfxX616N/K/p3o38/
+o+g/xT6/47+y27U/iuUq65WLm2lnHu9csbNykl3KNd0VS5LUy7srZz5kHLK
YOW4LOXKEcrFTyln/7ty6gvofxn9hegvQn8x+t9Dfyn6F6B/GfpXo38j+rej
fw/6D6D/GPr/hv467bQ/QbmqkXJpU+Xca5QzblBOulW5pqNyWXflwl7Kmfcr
p/RXjhuiXDlUufgJ5eyfK6c+i/4X0f8K+iej/030l6D/ffTPRf9C9C9H/xr0
b0L/DvRXof8r9Neg/yz6427S/suVS5so5zZXzrhWOelG5ZoOymWdlAt7KGem
K6c8oBw3QLnyUeXinyhn/0w5daxy4i/Q/xL6J6L/NfS/hf530D8b/fPQvwj9
K9C/Dv2b0b8T/dXo/yv6T6L/PPovba/99ZVzr1TOaKmcdJ1yTTvlshTlwu8q
Z6Yqp9ynHJehXDlQufhHytk/VU59UjnxGeWq59Gfj/4C9L+B/rfRPxP9c9D/
B/QvQf8q9K9H/xb0f4H+v6D/CPpPof8C+uverP0NlTOuVk5qpVyTrFzWXrnw
O8qZXZVT0pTjeitXPqhcPEg5+8fKqSOUE59SrhqnXJqL/gnoL0R/Efqno38W
+j9C/wL0L0P/avRvQP829H+J/gPoP4b+0+ivRX+9W7S/kXJSU+Wa1splbZUL
b1HO7Kic0l05rpdyZR/l4n7K2Y8opw5VTnxCuWq0crQnjzH353XSfuv+vmPs
N3um406x39Q5yv/TvbnnLrFfvz+PcbQ/d+z35479/tyx35879vtzx35/7tjv
zx37/XmMo/25Y78/d+z3547/3+7PHReB/f7c8WSw3587ngj2+3PH+eC61cq5
4Fqw3587PgP2+3PHJ8B+f+74MNjvzx3vB/v9ueM9YL8/d7wD7PfnjjeD/f7c
8Xqw7c+f7xHj1WDbnxsvB9v+3HiRst+fO/b7c/tehO/b8N325/a9n7Lfn9v3
Sny3/bl976vs9+f2fS2+2/7cvt+r7Pfn9n0lvtv+3L73VPb7c/u+FN9r8d32
5/Y9R9nvz+37GXy3/bl9H6Ps9+f2/QS+2/7cvo9S9vtz+34Y321/bt+HK/v9
uX3fj++2P7fvWcp+f27f9+C77c/t+xBlvz+37zvw3fbn9n2Ast+f2/fN+G77
c/ueoez35/Z9Pb7b/ty+91b2+3P7vhrfbX9u33sp+/25fV+O77Y/t+89lP3+
3L4vwvdzyn5/7tjvzx37/bljvz+3+yLcL8D9Ntyfxr3tz+2+o7Lfn9v9aGW/
P7f7ubivxP1x3Nv+3O47KPv9ud2PVPb7c7ufjfu1uD+Ee9uf2307Zb8/t/th
yn5/bvczcb8S9/twb/tzu09W9vtzu89U9vtzu5+O+6W43437Wtzb/tzuuyn7
/bnd5yj7/bndh/253of9ud6H/bneh/253of9uXC0P49xtD+PcbQ/j3G0P49x
tD+PcbQ/j3G0P49xtD93/gnwF8E/C/4F8FfAvw3+A/Cfht/vz52/qXK0P3f+
jsrR/tz5+ylH+3PnH60c7c+dfzL8M+CfC38Z/JXwV8F/HH6/P3f+JsrR/tz5
OyhH+3Pn76sc7c+df6RytD93/onwT4N/Nvyfwb8W/p3wH4L/HPx+f+78LZSj
/bnzd1aO9ufOP1A52p87/9PK0f7c+V+Hfyb8n8C/Ev4t8O+D/2v4/f7c+a9S
jvbnzn+7crQ/d/4HlaP9ufNnK0f7c+d/Ff7p8H8I/1L4N8C/G/6j8NfC7/fn
zt9aOdqfO3835Wh/7vyDlaP9ufPnKEf7c+efCv978H8K/+fwb4f/IPxn4Pf7
c+dvphztz53/TuVof+78/ZWj/bnzj1GO9ufOPwX+Evg/hr8c/k3w74X/BPx+
f+78icrR/tz5b1OO9ufO/4BytD93/lHK0f7c+SfB/xb8H8C/GP518O+C/zD8
5+H3+3Pnb6kc7c+dv4tytD93/oeVo/258z+jHO3Pnf8N+N+Ffz78q+DfCv9+
+E/B7/fnzn+1crQ/d/47lKP9ufM/pBztz53/KeVof+78hfAXw18K/zL4N8K/
B/5j8Pv9ufM3Uo72585/q3K0P3f++5Wj/bnzP6Ec7c+d/xX434T/ffgXwr8G
/h3wfwX/Wfj9/tz5mytH+3Pn76Qc7c+df4BytD93/rHK0f7c+V+D/x3458G/
Av7N8FfDfxJ+vz93/iuVo/2586coR/tz589Qjvbnzv+kcrQ/d/4C+N+Gfw78
S+BfD/8X8B+B/wL8fn/u/K2Uo/2583dVjvbnzj9IOdqfO/845Wh/7vxF8M+C
fwH8q+HfBv8B+E/D7/fnzt9UOdqfO39H5Wh/7vz9lKP9ufOPVo72584/Gf4Z
8M+Ffzn8lfBXwX8cfr8/d/4mytH+3Pk7KEf7c+fvqxztz51/pHK0P3f+ifBP
g382/IvgXwv/TvgPwX9OOdqfxzjan8c42p/HONqfxzjan8c42p/HONqfx9jv
z5/veZH9/tyx35879vtzx35/7tjvzx37/bljvz937Pfnjv3+3LHfnzv2+3PH
fn/u2O/PHfv9uWO/P3fs9+fWvwz9FejfgP5t6P8S/QfQfxT9p9Ffi37bn1t/
I2W/P7f+1sp+f279tyj7/bn1d1f2+3Pr76Ps9+fW/4iy359b/+PKfn9u/TnK
fn9u/a+gfzL6p6J/Bvp/j/656F+I/jL0f47+SvT/Gf1V6D+I/uPoP4N+259b
/+XKfn9u/c2U/f7c+r+t7Pfn1t9J2e/Prf8eZb8/t/4fKPv9ufU/puz359Y/
Rtnvz63/JfRPRP8U9E9D/+/QPxv989D/GfrL0b8W/X9C/07070X/IfSfQP85
9Nv+3PrrK/v9ufW3UPb7c+tvp+z359bfWdnvz63/XmW/P7f+gcp+f279w5T9
/tz6n1b2+3Prz0f/JPS/jv7fon8m+ueg/xP0L0b/SvT/Ef1b0L8L/fvQfxj9
X6P/Avptf279DZT9/tz6v6Xs9+fW317Z78+tv4tybk9lvz+3/geV/f7c+jOV
/f7c+rOV/f7c+nPRPx79r6L/N+ifjv5Z6P8Q/fPRvxT9FejfgP6t6N+N/v3o
P4r+0+ivRb/tz63/CmW/P7f+1sp+f279Nyv7/bn1d1P2+3Pr76Ps9+fWP1jZ
78+t/3Flvz+3/hxlvz+3/pfR/2v0T0X/DPS/h/5S9H+K/jL0f47+jejfjv49
6D+I/uPoP4N+259bf4Ky359bfzNlvz+3/huU/f7c+u9U9vtz679H2e/Prb+/
st+fW/9jyn5/bv1jlP3+3PpfRP+v0D8F/dPQX4L+99H/Mfo/Q385+tegfxP6
d6B/L/oPof8E+s+i3/bn1v8NZb8/t/4Wyn5/bv03Kvv9ufV3Vvb7c+tPV/b7
c+sfoOz359Y/TNnvz61/rLLfn1v/L9E/Cf2vo/8t9L+D/g/Q/wn6F6N/BfrX
oX8z+nehfx/6D6P/JPrPo9/259bfQNnvz62/pbLfn1v/Tcp+f279XZT9/tz6
71P2+3Prf1jZ78+tf7iy359b/zPKfn9u/ePR/yr630D/2+h/F/0fon8++peg
fxX616N/K/p3o38/+o+g/xT6/45+259b/xXKfn9u/a2U/f7c+m9W9vtz6++q
7Pfn1t9b2e/PrX+wst+fW/8IZb8/t/5/V/b7c+t/Gf2F6C9CfzH630N/KfoX
oH8Z+lejfyP6t6N/D/oPoP8Y+v+GftufW3+Cst+fW39TZb8/t/4blP3+3Po7
Kvv9ufX3Uvb7c+vvr+z359Y/VNnvz63/58p+f279L6L/FfRPRv+b6C9B//vo
n4v+hehfjv416N+E/h3or0L/V+ivQf9Z9Nv+3PovV/b7c+tvruz359Z/o7Lf
n1t/J2W/P7f+dGW/P7f+Acp+f279P1H2+3PrH6vs9+fW/xL6J6L/NfS/hf53
0D8b/fPQvwj9K9C/Dv2b0b8T/dXo/yv6T6L/PPptf2799ZX9/tz6Wyr7/bn1
t1P2+3Pr/66y359b/33Kfn9u/QOV/f7c+n+q7Pfn1v+Mst+fW38++gvQ/wb6
30b/TPTPQf8f0L8E/avQvx79W9D/Bfr/gv4j6D+F/gvot/259TdU9vtz62+l
7Pfn1t9e2e/Prb+rst+fW39vZb8/t/5Byn5/bv0jlP3+3PrHKfv9ufVPQH8h
+ovQPx39s9D/EfoXoH8Z+lejfwP6t6H/S/QfQP8x9J9Gfy36bX9u/Y2U/f7c
+lsr+/259d+i7Pfn1t9d2e/Prb+Pst+fW/8jyn5/bv1PKPv9ufXnKNeZ8lHs
t07nHv3+8WfxfM8Xf8L75Mr/NPvwHjEO75Mrh/fJhcP75OF9cvke3ifX7+F9
cuHwPrlyeJ88vE8u92EfrvdhH673YR+u92Efrvf/Mvvwnhc5vE8e3icXf3if
XP3hfXL1h/fJ1R/eJ1d/eJ9c/eF9cvWH98nVH94nV394n1z94X1y9Yf3ydUf
3idXf3ifXP3hfXLh8D45+sP75Nof3ifX/vA+ufaH98m1P7xPrv3hfXLtD++T
a394n1z7w/vk2h/eJ9f+8D659of3ybU/vE+u/eF9cu0P75Nrf3ifXPvD++Ta
H94n1/7wPrn2h/fJtT+8T6794X1y7Q/vk2t/eJ9c+8P75Nof3ifX/v+z98kT
Ypw+yf39HbFf/1654//2e+WO/XvljsP75Mr/tPvz8D75RQ7vkwuH98nD++Ty
PbxPrt/D++TC4X1y5fA+eXifXO7D/lzvw/5c78P+XO/D/lzv/2X35zEO75OH
98nFH94nV394n1z94X1y9Yf3ydUf3idXf3ifXP3hfXL1h/fJ1R/eJ1d/eJ9c
/eF9cvWH98nVH94nV394n1w4vE+O/vA+ufaH98m1P7xPrv3hfXLtD++Ta394
n1z7w/vk2h/eJ9f+8D659of3ybU/vE+u/eF9cu0P75Nrf3ifXPvD++TaH94n
1/7wPrn2h/fJtT+8T6794X1y7Q/vk2t/eJ9c+8P75Nof3ifX/vA+ufaH98m1
/3/xffL/BG2gBIY=
       "], {{{}, {
          EdgeForm[], 
          Directive[
           RGBColor[0.9, 0.36, 0.054], 
           Opacity[0.3]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl11PUGFYMAOC/tm3btm3btm3btm3btm27W7vV2LqvZw/fzTl5yVNukkSN
O1RuHzggICAQz4IEBFwKERAgBLz0vOB5kP/zT3nCYx7xkAfc5x53ucNtbnGT
G1znGle5wuXfNbjIBc5zjrOc4TSnOMkJjnOMoxzhMIc4yAH2s4+97GE3u9jJ
Drazja1sYTOb2MgG1rOOtaxhNatYyQqWs4ylLGExi1jIAuYzj7nMYTazmMkM
pjONqUxhMpOYyATGM46xjGE0oxjJCIYzjKEMYTCDGMgA+tOPvvShN73oSQ+6
042udKEznehIB9rTjra0oTWtaEkLmtOMpjShMY1oSAPqU4+61KE2tahJDapT
japUoTKVqEgFylOOspShNKUoSQmKU4yiFKEwhShIAfKTj7zkITe5yEkOspON
rGQhM5nISAbSk460pCE1qUhJCpKTjKQkITGJSEgC4hOPuMQhNrGISQyiE42o
RCEykYhIBMITjrCEITShCEkIghOMoAQhMIH43aS/NO6//MNPfvCdb3zlC5/5
xEc+8Dd/8Z53/MkfvOUNr3nFS17wnGc85QmPecRDHnCfe9zlDre5xU1ucJ1r
XOUKl7nERS5wnnOc5QynOcVJTnCcYxzlCIc5xEEOsJ997GUPu9nFTnawnW1s
ZQub2cRGNrCedaxlDatZxUpWsJxlLGUJi1nEQhYwn3nMZQ6zmcVMZjCdaUxl
CpOZxEQmMJ5xjGUMoxnFSEYwnGEMZQiDGcRABtCffvSlD73pRU960J1udKUL
nelERzrw+/NvR1va0JpWtKQFzWlGU5rQmEY0pAH1qUdd6lCbWtSkBtWpRlWq
UJlKVKQC5SlHWcpQmlKUpATFKUZRilCYQhSkAPnJR17ykJtc5CQH2clGVrKQ
mUxkJAPpSUda0pCaVKQkBclJRlKSkJhEJCQB8YlHXOIQm1jEJAbRiUZUohCZ
SEQkAuEJR1jCEJpQhCQEwQlGUIIQmEAE8MvQ/pd/+MkPvvONr3zhM5/4yAf+
5i/e844/+YO3vOE1r3jJC57zjKc84TGPeMgD7nOPu9zhNre4yQ2uc42rXOEy
l7jIBc5zjrOc4TSnOMkJjnOMoxzhMIc4yAH2s4+97GE3u9jJDrazja1sYTOb
2MgG1rOOtaxhNatYyQqWs4ylLGExi1jIAuYzj7nMYTazmMkMpjONqUxhMpOY
yATGM46xjGE0oxjJCIYzjKEMYTCDGMgA+tOPvvShN73oSQ+6042udKEznehI
B9rTjra0oTWtaEkLmtOMpjShMY1oSAPqU4+61KE2tahJDapTjapUoTKVqEgF
ylOOspShNKUoSQmKU4yiFKEwhShIAfKTj7zkITe5yEkOspONrGQhM5nISAbS
k460pCE1qUhJCpKTjKQkITGJSEgC4hOPuMQhNrGISQyiE42oRCEykYhIBMIT
jrCEITShCEkIghOMoAQhMIEC/b+w/xL+5R9+8oPvfOMrX/jMJz7ygb/5i/e8
40/+4C1veM2r3/s/L3j++y7gKU94zCMe8oD73OMud7jNLW5yg+tc4ypXuMwl
LnKB85zjLGc4zSlOcoLjHOMoRzjMIQ5ygP3sYy972M0udrKD7WxjK1vYzCY2
soH1rGMta1jNKlayguUsYylLWMwiFrKA+cxjLnOYzSxmMoPpTGMqU5jMJCYy
gfGMYyxjGM0oRjKC4QxjKEMYzCAGMoD+9KMvfehNL3rSg+50oytd6EwnOtKB
9rSjLW1oTSta0oLmNKMpTWhMIxrSgPrUoy51qE0talKD6lSjKlWoTCUqUoHy
lKMsZShNKUpSguIUoyhFKEwhClKA/OQjL3nITS5ykoPsZCMrWchMJjKSgfSk
Iy1pSE0qUpKC5CQjKUlITCISkoD4xCMucYhNLGISg+hEIypRiEwkIhKB8IQj
LGEITShC4hQPCM5/5IbxSA==
             "]]}]}, {}, {
          EdgeForm[], 
          Directive[
           RGBColor[0.365248, 0.427802, 0.758297], 
           Opacity[0.3]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwV19MWHYYCBNAT27Zt27Zt27Zt27Zt22mTNmxj20lz933Ya9Z8wDxMkqad
qnYMGggEgvAgWCBwNVQg8P9+WV7iIhc4zznOcobTnOIkJzjOMY5yhMMc4iAH
2M8+9rKH3exiJzvYzja2soXNbGIjG1jPOtayhtWsYiUrWM4ylrKExSxiIQuY
zzzmMofZzGImM5jONKYyhclMYiITGM84xjKG0YxiJCMYzjCGMoTBDGIgA+hP
P/rSh970oic96E43utKFznSiIx1oTzva0obWtKIlLWhOM5rShMY0oiENqE89
6lKH2tSiJjWoTjWqUoXKVKIiFShPOcpShtKUoiQlKE4xilKEwhSiIAXITz7y
kofc5CInOchONrKShcxkIiMZSE860pKG1KQiJSlITjKSkoTEJCIhCYhPPOIS
h9jEIiYxiE40ohKFyEQiIhEITzjCEobQhCIkIQhOMIIShAC/QwYC//GLn/zg
O9/4yhc+84mPfOA973jLG17zipe84DnPeMoTHvOIhzzgX/7hPve4yx1uc4u/
+Yub3OBP/uA617jKFS5ziYtc4DznOMsZTnOKk5zgOMc4yhEOc4iDHGA/+9jL
Hnazi53sYDvb2MoWNrOJjWxgPetYyxpWs4qVrGA5y1jKEhaziIUsYD7zmMsc
ZjOLmcxgOtOYyhQmM4mJTGA84xjLGEYzipGMYDjDGMoQBjOIgQygP/3oSx96
04ue9KA73ehKFzrTiY50oD3taEsbWtOKlrSgOc1oShMa04iGNKA+9ahLHWpT
i5rUoDrVqEoVKlOJilSgPOUoSxlKU4qSlKA4xShKEQpTiIIUID/5yEsecpOL
nOQgO9nIShYyk4mMZCA96UhLGlKTipSkIDnJSEoSEpOIhCQgPvGISxxiE4uY
xCA60YhKFCITiYhEIDzhCEsYQhOKkIQgOMEIShAC/A5h//ziJz/4zje+8oXP
fOIjH3jPO97yhte84iUveM4znvKExzziIQ/4l3+4zz3ucofb3OJv/uImN/iT
P7jONa5yhctc4iIXOM85znKG05ziJCc4zjGOcoTDHOIgB9jPPvayh93sYic7
2M42trKFzWxiIxtYzzrWsobVrGIlK1jOMpayhMUsYiELmM885jKH2cxiJjOY
zjSmMoXJTGIiExjPOMYyhtGMYiQjGM4whjKEwQxiIAPoTz/60ofe9KInPehO
N7rShc50oiMdaE872tKG1rSiJS1oTjOa0oTGNKIhDahPPepSh9rUoiY1qE41
qlKFylSiIhUoTznKUobSlKIkJShOMYpShMIUoiAFyE8+8pKH3OQiJznITjay
koXMZCIjGUhPOtKShtSkIiUpSE4ykpKExCQiIQmITzziEofYxCImMYhONKIS
hchEIiIRCE84whKG0IQiJCEITjCCEoQAv4PbP7/4yQ++842vfOEzn/jIB97z
jre84TWveMkLnvOMpzzhMY94yAP+5R/uc4+73OE2t/ibv7jJDf7kD65zjatc
4TKXuMgFznOOs5zhNKc4yQmOc4yjHOEwhzjIAfazj73sYTe72MkOtrONrWxh
M5vYyAbWs461rGE1q1jJCpazjKUsYTGLWMgC5jOPucxhNrOYyQymM42pTGEy
k5jIBMYzjrGMYTSjGMkIhjOMoQxhMIMYyAD604++9KE3vehJD7rTja50oTOd
6EgH2tOOtrShNa1oSQua04ymNKExjWhIA+pTj7rUoTa1qEkNqlONqlShMpWo
SAXKU46ylKE0pShJCYpTjKIUoTCFKEgB8pOPvOQhN7nISQ6yk42sZCEzmchI
BtKTjrSkITWpSEkKkpOMpCQhMYlISALiE4+4xCE2sYhJDKITjahEITKRiEgE
whOOsIQhNKEISQiCE4ygBCHAb3/6P37xkx985xtf+cJnPvGRD7znHW/5H6Hj
+00=
             "]]}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], 
           RGBColor[0.9, 0.36, 0.054], 
           CapForm["Butt"], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl19OyIIYSBdAztm3btm3btm3btm3btm2byRjJZN26D6u6f2Dv6k7UuEPl
9oECAgKeBgkIuBQiICC43QgISShCE4awhCM8EYhIJCIThahEIzoxiEksYhOH
uMQjPglISCISk4SkJCM5KUhJKlKThrSkIz0ZyEgmMpOFrGQjOznISS5yk4e8
5CM/BShIIQpThKIUozglKEkpSlOGspSjPBWoSCUqU4WqVKM6NahJLWpTh7rU
oz4NaEgjGtOEpjSjOS1oSSta04a2tKM9HehIJzrTha50ozs96EkvetOHvvSj
PwMYyCAGM4ShDGM4IxjJKEYzhrGMYzwTmMgkJjOFqUxjOjOYySxmM4e5zGM+
C1jIIhazhKUsYzkrWMkqVrOGtaxjPRvYyCY2s4WtbGM7O9jJLnazh73sYz8H
OMghDnOEoxzjOCc4ySlOc4aznOM8F7jIJS5zhatc4zo3uMktbnOHu9zjPg94
yCMe84SnPOM5L3jJK17zhre84z0f+Mhf/M0nPvOFr3zjOz/4yS9+8w//8ocA
oQ9EYIIQlGAEJwQhCUVowhCWcIQnAhGJRGSiEJVoRCcGMYlFbOIQl3jEJwEJ
SURikpCUZCQnBSlJRWrSkJZ0pCcDGclEZrKQlWxkJwc5yUVu8pCXfOSnAAUp
RGGKUJRiFKcEJSlFacpQlnKUpwIVqURlqlCValSnBjWpRW3qUJd61KcBDWlE
Y5rQlGY0pwUtaUVr2tCWdvyvrDvQkU50pgtd6UZ3etCTXvSmD33pR38GMJBB
DGYIQxnGcEYwklGMZgxjGcd4JjCRSUxmClOZxnRmMJNZzGYOc5nHfBawkEUs
ZglLWcZyVrCSVaxmDWtZx3o2sJFNbGYLW9nGdnawk13sZg972cd+DnCQQxzm
CEc5xnFOcJJTnOYMZznHeS5wkUtc5gpXucZ1bnCTW9zmDne5x30e8JBHPOYJ
T3nGc17wkle85g1vecd7PvCRv/ibT3zmC1/5xnd+8JNf/OYf/uUPAYHln8AE
ISjBCE4IQhKK0IQhLOEITwQiEonIRCEq0YhODGISi9jEIS7xiE8CEpKIxCQh
KclITgpSkorUpCEt6UhPBjKSicxkISvZyE4OcpKL3OQhL/nITwEKUojCFKEo
xShOCUpSitKUoSzlKE8FKlKJylShKtWoTg1qUova1KEu9ahPAxrSiMY0oSnN
aE4LWtKK1rShLe1oTwc60onOdKEr3ehOD3rSi970oS/96M8ABjKIwQxhKMMY
zghGMorRjGEs4xjPBCYyiclMYSrTmM4MZjKL2cxhLvOYzwIWsojFLGEpy1jO
ClayitWsYS3rWM8GNrKJzWxhK9vYzg52sovd7GEv+9jPAQ5yiMMc4SjHOM4J
TnKK05zhLOc4zwUuconLXOEq17jODW5yi9vc4S73uM8DHvKIxzzhKc94zgte
8orXvOEt73jPBz7yF3/zic984Svf+M4PfvKL3/zDv/whwL0fiMAEISjBCE4I
QhKK0IQhLOEITwQiEonIRCEq0YhODGISi9jEIS7xiE8CEpKIxCQhKclITgpS
korUpCEt6UhPBjKSicxkISvZyE4OcpKL3OQhL/nITwEKUojCFKEoxShOCUpS
itKUoSzlKE8FKlKJylShKtWoTg1qUova1KEu9ahPAxrSiMY0oSnNaE4LWtKK
1rShLe1oTwc60onOdKEr3ehOD3rSi970oS/96M8ABjKIwQxhKMMYzghGMorR
jGEs4xjPBCYyiclMYSrTmM4MZjKL2cxhLvOYzwIWsojFLGEpy1jOClayitWs
YS3rWM8GNrKJzWxhK9vYzg52sovd7GEv+9jPAQ5yiMMc4SjHOM4JTnKK05zh
LOc4zwUuconLXOEq17jODW5yi9vc4S73uM8DHvKIxzwJ8v//+xnPecFL/gPN
mvFC
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], 
           RGBColor[0.365248, 0.427802, 0.758297], 
           CapForm["Butt"], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwN18MWHQgARMEX27Zt27Zt27Zt27Zt2zOxnYxiY2pRp7/gLjpJ005VOwYJ
BAKPgwUCV0MFAm/sW97xng985BOf+cJXvvGdH/zkF78JBA8EghCUYAQnBCEJ
RWjCEJZwhCcCEYlEZKIQlWhEJwYxiUVs4hCXeMQnAQlJRGKSkJRkJCcFKUlF
atKQlnSkJwMZyURmspCVbGQnBznJRW7ykJd85KcABSlEYYpQlGIUpwQlKUVp
ylCWcpSnAhWpRGWqUJVqVKcGNalFbepQl3rUpwENaURjmtCUZjSnBS1pRWva
0JZ2tKcDHelEZ7rQlW50pwc96UVv+tCXfvRnAAMZxGCGMJRhDGcEIxnFaMYw
lnGMZwITmcRkpjCVaUxnBjOZxWzmMJd5zGcBC1nEYpawlGUsZwUrWcVq1rCW
daxnAxvZxGa2sJVtbGcHO9nFbvawl33s5wAHOcRhjnCUYxznBCc5xWnOcJZz
nOcCF7nEZa5wlWv8wZ9c5wY3ucVt7nCXe9znAQ95xGOe8JRnPOcFL3nFa/7i
b/7hX/7jDW95x3s+8JFPfOYLX/nGd37wk1/8JhBC/wQlGMEJQUhCEZowhCUc
4YlARCIRmShEJRrRiUFMYhGbOMQlHvFJQEISkZgkJCUZyUlBSlKRmjSkJR3p
yUBGMpGZLGQlG9nJQU5ykZs85CUf+SlAQQpRmCIUpRjFKUFJSlGaMpSlHOWp
QEUqUZkqVKUa1alBTWpRmzrUpR71aUBDGtGYJjSlGc1pQUta0Zo2tKUd7elA
RzrRmS50pRvd6UFPetGbPvSlH/0ZwEAGMZghDGUYwxnBSEYxmjGMZRzjmcBE
JjGZKUxlGtOZwUxmMZs5zGUe81nAQhaxmCUsZRnLWcFKVrGaNaxlHevZwEY2
sZktbGUb29nBTnaxmz3sZR/7OcBBDnGYIxzlGMc5wUlOcZoznOUc57nARS5x
mStc5Rp/8CfXucFNbnGbO9zlHvd5wEMe8ZgnPOUZz3nBS17xmr/4m3/4l/94
w1ve8Z4PfOQTn/nCV77xnR/85Be/CYTUP0EJRnBCEJJQhCYMYQlHeCIQkUhE
JgpRiUZ0YhCTWMQmDnGJR3wSkJBEJCYJSUlGclKQklSkJg1pSUd6MpCRTGQm
C1nJRnZykJNc5CYPeclHfgpQkEIUpghFKUZxSlCSUpSmDGUpR3kqUJFKVKYK
ValGdWpQk1rUpg51qUd9GtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd
6UZ3etCTXvSmD33pR38GMJBBDGYIQxnGcEYwklGMZgxjGcd4JjCRSUxmClOZ
xnRmMJNZzGYOc5nHfBawkEUsZglLWcZyVrCSVaxmDWtZx3o2sJFNbGYLW9nG
dnawk13sZg972cd+DnCQQxzmCEc5xnFOcJJTnOYMZznHeS5wkUtc5gpXucYf
/Ml1bnCTW9zmDne5x30e8JBHPOYJT3nGc17wkle85i/+5h/+5T/e8JZ3vOcD
H/nEZ77wlW985wc/+cVvAj5EEIISjOCEICShCE0YwhKO8EQgIpGITBSiEo3o
xCAmsYhNHOISj/gkICGJSEwSkpKM5KQgJalITRrSko70ZCAjmchMFrKSjezk
ICe5yE0e8pKP/BSgIIUoTBGKUozilKAkpShNGcpSjvJUoCKVqEwVqlKN6tSg
JrWoTR3qUo/6NKAhjWhME5rSjOa0oCWtaE0b2tKO9nSgI53oTBe60o3u9KAn
vehNH/rSj/4MYCCDGMwQhjKM4YxgJKMYzRjGMo7xTGAik5jMFKYyjenMYCaz
mM0c5jKP+SxgIYtYzBKWsozlrGAlq1jNGtayjvVsYCOb2MwWtrKN7exgJ7vY
zR72so/9HOAghzjMEY5yjOOc4CSnOM0ZznKO81zgIpe4zP/ixftI
           "]]}}, {{
          Directive[
           PointSize[0.0055000000000000005`], 
           RGBColor[0.9, 0.36, 0.054], 
           CapForm["Butt"], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.0055000000000000005`], 
           RGBColor[0.365248, 0.427802, 0.758297], 
           CapForm["Butt"], 
           AbsoluteThickness[1.6]]}}, {{
          Directive[
           PointSize[0.0055000000000000005`], 
           RGBColor[0.9, 0.36, 0.054], 
           CapForm["Butt"], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.0055000000000000005`], 
           RGBColor[0.365248, 0.427802, 0.758297], 
           CapForm["Butt"], 
           AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
          Directive[
           PointSize[0.0055000000000000005`], 
           RGBColor[0.9, 0.36, 0.054], 
           CapForm["Butt"], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.0055000000000000005`], 
           RGBColor[0.365248, 0.427802, 0.758297], 
           CapForm["Butt"], 
           AbsoluteThickness[1.6]]}, {}, {}, {}}}], {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           CapForm["Butt"], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1: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
fzw=
           "]]}, 
         Annotation[#, "Charting`Private`Tag$154107#1"]& ]}}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 25.}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"\\!\\(TraditionalForm\\`\\*SubscriptBox[\\(log\\), \\(r\\)](N)\\)r\
\"", TraditionalForm], None}, {
        FormBox["\"N\"", TraditionalForm], None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{0}, {0}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     LabelStyle -> {FontFamily -> "Times"}, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"The efficiency of the numeration system as a function of the \
number of states\"", TraditionalForm], PlotRange -> {{0, 999001.}, {25, 40}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"r=2\"", "\"r=3\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Times"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.36, 0.054], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.24, 0.036000000000000004`],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9`", ",", "0.36`", ",", "0.054`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.36, 0.054]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.36, 0.054], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2434986666666667, 0.28520133333333336`, 
                    0.5055313333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.365248`", ",", "0.427802`", ",", "0.758297`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.365248, 0.427802, 0.758297]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.365248, 0.427802, 0.758297], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.770794813899296*^9, 3.770794952970624*^9, 3.770795015730736*^9, 
   3.7707990617389803`*^9, {3.770807648485485*^9, 3.7708076561137342`*^9}, 
   3.7708078910102777`*^9, 3.770924275834647*^9, 3.770927226884012*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"e7718191-d52f-48cd-a278-2a2a0a14ea4a"]
}, Open  ]],

Cell["\<\
On the above picture, we can see that trits are more efficient than bits, but \
from a technical point of view usage of bits is easier. For both integer \
bases, the divergence from optimal values decreases the effectiveness of the \
numeration system. As a result, it decreases the data rate.\
\>", "Text",
 CellChangeTimes->{{3.770795367870743*^9, 3.770795432603706*^9}, 
   3.7708066497858267`*^9},
 TextJustification->1,ExpressionUUID->"484622f1-9f23-4db9-b2da-af3fc0f3ee4e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Influence of noise", "Subsection",
 CellChangeTimes->{{3.770795879009529*^9, 3.770795889413801*^9}, {
  3.770799548483876*^9, 
  3.770799561370556*^9}},ExpressionUUID->"e428d436-58a2-4623-86e4-\
e0d56d212c6b"],

Cell[TextData[{
 "Because the information is transmitted in the real world, the signal is \
exposed to ",
 Cell[BoxData[
  TagBox[
   TooltipBox[
    StyleBox["\<\"noises\"\>",
     StripOnInput->False,
     LineColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FrontFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     BackFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     GraphicsColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]]],
    "\"electrical or acoustic activity that can disturb communication\"",
    TooltipStyle->"TextStyling"],
   Annotation[#, 
    "electrical or acoustic activity that can disturb communication", 
    "Tooltip"]& ]], "Output",ExpressionUUID->
  "3edc6657-a841-40d5-aa42-7acd92510f40"],
 ". ",
 Cell[BoxData[
  TemplateBox[{
   "\"Shannon\[Dash]Hartley theorem\"",
    "https://en.wikipedia.org/wiki/Shannon%E2%80%93Hartley_theorem"},
   "HyperlinkURL"]], "Output",
  CellChangeTimes->{3.7707990650399733`*^9},ExpressionUUID->
  "1d77dcaf-1f57-4351-bbd2-25d0b102ee60"],
 " states that there is the theoretical maximum rate at which information can \
be transmitted over a communications channel in the presence of noise",
 ButtonBox[Cell[TextData[StyleBox[ButtonBox["4"],
  FontVariations->{"CompatibilityType"->"Superscript"}]], "Citation",
  Editable->False,
  TaggingRules->{NoteData -> RowBox[{"Shannon", ",", " ", 
       RowBox[{
         RowBox[{"C", ".", " ", "E", ".", " ", "Communication"}], " ", "in", 
         " ", "the", " ", "Presence", " ", "of", " ", 
         RowBox[{"Noise", ".", " ", "Proc", ".", " ", "IRE"}], " ", "37"}], 
       ",", " ", "10", "\[Dash]", 
       RowBox[{"21", " ", 
         RowBox[{
           RowBox[{"(", "1949", ")"}], ".", "\n"}]}]}]},ExpressionUUID->
  "b4d5cc08-5910-4858-903d-4a6ad530af3b"],
  BaseStyle->"Hyperlink",
  ButtonData->"00004DF4"],
 "."
}], "Text",
 CellChangeTimes->{{3.770798982314641*^9, 3.770799022365753*^9}, 
   3.77079907513688*^9, {3.770799138074573*^9, 3.7707991516671743`*^9}, {
   3.7708067438632298`*^9, 3.7708067447663937`*^9}, {3.770808362468585*^9, 
   3.770808362486014*^9}, {3.770808790913869*^9, 3.770808790917231*^9}, {
   3.7708089410668592`*^9, 3.77080894107003*^9}, {3.770809262801193*^9, 
   3.7708092628063*^9}, {3.770809649274235*^9, 3.77080964927829*^9}, {
   3.770809998978858*^9, 3.770809998982436*^9}},
 TextJustification->1,ExpressionUUID->"e48fb22c-4dd3-402f-8258-fd5b0a279f63"],

Cell[TextData[{
 "The theorem is formulated in the language of spectra. It is a useful \
mathematical representation which physically corresponds to the fact that any \
real ",
 Cell[BoxData[
  TagBox[
   TooltipBox[
    StyleBox["\<\"signal\"\>",
     StripOnInput->False,
     LineColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FrontFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     BackFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     GraphicsColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]]],
    "\"an electric quantity (voltage or current or field strength) whose \
modulation represents coded information about the source from which it \
comes\"",
    TooltipStyle->"TextStyling"],
   Annotation[#, 
    "an electric quantity (voltage or current or field strength) whose \
modulation represents coded information about the source from which it comes",
     "Tooltip"]& ]], "Output",ExpressionUUID->
  "42588c85-a3e4-41a6-9fd9-85e4b1497668"],
 " can be represented as a sum of simple ones. Such representation can be \
performed with the help of the ",
 Cell[BoxData[
  TemplateBox[{
   "\"Fourier transform\"","https://en.wikipedia.org/wiki/Fourier_transform"},
   
   "HyperlinkURL"]], "Output",ExpressionUUID->
  "9e95a506-a5bb-41af-840c-5cf95817137c"],
 ".\n\nFor instance, the demonstration below shows ",
 Cell[BoxData[
  TagBox[
   TooltipBox[
    StyleBox["\<\"spectrogram\"\>",
     StripOnInput->False,
     LineColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FrontFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     BackFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     GraphicsColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]]],
    "\"a photographic record of a spectrum\"",
    TooltipStyle->"TextStyling"],
   Annotation[#, "a photographic record of a spectrum", "Tooltip"]& ]], 
  "Output",ExpressionUUID->"dd8ecc3b-03cd-4cfa-b1ab-74778abc0a03"],
 " of an audio signal on the left side. On the right side, we can see the \
same signal but on the output of the channel. Here, the channel behaves like \
a low pass filter. In other words, it suppresses higher components of the \
spectrum of the signal. In the demo, the signal can be shifted (",
 StyleBox["\[CapitalDelta]f", "InlineFormula"],
 "), and the cutoff frequency (",
 Cell[BoxData[
  StyleBox[
   SubscriptBox["\[Omega]", "c"], "InlineFormula"]],
  CellChangeTimes->{{3.770800251088503*^9, 3.7708002512267838`*^9}},
  ExpressionUUID->"b9606c58-b3d8-4893-9711-b5e75155d181"],
 ") of the channel can be tuned."
}], "Text",
 CellChangeTimes->{{3.7708002302323513`*^9, 3.770800279334962*^9}, {
   3.7708008003819637`*^9, 3.770800914903082*^9}, 3.7708032314111347`*^9, 
   3.770803270138116*^9, 3.7708033141283407`*^9, {3.770806793570671*^9, 
   3.770806804577441*^9}, {3.770807747677023*^9, 3.770807749371266*^9}},
 TextJustification->1,ExpressionUUID->"8d474b2f-7ff0-447a-a46f-4246605aa8fe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"audio", "=", 
     RowBox[{"AudioFrequencyShift", "[", 
      RowBox[{
       RowBox[{"ExampleData", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<Audio\>\"", ",", "\"\<Piano\>\""}], "}"}], "]"}], ",", 
       RowBox[{"Quantity", "[", 
        RowBox[{"f", ",", "\"\<Hertz\>\""}], "]"}]}], "]"}]}], ";", 
    RowBox[{"filtered", "=", 
     RowBox[{"LowpassFilter", "[", 
      RowBox[{"audio", ",", 
       RowBox[{"Quantity", "[", 
        RowBox[{"w", ",", "\"\<Hertz\>\""}], "]"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Row", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{"view", ",", 
         RowBox[{"Spectrogram", "[", 
          RowBox[{"audio", ",", 
           RowBox[{"ImageSize", "->", "Medium"}]}], "]"}], ",", "audio"}], 
        "]"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{"view", ",", 
         RowBox[{"Spectrogram", "[", 
          RowBox[{"filtered", ",", 
           RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
         "filtered"}], "]"}]}], "}"}]}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"f", ",", "0", ",", "\"\<\[CapitalDelta]f\>\""}], "}"}], ",", 
     "0", ",", "3000", ",", "1000"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "w", ",", "5000", ",", "\"\<\!\(\*SubscriptBox[\(f\), \(c\)]\)\>\""}], 
      "}"}], ",", "0", ",", "5000", ",", "500"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"view", ",", "True", ",", "\"\<Spectrum\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   RowBox[{"ContinuousAction", "->", "False"}]}], "\[IndentingNewLine]", 
  "]"}]], "Code",
 CellChangeTimes->{{3.770800251088503*^9, 3.7708002512267838`*^9}, {
  3.770807793320876*^9, 3.7708078246824837`*^9}, {3.770924262086132*^9, 
  3.770924263967718*^9}, {3.770924343124144*^9, 3.7709243530619793`*^9}, {
  3.770924401983989*^9, 3.7709244092867403`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"a4d338a7-171d-4357-a0e2-dcd30fd2bf4d"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`f$$ = 0, $CellContext`view$$ = 
    True, $CellContext`w$$ = 5000, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`f$$], 0, "\[CapitalDelta]f"}, 0, 3000, 1000}, {{
       Hold[$CellContext`w$$], 5000, "\!\(\*SubscriptBox[\(f\), \(c\)]\)"}, 0,
       5000, 500}, {{
       Hold[$CellContext`view$$], True, "Spectrum"}, {True, False}}}, 
    Typeset`size$$ = {368.3, {233., 70.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`f$154159$$ = 0, $CellContext`w$154160$$ = 
    0, $CellContext`view$154161$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`f$$ = 0, $CellContext`view$$ = 
        True, $CellContext`w$$ = 5000}, "ControllerVariables" :> {
        Hold[$CellContext`f$$, $CellContext`f$154159$$, 0], 
        Hold[$CellContext`w$$, $CellContext`w$154160$$, 0], 
        Hold[$CellContext`view$$, $CellContext`view$154161$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`audio = AudioFrequencyShift[
          ExampleData[{"Audio", "Piano"}], 
          Quantity[$CellContext`f$$, "Hertz"]]; $CellContext`filtered = 
        LowpassFilter[$CellContext`audio, 
          Quantity[$CellContext`w$$, "Hertz"]]; Row[{
          If[$CellContext`view$$, 
           
           Spectrogram[$CellContext`audio, ImageSize -> 
            Medium], $CellContext`audio], 
          If[$CellContext`view$$, 
           
           Spectrogram[$CellContext`filtered, ImageSize -> 
            Medium], $CellContext`filtered]}]), 
      "Specifications" :> {{{$CellContext`f$$, 0, "\[CapitalDelta]f"}, 0, 
         3000, 1000}, {{$CellContext`w$$, 5000, 
          "\!\(\*SubscriptBox[\(f\), \(c\)]\)"}, 0, 5000, 
         500}, {{$CellContext`view$$, True, "Spectrum"}, {True, False}}}, 
      "Options" :> {ContinuousAction -> False}, "DefaultOptions" :> {}],
     ImageSizeCache->{414., {220., 226.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.770799527949342*^9, 3.7708042149568377`*^9, 3.770806834289126*^9, {
   3.770807648711968*^9, 3.7708076562046747`*^9}, {3.770807801895493*^9, 
   3.7708078254997263`*^9}, {3.770807891241311*^9, 3.770807895355151*^9}, {
   3.770924276088872*^9, 3.770924280676318*^9}, {3.770924318926978*^9, 
   3.770924354387618*^9}, 3.770924410549733*^9, 3.770927226984291*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"a3f2d332-ebca-4e3c-aa7b-7d9078f49a48"]
}, Open  ]],

Cell[TextData[{
 "In the language of the spectra, the ",
 Cell[BoxData[
  TagBox[
   TooltipBox[
    StyleBox["\<\"channel capacity\"\>",
     StripOnInput->False,
     LineColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FrontFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     BackFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     GraphicsColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]]],
    "\"the maximum data rate that can be attained over a given channel\"",
    TooltipStyle->"TextStyling"],
   Annotation[#, 
    "the maximum data rate that can be attained over a given channel", 
    "Tooltip"]& ]], "Output",ExpressionUUID->
  "a72d6e8e-d8ec-4756-a7af-d5de5c631da5"],
 " in bits per second with a presence of ",
 Cell[BoxData[
  TemplateBox[{
   "\"additive white Gaussian noise\"",
    "https://en.wikipedia.org/wiki/Additive_white_Gaussian_noise"},
   "HyperlinkURL"]], "Output",ExpressionUUID->
  "ff6146d9-34ef-4867-a7ee-200258d9f570"],
 " can be written as follows."
}], "Text",
 CellChangeTimes->{{3.770800400624333*^9, 3.7708004084110537`*^9}, 
   3.770800465797552*^9, {3.770800655015596*^9, 3.7708006814088163`*^9}, 
   3.7708007249119787`*^9, 3.7708069293112392`*^9, 3.770806966604618*^9, {
   3.770807012042149*^9, 3.77080703438405*^9}},
 TextJustification->1,ExpressionUUID->"50df52e5-3a44-4db9-bb94-f1351d4c1c28"],

Cell[BoxData[
 FormBox[
  RowBox[{"C", "=", 
   RowBox[{"B", " ", 
    RowBox[{
     SubscriptBox["log", "2"], "(", 
     RowBox[{"1", "+", 
      FractionBox["S", "N"]}], ")"}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",ExpressionUUID->"483611e0-27ac-\
4f5d-a721-1b8031811fc1"],

Cell[TextData[{
 "Here ",
 StyleBox["B", "InlineFormula"],
 " is the maximum spectrum width of the signal, which can be transmitted \
through the channel, and ",
 StyleBox["S/N", "InlineFormula"],
 " is a ",
 Cell[BoxData[
  TagBox[
   TooltipBox[
    StyleBox["\<\"signal-to-noise ratio\"\>",
     StripOnInput->False,
     LineColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FrontFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     BackFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     GraphicsColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]]],
    "\"the ratio of signal intensity to noise intensity\"",
    TooltipStyle->"TextStyling"],
   Annotation[#, "the ratio of signal intensity to noise intensity", 
    "Tooltip"]& ]], "Output",ExpressionUUID->
  "699537b7-1630-4da6-a002-63f44f4556b0"],
 "."
}], "Text",
 CellChangeTimes->{{3.770799404510768*^9, 3.770799429108314*^9}, 
   3.7707994892476473`*^9},
 TextJustification->1,ExpressionUUID->"07c49cbf-713d-4c38-b4e3-3f6b5d0997b0"],

Cell["\<\
Introducing the W as the width of the band where S = N, we can see the useful \
dependence for normalised channel capacity.\
\>", "Text",
 CellChangeTimes->{{3.7708006174077053`*^9, 3.7708006213965683`*^9}, 
   3.770806934452482*^9},
 TextJustification->1,ExpressionUUID->"f7ffec0f-2ca1-480f-a405-db200290568f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", " ", 
    RowBox[{
     RowBox[{
      FractionBox["B", "W"], " ", 
      RowBox[{"Log", "[", 
       RowBox[{"2", ",", 
        RowBox[{"1", "+", 
         FractionBox["W", "B"]}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"B", ",", "0", ",", 
       SuperscriptBox["10", "6"]}], "}"}], ",", 
     InterpretationBox[
      DynamicModuleBox[{Typeset`open = False}, 
       TemplateBox[{
        "List",StyleBox[
         "\"Options\"", "IconizedCustomName", StripOnInput -> False],GridBox[{{
            RowBox[{
              TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["List", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["5", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Byte count: \"", "IconizedLabel"], 
              "\[InvisibleSpace]", 
              TagBox["608", "IconizedItem"]}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],Dynamic[
         Typeset`open]},
        "IconizedObject"]],
      {PlotRange -> Full, PlotTheme -> "Scientific", PlotLabel -> 
       "Classical channel capacity as a function of bandwidth", 
       FrameLabel -> {"W, Hz", "C/W, bits/s/W"}, ImageSize -> Large},
      SelectWithContents->True,
      Selectable->False]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"W", ",", 
       SuperscriptBox["10", "5"], ",", "\"\<W, Hz\>\""}], "}"}], ",", 
     SuperscriptBox["10", "4"], ",", 
     SuperscriptBox["10", "6"]}], "}"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.770795851100357*^9, 3.770795855882802*^9}, {
   3.7708009948614883`*^9, 3.770801000644212*^9}, 3.770806923145323*^9, {
   3.770807089122962*^9, 3.7708071101553288`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"657917a1-590c-4cac-a10d-58e374ba4561"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`W$$ = 100000, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`W$$], 100000, "W, Hz"}, 10000, 1000000}}, 
    Typeset`size$$ = {576., {190., 194.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`W$158338$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`W$$ = 100000}, 
      "ControllerVariables" :> {
        Hold[$CellContext`W$$, $CellContext`W$158338$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[($CellContext`B/$CellContext`W$$) 
        Log[2, 1 + $CellContext`W$$/$CellContext`B], {$CellContext`B, 0, 
         10^6}, {PlotRange -> Full, PlotTheme -> "Scientific", PlotLabel -> 
         "Classical channel capacity as a function of bandwidth", 
         FrameLabel -> {"W, Hz", "C/W, bits/s/W"}, ImageSize -> Large}], 
      "Specifications" :> {{{$CellContext`W$$, 100000, "W, Hz"}, 10000, 
         1000000}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{621., {235., 241.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.770795840710717*^9, 3.7707958565030603`*^9}, 
   3.770799063968615*^9, 3.770801008250321*^9, 3.770807113769333*^9, {
   3.770807652264543*^9, 3.770807658286022*^9}, 3.770807893400653*^9, 
   3.770924278220405*^9, 3.770927229033745*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"3a112706-e95f-4947-b879-9deda7fdb01f"]
}, Open  ]],

Cell["\<\
As we can see, as we increase the band, the capacity increases until the \
value where the total noise power is about equal to the signal power. In the \
result, we can make sure that the data rate is also limited due to noises.\
\>", "Text",
 CellChangeTimes->{{3.7708012935982733`*^9, 3.7708012975072603`*^9}, {
  3.770801473883933*^9, 3.770801474314889*^9}, {3.770807156038732*^9, 
  3.770807177235969*^9}, {3.770925988074074*^9, 
  3.770925990900536*^9}},ExpressionUUID->"8d72be7f-1246-4b65-8099-\
1a96fa193d17"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Formats", "Subsection",
 CellChangeTimes->{{3.7707959205872517`*^9, 
  3.770795923521208*^9}},ExpressionUUID->"2485fe6f-36e3-4288-855b-\
199e0b4e4f0a"],

Cell["\<\
Additionally, formats of data reduce data rate because they add extra \
information. For instance, to encode a text in the English dictionary it is \
required only the following amount of bits.\
\>", "Text",
 CellChangeTimes->{{3.7708016083398323`*^9, 3.770801610024933*^9}, {
   3.770805042725649*^9, 3.770805043397603*^9}, 3.7708072065605307`*^9, {
   3.770926078279291*^9, 3.77092608130313*^9}},
 TextJustification->1,ExpressionUUID->"02b05897-c13a-4a4f-815d-b71edcc96ce6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Quantity", "[", 
   RowBox[{
    RowBox[{"Log", "[", 
     RowBox[{"2", ",", 
      RowBox[{"Length", "@", 
       RowBox[{"Alphabet", "[", "]"}]}]}], "]"}], ",", "\"\<Bits\>\""}], 
   "]"}], "//", "N"}]], "Code",
 CellLabel->"In[35]:=",ExpressionUUID->"1d6baee1-cf6d-4b4e-8ea0-c22550595369"],

Cell[BoxData[
 TemplateBox[{"4.700439718141093`","\"b\"","bits","\"Bits\""},
  "Quantity"]], "Output",
 CellChangeTimes->{
  3.77080162358921*^9, {3.770807652575479*^9, 3.7708076584883327`*^9}, 
   3.770807893623629*^9, 3.770924278463705*^9, 3.770927229249937*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"c25fae57-93a9-417d-b2d6-f08894f8e1fa"]
}, Open  ]],

Cell[TextData[{
 "The nearest higher integer is 5 and this 5-bit code can encode ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", "5"], TraditionalForm]],ExpressionUUID->
  "483a2125-a95a-4dbb-8d52-ab86085cb33c"],
 " = 32 symbols. It is more than required. In practice, it is used longer \
codes like ",
 Cell[BoxData[
  TagBox[
   TooltipBox[
    StyleBox["\<\"ASCII\"\>",
     StripOnInput->False,
     LineColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FrontFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     BackFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     GraphicsColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]]],
    "\"(computer science) a code for information exchange between computers \
made by different companies; a string of 7 binary digits represents each \
character; used in most microcomputers\"",
    TooltipStyle->"TextStyling"],
   Annotation[#, 
    "(computer science) a code for information exchange between computers \
made by different companies; a string of 7 binary digits represents each \
character; used in most microcomputers", "Tooltip"]& ]], "Output",
  ExpressionUUID->"cfefb5aa-b50f-4fd4-ba63-a1ba1e4cd859"],
 ButtonBox[Cell[TextData[StyleBox[ButtonBox["5"],
  FontVariations->{"CompatibilityType"->"Superscript"}]], "Citation",
  Editable->False,
  TaggingRules->{NoteData -> RowBox[{"ASA", " ", "standard", " ", "X3", 
       RowBox[{".4", ".", " ", 
         RowBox[{"(", "1963", ")"}], "."}]}]},ExpressionUUID->
  "4f56f67c-f5e6-490b-ac12-9aa268a5e411"],
  BaseStyle->"Hyperlink",
  ButtonData->"0000199A"],
 ". The table is shown below."
}], "Text",
 CellChangeTimes->{{3.770801746445344*^9, 3.770801782477767*^9}, {
  3.770803667119899*^9, 3.7708036896832523`*^9}, {3.770805078100615*^9, 
  3.770805096847928*^9}, {3.7708051401124573`*^9, 3.7708051403924637`*^9}, {
  3.7708052069575043`*^9, 3.770805208750515*^9}, {3.77080964924704*^9, 
  3.77080964928494*^9}, {3.770809998988256*^9, 
  3.770809998992083*^9}},ExpressionUUID->"5f91c55b-7b25-4029-b48b-\
13ea55d2a9a5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multicolumn", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Labeled", "[", 
      RowBox[{
       RowBox[{"BaseForm", "[", 
        RowBox[{"#", ",", "2"}], "]"}], ",", 
       RowBox[{"FromCharacterCode", "[", "#", "]"}], ",", 
       RowBox[{"LabelStyle", "->", 
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           GraphicsBox[{
             {GrayLevel[0], RectangleBox[{0, 0}]}, 
             {GrayLevel[0], RectangleBox[{1, -1}]}, 
             {RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], RectangleBox[{0, -1}, {2, 1}]}},
            AspectRatio->1,
            DefaultBaseStyle->"ColorSwatchGraphics",
            Frame->True,
            FrameStyle->RGBColor[0.5542483660130719, 0., 0.05228758169934641],
            
            FrameTicks->None,
            
            ImageSize->
             Dynamic[{
              Automatic, 
               1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                Magnification])}],
            PlotRangePadding->None],
           StyleBox[
            RowBox[{"RGBColor", "[", 
              RowBox[{
                FractionBox["212", "255"], ",", "0", ",", 
                FractionBox["4", "51"]}], "]"}], NumberMarks -> False]],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                Rational[212, 255], 0, 
                Rational[4, 51]]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$, 
                FrontEndResource["RGBColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         RGBColor[
          Rational[212, 255], 0, 
          Rational[4, 51]],
         Editable->False,
         Selectable->False]}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", "127"}], "]"}]}], ",", "12", ",", " ", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{
      "List",StyleBox[
       "\"Options\"", "IconizedCustomName", StripOnInput -> False],GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["List", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["2", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox["208", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],Dynamic[
       Typeset`open]},
      "IconizedObject"]],
    {Frame -> All, Appearance -> "Horizontal"},
    SelectWithContents->True,
    Selectable->False]}], "]"}]], "Code",
 CellChangeTimes->{
  3.770795977680318*^9, {3.77092496478062*^9, 3.7709249743144093`*^9}, {
   3.77092501062705*^9, 3.770925011067206*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"05bc4c03-6c99-44ce-8c51-b01b90c437fc"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"0\"", "\"2\""], 0, Editable -> False], 
        BaseForm[#, 2]& ],"\"\.00\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1\"", "\"2\""], 1, Editable -> False], 
        BaseForm[#, 2]& ],"\"\.01\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"10\"", "\"2\""], 2, Editable -> False], 
        BaseForm[#, 2]& ],"\"\.02\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"11\"", "\"2\""], 3, Editable -> False], 
        BaseForm[#, 2]& ],"\"\.03\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"100\"", "\"2\""], 4, Editable -> False], 
        BaseForm[#, 2]& ],"\"\.04\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"101\"", "\"2\""], 5, Editable -> False], 
        BaseForm[#, 2]& ],"\"\.05\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"110\"", "\"2\""], 6, Editable -> False], 
        BaseForm[#, 2]& ],"\"\.06\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"111\"", "\"2\""], 7, Editable -> False], 
        BaseForm[#, 2]& ],"\"\.07\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1000\"", "\"2\""], 8, Editable -> False], 
        BaseForm[#, 2]& ],"\"\.08\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1001\"", "\"2\""], 9, Editable -> False], 
        BaseForm[#, 2]& ],"\"\\t\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1010\"", "\"2\""], 10, Editable -> False], 
        BaseForm[#, 2]& ],"\"\\n\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1011\"", "\"2\""], 11, Editable -> False], 
        BaseForm[#, 2]& ],"\"\.0b\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )]},
    {
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1100\"", "\"2\""], 12, Editable -> False], 
        BaseForm[#, 2]& ],"\"\\f\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1101\"", "\"2\""], 13, Editable -> False], 
        BaseForm[#, 2]& ],"\"\\r\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1110\"", "\"2\""], 14, Editable -> False], 
        BaseForm[#, 2]& ],"\"\.0e\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1111\"", "\"2\""], 15, Editable -> False], 
        BaseForm[#, 2]& ],"\"\.0f\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"10000\"", "\"2\""], 16, Editable -> False], 
        BaseForm[#, 2]& ],"\"\.10\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"10001\"", "\"2\""], 17, Editable -> False], 
        BaseForm[#, 2]& ],"\"\.11\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"10010\"", "\"2\""], 18, Editable -> False], 
        BaseForm[#, 2]& ],"\"\.12\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"10011\"", "\"2\""], 19, Editable -> False], 
        BaseForm[#, 2]& ],"\"\.13\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"10100\"", "\"2\""], 20, Editable -> False], 
        BaseForm[#, 2]& ],"\"\.14\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"10101\"", "\"2\""], 21, Editable -> False], 
        BaseForm[#, 2]& ],"\"\.15\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"10110\"", "\"2\""], 22, Editable -> False], 
        BaseForm[#, 2]& ],"\"\.16\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"10111\"", "\"2\""], 23, Editable -> False], 
        BaseForm[#, 2]& ],"\"\.17\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )]},
    {
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"11000\"", "\"2\""], 24, Editable -> False], 
        BaseForm[#, 2]& ],"\"\.18\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"11001\"", "\"2\""], 25, Editable -> False], 
        BaseForm[#, 2]& ],"\"\.19\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"11010\"", "\"2\""], 26, Editable -> False], 
        BaseForm[#, 2]& ],"\"\.1a\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"11011\"", "\"2\""], 27, Editable -> False], 
        BaseForm[#, 2]& ],"\"\[RawEscape]\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"11100\"", "\"2\""], 28, Editable -> False], 
        BaseForm[#, 2]& ],"\"\.1c\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"11101\"", "\"2\""], 29, Editable -> False], 
        BaseForm[#, 2]& ],"\"\.1d\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"11110\"", "\"2\""], 30, Editable -> False], 
        BaseForm[#, 2]& ],"\"\.1e\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"11111\"", "\"2\""], 31, Editable -> False], 
        BaseForm[#, 2]& ],"\"\.1f\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"100000\"", "\"2\""], 32, Editable -> False], 
        BaseForm[#, 2]& ],"\" \""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"100001\"", "\"2\""], 33, Editable -> False], 
        BaseForm[#, 2]& ],"\"!\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"100010\"", "\"2\""], 34, Editable -> False], 
        BaseForm[#, 2]& ],"\"\\\"\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"100011\"", "\"2\""], 35, Editable -> False], 
        BaseForm[#, 2]& ],"\"#\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )]},
    {
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"100100\"", "\"2\""], 36, Editable -> False], 
        BaseForm[#, 2]& ],"\"$\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"100101\"", "\"2\""], 37, Editable -> False], 
        BaseForm[#, 2]& ],"\"%\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"100110\"", "\"2\""], 38, Editable -> False], 
        BaseForm[#, 2]& ],"\"&\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"100111\"", "\"2\""], 39, Editable -> False], 
        BaseForm[#, 2]& ],"\"'\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"101000\"", "\"2\""], 40, Editable -> False], 
        BaseForm[#, 2]& ],"\"(\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"101001\"", "\"2\""], 41, Editable -> False], 
        BaseForm[#, 2]& ],"\")\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"101010\"", "\"2\""], 42, Editable -> False], 
        BaseForm[#, 2]& ],"\"*\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"101011\"", "\"2\""], 43, Editable -> False], 
        BaseForm[#, 2]& ],"\"+\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"101100\"", "\"2\""], 44, Editable -> False], 
        BaseForm[#, 2]& ],"\",\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"101101\"", "\"2\""], 45, Editable -> False], 
        BaseForm[#, 2]& ],"\"-\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"101110\"", "\"2\""], 46, Editable -> False], 
        BaseForm[#, 2]& ],"\".\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"101111\"", "\"2\""], 47, Editable -> False], 
        BaseForm[#, 2]& ],"\"/\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )]},
    {
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"110000\"", "\"2\""], 48, Editable -> False], 
        BaseForm[#, 2]& ],"\"0\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"110001\"", "\"2\""], 49, Editable -> False], 
        BaseForm[#, 2]& ],"\"1\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"110010\"", "\"2\""], 50, Editable -> False], 
        BaseForm[#, 2]& ],"\"2\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"110011\"", "\"2\""], 51, Editable -> False], 
        BaseForm[#, 2]& ],"\"3\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"110100\"", "\"2\""], 52, Editable -> False], 
        BaseForm[#, 2]& ],"\"4\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"110101\"", "\"2\""], 53, Editable -> False], 
        BaseForm[#, 2]& ],"\"5\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"110110\"", "\"2\""], 54, Editable -> False], 
        BaseForm[#, 2]& ],"\"6\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"110111\"", "\"2\""], 55, Editable -> False], 
        BaseForm[#, 2]& ],"\"7\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"111000\"", "\"2\""], 56, Editable -> False], 
        BaseForm[#, 2]& ],"\"8\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"111001\"", "\"2\""], 57, Editable -> False], 
        BaseForm[#, 2]& ],"\"9\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"111010\"", "\"2\""], 58, Editable -> False], 
        BaseForm[#, 2]& ],"\":\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"111011\"", "\"2\""], 59, Editable -> False], 
        BaseForm[#, 2]& ],"\";\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )]},
    {
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"111100\"", "\"2\""], 60, Editable -> False], 
        BaseForm[#, 2]& ],"\"<\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"111101\"", "\"2\""], 61, Editable -> False], 
        BaseForm[#, 2]& ],"\"=\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"111110\"", "\"2\""], 62, Editable -> False], 
        BaseForm[#, 2]& ],"\">\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"111111\"", "\"2\""], 63, Editable -> False], 
        BaseForm[#, 2]& ],"\"?\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1000000\"", "\"2\""], 64, Editable -> False], 
        BaseForm[#, 2]& ],"\"@\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1000001\"", "\"2\""], 65, Editable -> False], 
        BaseForm[#, 2]& ],"\"A\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1000010\"", "\"2\""], 66, Editable -> False], 
        BaseForm[#, 2]& ],"\"B\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1000011\"", "\"2\""], 67, Editable -> False], 
        BaseForm[#, 2]& ],"\"C\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1000100\"", "\"2\""], 68, Editable -> False], 
        BaseForm[#, 2]& ],"\"D\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1000101\"", "\"2\""], 69, Editable -> False], 
        BaseForm[#, 2]& ],"\"E\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1000110\"", "\"2\""], 70, Editable -> False], 
        BaseForm[#, 2]& ],"\"F\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1000111\"", "\"2\""], 71, Editable -> False], 
        BaseForm[#, 2]& ],"\"G\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )]},
    {
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1001000\"", "\"2\""], 72, Editable -> False], 
        BaseForm[#, 2]& ],"\"H\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1001001\"", "\"2\""], 73, Editable -> False], 
        BaseForm[#, 2]& ],"\"I\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1001010\"", "\"2\""], 74, Editable -> False], 
        BaseForm[#, 2]& ],"\"J\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1001011\"", "\"2\""], 75, Editable -> False], 
        BaseForm[#, 2]& ],"\"K\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1001100\"", "\"2\""], 76, Editable -> False], 
        BaseForm[#, 2]& ],"\"L\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1001101\"", "\"2\""], 77, Editable -> False], 
        BaseForm[#, 2]& ],"\"M\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1001110\"", "\"2\""], 78, Editable -> False], 
        BaseForm[#, 2]& ],"\"N\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1001111\"", "\"2\""], 79, Editable -> False], 
        BaseForm[#, 2]& ],"\"O\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1010000\"", "\"2\""], 80, Editable -> False], 
        BaseForm[#, 2]& ],"\"P\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1010001\"", "\"2\""], 81, Editable -> False], 
        BaseForm[#, 2]& ],"\"Q\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1010010\"", "\"2\""], 82, Editable -> False], 
        BaseForm[#, 2]& ],"\"R\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1010011\"", "\"2\""], 83, Editable -> False], 
        BaseForm[#, 2]& ],"\"S\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )]},
    {
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1010100\"", "\"2\""], 84, Editable -> False], 
        BaseForm[#, 2]& ],"\"T\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1010101\"", "\"2\""], 85, Editable -> False], 
        BaseForm[#, 2]& ],"\"U\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1010110\"", "\"2\""], 86, Editable -> False], 
        BaseForm[#, 2]& ],"\"V\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1010111\"", "\"2\""], 87, Editable -> False], 
        BaseForm[#, 2]& ],"\"W\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1011000\"", "\"2\""], 88, Editable -> False], 
        BaseForm[#, 2]& ],"\"X\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1011001\"", "\"2\""], 89, Editable -> False], 
        BaseForm[#, 2]& ],"\"Y\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1011010\"", "\"2\""], 90, Editable -> False], 
        BaseForm[#, 2]& ],"\"Z\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1011011\"", "\"2\""], 91, Editable -> False], 
        BaseForm[#, 2]& ],"\"[\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1011100\"", "\"2\""], 92, Editable -> False], 
        BaseForm[#, 2]& ],"\"\\\\\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1011101\"", "\"2\""], 93, Editable -> False], 
        BaseForm[#, 2]& ],"\"]\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1011110\"", "\"2\""], 94, Editable -> False], 
        BaseForm[#, 2]& ],"\"^\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1011111\"", "\"2\""], 95, Editable -> False], 
        BaseForm[#, 2]& ],"\"_\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )]},
    {
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1100000\"", "\"2\""], 96, Editable -> False], 
        BaseForm[#, 2]& ],"\"`\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1100001\"", "\"2\""], 97, Editable -> False], 
        BaseForm[#, 2]& ],"\"a\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1100010\"", "\"2\""], 98, Editable -> False], 
        BaseForm[#, 2]& ],"\"b\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1100011\"", "\"2\""], 99, Editable -> False], 
        BaseForm[#, 2]& ],"\"c\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1100100\"", "\"2\""], 100, Editable -> False], 
        BaseForm[#, 2]& ],"\"d\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1100101\"", "\"2\""], 101, Editable -> False], 
        BaseForm[#, 2]& ],"\"e\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1100110\"", "\"2\""], 102, Editable -> False], 
        BaseForm[#, 2]& ],"\"f\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1100111\"", "\"2\""], 103, Editable -> False], 
        BaseForm[#, 2]& ],"\"g\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1101000\"", "\"2\""], 104, Editable -> False], 
        BaseForm[#, 2]& ],"\"h\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1101001\"", "\"2\""], 105, Editable -> False], 
        BaseForm[#, 2]& ],"\"i\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1101010\"", "\"2\""], 106, Editable -> False], 
        BaseForm[#, 2]& ],"\"j\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1101011\"", "\"2\""], 107, Editable -> False], 
        BaseForm[#, 2]& ],"\"k\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )]},
    {
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1101100\"", "\"2\""], 108, Editable -> False], 
        BaseForm[#, 2]& ],"\"l\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1101101\"", "\"2\""], 109, Editable -> False], 
        BaseForm[#, 2]& ],"\"m\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1101110\"", "\"2\""], 110, Editable -> False], 
        BaseForm[#, 2]& ],"\"n\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1101111\"", "\"2\""], 111, Editable -> False], 
        BaseForm[#, 2]& ],"\"o\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1110000\"", "\"2\""], 112, Editable -> False], 
        BaseForm[#, 2]& ],"\"p\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1110001\"", "\"2\""], 113, Editable -> False], 
        BaseForm[#, 2]& ],"\"q\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1110010\"", "\"2\""], 114, Editable -> False], 
        BaseForm[#, 2]& ],"\"r\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1110011\"", "\"2\""], 115, Editable -> False], 
        BaseForm[#, 2]& ],"\"s\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1110100\"", "\"2\""], 116, Editable -> False], 
        BaseForm[#, 2]& ],"\"t\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1110101\"", "\"2\""], 117, Editable -> False], 
        BaseForm[#, 2]& ],"\"u\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1110110\"", "\"2\""], 118, Editable -> False], 
        BaseForm[#, 2]& ],"\"v\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1110111\"", "\"2\""], 119, Editable -> False], 
        BaseForm[#, 2]& ],"\"w\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )]},
    {
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1111000\"", "\"2\""], 120, Editable -> False], 
        BaseForm[#, 2]& ],"\"x\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1111001\"", "\"2\""], 121, Editable -> False], 
        BaseForm[#, 2]& ],"\"y\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1111010\"", "\"2\""], 122, Editable -> False], 
        BaseForm[#, 2]& ],"\"z\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1111011\"", "\"2\""], 123, Editable -> False], 
        BaseForm[#, 2]& ],"\"{\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1111100\"", "\"2\""], 124, Editable -> False], 
        BaseForm[#, 2]& ],"\"|\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1111101\"", "\"2\""], 125, Editable -> False], 
        BaseForm[#, 2]& ],"\"}\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1111110\"", "\"2\""], 126, Editable -> False], 
        BaseForm[#, 2]& ],"\"~\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], 
     TemplateBox[{TagBox[
        InterpretationBox[
         SubscriptBox["\"1111111\"", "\"2\""], 127, Editable -> False], 
        BaseForm[#, 2]& ],"\"\.7f\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, BaseStyle -> RGBColor[
             Rational[212, 255], 0, 
             Rational[4, 51]], DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> 
                 RGBColor[0.5542483660130719, 0., 0.05228758169934641], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{
                    FractionBox["212", "255"], ",", "0", ",", 
                    FractionBox["4", "51"]}], "]"}], NumberMarks -> False]], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[212, 255], 0, 
                    Rational[4, 51]]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[
               Rational[212, 255], 0, 
               Rational[4, 51]], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.770795937410939*^9, 3.770795978783432*^9, 3.7707990644024076`*^9, {
   3.770807652931024*^9, 3.770807658715356*^9}, 3.7708078938626947`*^9, 
   3.770924278800631*^9, {3.770924966730405*^9, 3.770924975453742*^9}, 
   3.77092501187379*^9, 3.7709272295934143`*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"c0c19eaf-a85b-4fa3-b968-563d61266909"]
}, Open  ]],

Cell[TextData[{
 "Redundant code space can be reduced, for example by ",
 Cell[BoxData[
  TemplateBox[{
   "\"entropic compression\"",
    "https://en.wikipedia.org/wiki/Entropy_encoding"},
   "HyperlinkURL"]], "Output",ExpressionUUID->
  "4485c8cc-4fc6-47a1-887d-fcf38565e0c1"],
 ". To do this we can use ",
 Cell[BoxData[
  TagBox[
   TooltipBox[
    StyleBox["\<\"Huffman code\"\>",
     StripOnInput->False,
     LineColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FrontFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     BackFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     GraphicsColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]]],
    "\"a particular type of optimal prefix code that is commonly used for \
lossless data compression\"",
    TooltipStyle->"TextStyling"],
   Annotation[#, 
    "a particular type of optimal prefix code that is commonly used for \
lossless data compression", "Tooltip"]& ]], "Output",ExpressionUUID->
  "5f38dd70-7a37-4e85-8eb7-b21e5b73668f"],
 ". For instance, we can encode the string \[OpenCurlyDoubleQuote]wolfram \
mathematica\[CloseCurlyDoubleQuote] as follows. The binary length of the \
encoded string is shown below."
}], "Text",
 CellChangeTimes->{{3.7708018369911346`*^9, 3.770801855258369*^9}, {
   3.77080190082677*^9, 3.770801905621358*^9}, {3.770802354741425*^9, 
   3.77080235748074*^9}, {3.770802393136273*^9, 3.770802393486315*^9}, 
   3.7708037493371468`*^9, {3.770803874352715*^9, 3.770803904530764*^9}, 
   3.77080417577551*^9, {3.770805238081552*^9, 3.770805238787919*^9}, 
   3.770807227240522*^9, {3.770924558899189*^9, 3.770924590508078*^9}},
 TextJustification->1,ExpressionUUID->"0feaa6fb-8ff5-48da-a852-87555cae251d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sizeCompressed", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ResourceFunction", "[", "\"\<HuffmanEncode\>\"", "]"}], "[", 
     "\"\<wolfram mathematica\>\"", "]"}], "[", "\"\<Encoding\>\"", "]"}], "//",
    "Length"}]}]], "Code",
 CellLabel->"In[37]:=",ExpressionUUID->"b897036e-a97a-45bb-9c73-b0d3aac20a54"],

Cell[BoxData["67"], "Output",
 CellChangeTimes->{
  3.7708018975200987`*^9, {3.770807653737052*^9, 3.770807658798195*^9}, 
   3.770807894622115*^9, 3.770924279696225*^9, 3.7709272296959543`*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"0d43e8ec-42e2-424f-ac6a-f012b2d9eca7"]
}, Open  ]],

Cell["If we use 7-bit ASCII code,", "Text",
 CellChangeTimes->{{3.770801916308477*^9, 3.770801925550997*^9}, {
  3.770801992306589*^9, 3.770802001580515*^9}, {3.770802400844516*^9, 
  3.7708024303174267`*^9}, {3.7708038710909853`*^9, 
  3.770803872625018*^9}},ExpressionUUID->"6e7b950c-25b2-43b6-8864-\
5194b53201d9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sizeOneSymbolASCII", "=", "7"}], ";"}]], "Code",
 CellChangeTimes->{3.770801961330312*^9},
 CellLabel->"In[38]:=",ExpressionUUID->"ef6069e4-081a-4f25-94c7-a50e9bd65708"],

Cell["we will get the following length of the string.", "Text",
 CellChangeTimes->{{3.770802431792313*^9, 
  3.770802458173438*^9}},ExpressionUUID->"122efbc3-3e25-4ecb-87f0-\
79b7aea04341"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sizeOriginal", "=", 
  RowBox[{"sizeOneSymbolASCII", " ", 
   RowBox[{
   "StringLength", "[", "\"\<wolfram mathematica\>\"", "]"}]}]}]], "Code",
 CellLabel->"In[39]:=",ExpressionUUID->"0ced31f2-b05a-467e-a181-4617dc26abca"],

Cell[BoxData["133"], "Output",
 CellChangeTimes->{
  3.7708019745068417`*^9, {3.770807653862226*^9, 3.7708076588496428`*^9}, 
   3.770807894727553*^9, 3.7709242798031397`*^9, 3.770927229755666*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"88239006-c24f-4e5d-b869-ed2dea8bf2c9"]
}, Open  ]],

Cell["\<\
The ration of the sizes reveals the redundancy of the ASCII code.\
\>", "Text",
 CellChangeTimes->{{3.7708025282560253`*^9, 
  3.770802529416382*^9}},ExpressionUUID->"23b28bc0-f6af-463d-aef9-\
35ba86113b70"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"sizeOriginal", "/", "sizeCompressed"}], "//", "N"}]], "Code",
 CellLabel->"In[40]:=",ExpressionUUID->"3c16a7a8-981f-42dd-be23-5083aa091fde"],

Cell[BoxData["1.9850746268656716`"], "Output",
 CellChangeTimes->{
  3.77080209916928*^9, {3.770807653940482*^9, 3.770807658900872*^9}, 
   3.7708078947796373`*^9, 3.770924279857174*^9, 3.770927229794291*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"831b23ce-cc83-436d-99ee-8537da4aea69"]
}, Open  ]],

Cell["\<\
The idea behind the code is simple. The more often symbol in the text is the \
shorter code is used for it. In average, this representation requires less \
data to send the same amount of information. However, these methods \
fundamentally do not solve the problem of extra data due to format.\
\>", "Text",
 CellChangeTimes->{{3.770801909809845*^9, 3.770801919419147*^9}, {
  3.7708023349599943`*^9, 3.770802344914744*^9}, {3.770805319778762*^9, 
  3.7708053308914757`*^9}, {3.770805363577909*^9, 3.770805364453265*^9}},
 TextJustification->1,ExpressionUUID->"f8fd9929-9b4f-4def-9fba-98a2deafc9bd"],

Cell["\<\
Thus, non-ideally numeration system, format redundancy and influence of noise \
cause the reduction of data rate.\
\>", "Text",
 CellChangeTimes->{{3.770802322709977*^9, 3.77080233047153*^9}, {
  3.7708054024923162`*^9, 3.770805422702497*^9}, {3.770807261941243*^9, 
  3.770807272675746*^9}},
 TextJustification->1,ExpressionUUID->"632d0dc2-6e44-43c7-9939-091c0b9239f4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Conclusions", "Section",
 CellChangeTimes->{{3.770796012945311*^9, 
  3.770796025134387*^9}},ExpressionUUID->"dbb21a98-1322-4c81-9b8a-\
a9bed5fb22e7"],

Cell[TextData[{
 "We considered in the essay the influence of some fundamental constraints on \
information transmission through the single data channel. Obviously, the \
Internet is a network, where every segment of the net is linked to each other \
with ",
 Cell[BoxData[
  TagBox[
   TooltipBox[
    StyleBox["\<\"commutators\"\>",
     StripOnInput->False,
     LineColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FrontFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     BackFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     GraphicsColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]]],
    "\"switch for reversing the direction of an electric current\"",
    TooltipStyle->"TextStyling"],
   Annotation[#, "switch for reversing the direction of an electric current", 
    "Tooltip"]& ]], "Output",ExpressionUUID->
  "d6a9414d-16bc-4808-ad2c-74e629e342e1"],
 ". Also, there are services that work in the network like ",
 Cell[BoxData[
  TagBox[
   TooltipBox[
    StyleBox["\<\"IP\"\>",
     StripOnInput->False,
     LineColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FrontFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     BackFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     GraphicsColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]]],
    "\"the principal communications protocol in the Internet protocol suite \
for relaying datagrams across network boundaries\"",
    TooltipStyle->"TextStyling"],
   Annotation[#, 
    "the principal communications protocol in the Internet protocol suite for \
relaying datagrams across network boundaries", "Tooltip"]& ]], "Output",
  ExpressionUUID->"4df691df-6cbf-49ca-9ed9-36ed15ccb352"],
 " protocol with ",
 Cell[BoxData[
  TagBox[
   TooltipBox[
    StyleBox["\<\"TCP\"\>",
     StripOnInput->False,
     LineColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FrontFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     BackFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     GraphicsColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]]],
    "\"a protocol developed for the internet to get data from one network \
device to another\"",
    TooltipStyle->"TextStyling"],
   Annotation[#, 
    "a protocol developed for the internet to get data from one network \
device to another", "Tooltip"]& ]], "Output",ExpressionUUID->
  "29a685d5-70c1-4c14-8f94-625549d6c409"],
 " over it which are used by ",
 Cell[BoxData[
  TagBox[
   TooltipBox[
    StyleBox["\<\"HTTP\"\>",
     StripOnInput->False,
     LineColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FrontFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     BackFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     GraphicsColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]]],
    "\"a protocol (utilizing TCP) to transfer hypertext requests and \
information between servers and browsers\"",
    TooltipStyle->"TextStyling"],
   Annotation[#, 
    "a protocol (utilizing TCP) to transfer hypertext requests and \
information between servers and browsers", "Tooltip"]& ]], "Output",
  ExpressionUUID->"b00ac328-5173-40ed-ada1-6c39790f141a"],
 " on the application layer",
 ButtonBox[Cell[TextData[StyleBox[ButtonBox["6"],
  FontVariations->{"CompatibilityType"->"Superscript"}]], "Citation",
  Editable->False,
  TaggingRules->{NoteData -> RowBox[{"Olifer", ",", " ", 
       RowBox[{
         RowBox[{
           RowBox[{"N", "."}], " ", "&"}], " ", "Olifer"}], ",", " ", 
       RowBox[{
         RowBox[{"V", ".", " ", "Computer"}], " ", 
         RowBox[{"Networks", ":", " ", "Principles"}]}], ",", " ", 
       RowBox[{
        "Technologies", " ", "and", " ", "Protocols", " ", "for", " ", 
         "Network", " ", 
         RowBox[{"Design", ".", " ", 
           RowBox[{"(", 
             RowBox[{"Wiley", ",", " ", "2005"}], ")"}], ".", "\n"}]}]}]},
  ExpressionUUID->"e6375760-f584-47f1-845a-8326e88aaab9"],
  BaseStyle->"Hyperlink",
  ButtonData->"00006CC5"],
 ". In addition, there are protocols for resolving addresses like ",
 Cell[BoxData[
  TagBox[
   TooltipBox[
    StyleBox["\<\"DNS\"\>",
     StripOnInput->False,
     LineColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FrontFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     BackFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     GraphicsColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]]],
    "\"a hierarchical and decentralized naming system for computers, \
services, or other resources connected to the Internet or a private network\"",
    TooltipStyle->"TextStyling"],
   Annotation[#, 
    "a hierarchical and decentralized naming system for computers, services, \
or other resources connected to the Internet or a private network", 
    "Tooltip"]& ]], "Output",ExpressionUUID->
  "dec30f2f-ab27-4c9c-a4d3-f9d02c131ac0"],
 " and ",
 Cell[BoxData[
  TagBox[
   TooltipBox[
    StyleBox["\<\"ARP\"\>",
     StripOnInput->False,
     LineColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FrontFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     BackFaceColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     GraphicsColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]],
     FontVariations->{"Underline"->True},
     FontColor->RGBColor[
       Rational[212, 255], 0, 
       Rational[4, 51]]],
    "\"a protocol for mapping an Internet Protocol address (IP address) to a \
physical machine address that is recognized in the local network\"",
    TooltipStyle->"TextStyling"],
   Annotation[#, 
    "a protocol for mapping an Internet Protocol address (IP address) to a \
physical machine address that is recognized in the local network", 
    "Tooltip"]& ]], "Output",ExpressionUUID->
  "cfcfa7ce-909b-462e-a98d-7e6b7fffb450"],
 ". Some of them we can see if we launch the process of getting the first \
byte from the site with details."
}], "Text",
 CellChangeTimes->{{3.7708026470518637`*^9, 3.770802648113059*^9}, 
   3.7708027916888847`*^9, {3.770802945196076*^9, 3.770802949225588*^9}, 
   3.7708030120345078`*^9, {3.7708030562196217`*^9, 3.770803064269309*^9}, 
   3.770803787932427*^9, {3.7708038439928427`*^9, 3.770803849360989*^9}, {
   3.7708055528180428`*^9, 3.7708055571906023`*^9}, {3.7708073140298147`*^9, 
   3.770807315115122*^9}, {3.770809998951227*^9, 3.7708099990024357`*^9}, {
   3.7709262050873947`*^9, 3.770926207053939*^9}},
 TextJustification->1,ExpressionUUID->"90554dab-adff-46c3-be2b-8d649b1e5b24"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"URLResponseTime", "[", 
   RowBox[{"\"\<https://wolfram.com\>\"", ",", "All"}], "]"}], "//", 
  "Dataset"}]], "Code",
 CellLabel->"In[41]:=",ExpressionUUID->"c0f0ef67-0d3d-4dbf-bd6a-5d6ea1a24efe"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 7, "InitialType" -> 
        TypeSystem`Struct[{
          "NameLookup", "HostConnection", "SSLHandshake", "PreTransfer", 
           "TransferInitiation", "TransactionTotal", "HTTPRedirect"}, {
           TypeSystem`Atom[
            Quantity[1, "Seconds"]], 
           TypeSystem`Atom[
            Quantity[1, "Seconds"]], 
           TypeSystem`Atom[
            Quantity[1, "Seconds"]], 
           TypeSystem`Atom[
            Quantity[1, "Seconds"]], 
           TypeSystem`Atom[
            Quantity[1, "Seconds"]], 
           TypeSystem`Atom[
            Quantity[1, "Seconds"]], TypeSystem`AnyType}], "Shape" -> 
        TypeSystem`PackageScope`DocumentShape[
          
          Association[{"NameLookup"} -> 
           TypeSystem`PackageScope`AtomShape[75], {"HostConnection"} -> 
           TypeSystem`PackageScope`AtomShape[75], {"SSLHandshake"} -> 
           TypeSystem`PackageScope`AtomShape[75], {"PreTransfer"} -> 
           TypeSystem`PackageScope`AtomShape[75], {"TransferInitiation"} -> 
           TypeSystem`PackageScope`AtomShape[75], {"TransactionTotal"} -> 
           TypeSystem`PackageScope`AtomShape[75], {"HTTPRedirect"} -> 
           TypeSystem`PackageScope`UnknownShape], 1], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[2088935654], "Type" -> 
        TypeSystem`Struct[{
          "NameLookup", "HostConnection", "SSLHandshake", "PreTransfer", 
           "TransferInitiation", "TransactionTotal", "HTTPRedirect"}, {
           TypeSystem`Atom[
            Quantity[1, "Seconds"]], 
           TypeSystem`Atom[
            Quantity[1, "Seconds"]], 
           TypeSystem`Atom[
            Quantity[1, "Seconds"]], 
           TypeSystem`Atom[
            Quantity[1, "Seconds"]], 
           TypeSystem`Atom[
            Quantity[1, "Seconds"]], 
           TypeSystem`Atom[
            Quantity[1, "Seconds"]], TypeSystem`AnyType}], "HandleQ" -> True, 
        "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[2088935654]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"NameLookup\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"NameLookup\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1197430350][{
                    Key["NameLookup"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1197430350][
                  GeneralUtilities`Slice[
                   Key["NameLookup"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"0.004964`", "\"s\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1197430350][
                  GeneralUtilities`Slice[
                   Key["NameLookup"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"HostConnection\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"HostConnection\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1197430350][{
                    Key["HostConnection"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1197430350][
                  GeneralUtilities`Slice[
                   Key["HostConnection"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"0.03625`", "\"s\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1197430350][
                  GeneralUtilities`Slice[
                   Key["HostConnection"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SSLHandshake\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SSLHandshake\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1197430350][{
                    Key["SSLHandshake"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1197430350][
                  GeneralUtilities`Slice[
                   Key["SSLHandshake"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"0.066884`", "\"s\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1197430350][
                  GeneralUtilities`Slice[
                   Key["SSLHandshake"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"PreTransfer\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"PreTransfer\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1197430350][{
                    Key["PreTransfer"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1197430350][
                  GeneralUtilities`Slice[
                   Key["PreTransfer"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"0.066915`", "\"s\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1197430350][
                  GeneralUtilities`Slice[
                   Key["PreTransfer"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TransferInitiation\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TransferInitiation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1197430350][{
                    Key["TransferInitiation"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1197430350][
                  GeneralUtilities`Slice[
                   Key["TransferInitiation"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"0.125128`", "\"s\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1197430350][
                  GeneralUtilities`Slice[
                   Key["TransferInitiation"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TransactionTotal\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TransactionTotal\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1197430350][{
                    Key["TransactionTotal"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1197430350][
                  GeneralUtilities`Slice[
                   Key["TransactionTotal"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"0.352465`", "\"s\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1197430350][
                  GeneralUtilities`Slice[
                   Key["TransactionTotal"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"HTTPRedirect\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"HTTPRedirect\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1197430350][{
                    Key["HTTPRedirect"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1197430350][
                  GeneralUtilities`Slice[
                   Key["HTTPRedirect"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "Missing", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1197430350][
                  GeneralUtilities`Slice[
                   Key["HTTPRedirect"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1197430350][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1197430350]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1197430350][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1197430350][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {199., {92.634033203125, 98.365966796875}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{
  3.770796029683929*^9, 3.770799064883524*^9, {3.77080765446909*^9, 
   3.77080765938842*^9}, 3.770807895231745*^9, 3.770924280430522*^9, 
   3.7709272301809807`*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"87935326-5035-4d74-925d-d509224775b3"]
}, Open  ]],

Cell["\<\
All these services take much more time than the effects considered here. In \
any case, even if we managed to get the time needed for those services to \
minimum,  we would still have to deal with all the theoretical limits \
discussed above.\
\>", "Text",
 CellChangeTimes->{{3.7708026828541822`*^9, 3.770802684219853*^9}, {
  3.770807364374596*^9, 3.770807371060615*^9}, {3.770926303135765*^9, 
  3.7709263406086187`*^9}, {3.7709265369210043`*^9, 3.770926561354808*^9}, {
  3.7709266076401*^9, 3.770926642639977*^9}, {3.770926746593061*^9, 
  3.770926857276784*^9}, {3.770926911741138*^9, 
  3.770927006251096*^9}},ExpressionUUID->"2eee2c9e-6f4c-4c50-8b61-\
6437316aa8ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell["References", "Section",
 CellChangeTimes->{{3.770796012945311*^9, 3.770796025134387*^9}, {
  3.770808181532246*^9, 
  3.770808185241961*^9}},ExpressionUUID->"398f94c3-0ba4-4177-9a66-\
a11abf344edf"],

Cell[TextData[{
 "\t",
 StyleBox["1",
  FontVariations->{"CompatibilityType"->"Superscript"}],
 "\t",
 "Landau",
 ",",
 " ",
 "L",
 ".",
 " ",
 "D",
 ".",
 " ",
 "&",
 " ",
 "Lifshitz",
 ",",
 " ",
 "E",
 ".",
 " ",
 "M",
 ".",
 " ",
 "The",
 " ",
 "Classical",
 " ",
 "Theory",
 " ",
 "of",
 " ",
 "Fields",
 ":",
 " ",
 "Volume",
 " ",
 "2.",
 " ",
 "(",
 "Butterworth",
 "-",
 "Heinemann",
 ",",
 " ",
 "1980",
 ")",
 ".",
 "\n"
}], "Reference",
 Editable->False,
 TaggingRules->{ReferenceNoteData -> ""},
 CellTags->"00006BC4",ExpressionUUID->"ac1ecb3c-fa7b-4d08-bdb8-39a29a0f31b5"],

Cell[TextData[{
 "\t",
 StyleBox["2",
  FontVariations->{"CompatibilityType"->"Superscript"}],
 "\t",
 "Peres",
 ",",
 " ",
 "A",
 ".",
 " ",
 "&",
 " ",
 "Terno",
 ",",
 " ",
 "D",
 ".",
 " ",
 "R",
 ".",
 " ",
 "Quantum",
 " ",
 "information",
 " ",
 "and",
 " ",
 "relativity",
 " ",
 "theory",
 ".",
 " ",
 "Rev",
 ".",
 " ",
 "Mod",
 ".",
 " ",
 "Phys",
 ".",
 " ",
 "76",
 ",",
 " ",
 "93",
 "\[Dash]",
 "123",
 " ",
 "(",
 "2004",
 ")",
 ".",
 "\n"
}], "Reference",
 Editable->False,
 TaggingRules->{ReferenceNoteData -> ""},
 CellTags->"00006667",ExpressionUUID->"edbe0b01-f4a8-4909-a7ce-65a8e9377311"],

Cell[TextData[{
 "\t",
 StyleBox["3",
  FontVariations->{"CompatibilityType"->"Superscript"}],
 "\t",
 "Hayes",
 ",",
 " ",
 "B",
 ".",
 " ",
 "Third",
 " ",
 "Base",
 ".",
 " ",
 "Am",
 " ",
 "Sci",
 " ",
 "89",
 ",",
 " ",
 "488",
 "\[Dash]",
 "492",
 " ",
 "(",
 "2001",
 ")",
 ".",
 "\n"
}], "Reference",
 Editable->False,
 TaggingRules->{ReferenceNoteData -> ""},
 CellTags->"00003AE2",ExpressionUUID->"b6cda6d1-a5c0-4897-9682-1075e1fc969e"],

Cell[TextData[{
 "\t",
 StyleBox["4",
  FontVariations->{"CompatibilityType"->"Superscript"}],
 "\t",
 "Shannon",
 ",",
 " ",
 "C",
 ".",
 " ",
 "E",
 ".",
 " ",
 "Communication",
 " ",
 "in",
 " ",
 "the",
 " ",
 "Presence",
 " ",
 "of",
 " ",
 "Noise",
 ".",
 " ",
 "Proc",
 ".",
 " ",
 "IRE",
 " ",
 "37",
 ",",
 " ",
 "10",
 "\[Dash]",
 "21",
 " ",
 "(",
 "1949",
 ")",
 ".",
 "\n"
}], "Reference",
 Editable->False,
 TaggingRules->{ReferenceNoteData -> ""},
 CellTags->"00004DF4",ExpressionUUID->"6d7cf290-7a0f-42cc-866a-802ec86dceaa"],

Cell[TextData[{
 "\t",
 StyleBox["5",
  FontVariations->{"CompatibilityType"->"Superscript"}],
 "\t",
 "ASA",
 " ",
 "standard",
 " ",
 "X3",
 ".4",
 ".",
 " ",
 "(",
 "1963",
 ")",
 "."
}], "Reference",
 Editable->False,
 TaggingRules->{ReferenceNoteData -> ""},
 CellTags->"0000199A",ExpressionUUID->"240be5eb-ba60-46da-9e21-f077b7ed7bc1"],

Cell[TextData[{
 "\t",
 StyleBox["6",
  FontVariations->{"CompatibilityType"->"Superscript"}],
 "\t",
 "Olifer",
 ",",
 " ",
 "N",
 ".",
 " ",
 "&",
 " ",
 "Olifer",
 ",",
 " ",
 "V",
 ".",
 " ",
 "Computer",
 " ",
 "Networks",
 ":",
 " ",
 "Principles",
 ",",
 " ",
 "Technologies",
 " ",
 "and",
 " ",
 "Protocols",
 " ",
 "for",
 " ",
 "Network",
 " ",
 "Design",
 ".",
 " ",
 "(",
 "Wiley",
 ",",
 " ",
 "2005",
 ")",
 ".",
 "\n"
}], "Reference",
 Editable->False,
 TaggingRules->{ReferenceNoteData -> ""},
 CellTags->"00006CC5",ExpressionUUID->"c4718256-7702-4b3e-950c-2224df8ec1d5"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 614},
WindowMargins->{{57, Automatic}, {Automatic, 57}},
DockedCells->{
  Cell[
   TextData[{
     StyleBox["  WOLFRAM ", 
      RGBColor[0.97, 0.83, 0.35], FontFamily -> "Source Sans Pro", FontWeight -> 
      Bold, FontSize -> 40], 
     StyleBox["SUMMER SCHOOL", 
      GrayLevel[1], FontFamily -> "Source Sans Pro", FontSize -> 40], 
     StyleBox[" 2019", 
      RGBColor[0.97, 0.83, 0.35], FontFamily -> "Source Sans Pro", FontSize -> 
      40]}], CellFrameMargins -> 10, Background -> 
   RGBColor[0.12, 0.14, 0.15]]},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 11, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Title"->{
  Cell[580, 22, 321, 4, 98, "Title",ExpressionUUID->"49ab34ee-bfd5-49f5-beef-400d3cc456dd",
   CellTags->"Title"]},
 "00006BC4"->{
  Cell[900298, 17978, 586, 53, 38, "Reference",ExpressionUUID->"ac1ecb3c-fa7b-4d08-bdb8-39a29a0f31b5",
   CellTags->"00006BC4"]},
 "00006667"->{
  Cell[900887, 18033, 610, 57, 38, "Reference",ExpressionUUID->"edbe0b01-f4a8-4909-a7ce-65a8e9377311",
   CellTags->"00006667"]},
 "00003AE2"->{
  Cell[901500, 18092, 446, 35, 38, "Reference",ExpressionUUID->"b6cda6d1-a5c0-4897-9682-1075e1fc969e",
   CellTags->"00003AE2"]},
 "00004DF4"->{
  Cell[901949, 18129, 540, 47, 38, "Reference",ExpressionUUID->"6d7cf290-7a0f-42cc-866a-802ec86dceaa",
   CellTags->"00004DF4"]},
 "0000199A"->{
  Cell[902492, 18178, 341, 20, 26, "Reference",ExpressionUUID->"240be5eb-ba60-46da-9e21-f077b7ed7bc1",
   CellTags->"0000199A"]},
 "00006CC5"->{
  Cell[902836, 18200, 588, 51, 38, "Reference",ExpressionUUID->"c4718256-7702-4b3e-950c-2224df8ec1d5",
   CellTags->"00006CC5"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Title", 904207, 18277},
 {"00006BC4", 904338, 18280},
 {"00006667", 904483, 18283},
 {"00003AE2", 904628, 18286},
 {"00004DF4", 904773, 18289},
 {"0000199A", 904918, 18292},
 {"00006CC5", 905063, 18295}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 321, 4, 98, "Title",ExpressionUUID->"49ab34ee-bfd5-49f5-beef-400d3cc456dd",
 CellTags->"Title"],
Cell[904, 28, 389, 6, 35, "Text",ExpressionUUID->"94536f76-3fd2-4bf6-b228-fa93ec9acae9"],
Cell[1296, 36, 1437, 40, 83, "Text",ExpressionUUID->"31eb190b-bc49-4bc8-ac91-ed0ce768b67f"],
Cell[CellGroupData[{
Cell[2758, 80, 150, 3, 67, "Section",ExpressionUUID->"bfbf826d-a4b6-4048-b049-bf1e13aa9226"],
Cell[2911, 85, 2468, 70, 58, "Text",ExpressionUUID->"f36b7fa9-e28c-47f3-b178-2f5663a40abd"],
Cell[CellGroupData[{
Cell[5404, 159, 174, 3, 52, "Code",ExpressionUUID->"27e63ca3-0f43-4b6e-ad65-27e680b95105"],
Cell[5581, 164, 385, 6, 36, "Output",ExpressionUUID->"fc5d0030-5639-4aeb-bc0a-8832912ba119"]
}, Open  ]],
Cell[5981, 173, 1389, 36, 35, "Text",ExpressionUUID->"351655be-9f18-45c1-a7ee-7bf2320ef285"],
Cell[CellGroupData[{
Cell[7395, 213, 20533, 380, 60, "Code",ExpressionUUID->"c94c8433-49a9-4a6e-abc0-8e30d27c5ccb"],
Cell[27931, 595, 268122, 4431, 267, "Output",ExpressionUUID->"a762a46f-34e2-47b3-a029-e49fc53a3868"]
}, Open  ]],
Cell[296068, 5029, 274, 5, 35, "Text",ExpressionUUID->"cc431526-a01b-448d-bb0f-96aea841d069"],
Cell[CellGroupData[{
Cell[296367, 5038, 3028, 74, 60, "Code",ExpressionUUID->"db86aa9d-a11f-4492-967d-634530cf1ccf"],
Cell[299398, 5114, 3107, 83, 240, "Output",ExpressionUUID->"09c01dc5-8b68-4f39-8f6d-2aa8da79c59c"]
}, Open  ]],
Cell[302520, 5200, 393, 8, 35, "Text",ExpressionUUID->"2395d1fc-be38-4fa9-b18d-a809672e73a0"],
Cell[302916, 5210, 368, 6, 58, "Text",ExpressionUUID->"73d0f245-e6cf-46a8-b55e-454e2614086b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[303321, 5221, 148, 3, 67, "Section",ExpressionUUID->"328af089-abbf-49d7-9b72-cec4f32c9009"],
Cell[303472, 5226, 3791, 94, 91, "Text",ExpressionUUID->"2ddd215a-fca7-445d-be02-0c1aa9064912"],
Cell[CellGroupData[{
Cell[307288, 5324, 580, 11, 61, "Code",ExpressionUUID->"51a100ed-a3dd-46ca-9ac3-7961e266e4d4"],
Cell[307871, 5337, 514, 9, 36, "Output",ExpressionUUID->"d03a3c05-b10c-47a9-85f3-128bd34bcff4"]
}, Open  ]],
Cell[308400, 5349, 2132, 65, 36, "Text",ExpressionUUID->"7a6bfb2f-252f-4d4d-b3a1-41ba0314b4c3"],
Cell[310535, 5416, 148, 3, 40, "DisplayFormulaNumbered",ExpressionUUID->"b737c0c4-d10c-4198-b389-9b8ed00da42a"],
Cell[310686, 5421, 6441, 163, 114, "Text",ExpressionUUID->"f2a07cb2-4e5e-4134-887e-7644c9925d2d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[317164, 5589, 163, 3, 67, "Section",ExpressionUUID->"a0723505-63ab-4c9a-bdad-8b1093b48c81"],
Cell[317330, 5594, 287, 5, 35, "Text",ExpressionUUID->"65027991-9b45-49b5-8ee5-2ff02e2187f7"],
Cell[CellGroupData[{
Cell[317642, 5603, 165, 3, 54, "Subsection",ExpressionUUID->"2ba4cb26-b857-4657-8a4d-e37561bb1ea3"],
Cell[317810, 5608, 4030, 102, 69, "Text",ExpressionUUID->"b1df91c5-c27b-4c30-8398-e604c6161ca0"],
Cell[321843, 5712, 227, 6, 28, "DisplayFormulaNumbered",ExpressionUUID->"e92f68ba-713d-4251-9efb-ab3ab35e6b72"],
Cell[322073, 5720, 257, 5, 35, "Text",ExpressionUUID->"04a3559f-db17-46c4-ae7d-732da25be439"],
Cell[CellGroupData[{
Cell[322355, 5729, 2062, 57, 60, "Code",ExpressionUUID->"8df773b1-e1ed-4ff3-a09e-4dd6c6a3d49f"],
Cell[324420, 5788, 37195, 691, 398, "Output",ExpressionUUID->"29dc021d-d1a7-4a73-8276-62b1b04fb6a6"]
}, Open  ]],
Cell[361630, 6482, 271, 3, 35, "Text",ExpressionUUID->"3d6f0edb-bc9b-4df3-81af-a0524bec5230"],
Cell[CellGroupData[{
Cell[361926, 6489, 514, 16, 73, "Code",ExpressionUUID->"dde092bd-3a89-443b-8eef-86a2772c0fbe"],
Cell[362443, 6507, 381, 8, 34, "Output",ExpressionUUID->"019acfc1-af68-4fa6-a41c-03296dac9bdb"]
}, Open  ]],
Cell[362839, 6518, 298, 7, 35, "Text",ExpressionUUID->"4effee43-771a-4e06-bbca-bb2eea59f94c"],
Cell[CellGroupData[{
Cell[363162, 6529, 3469, 86, 60, "Code",ExpressionUUID->"dd61ecff-865c-4e1e-a8f5-25be52c22dd1"],
Cell[366634, 6617, 34159, 644, 404, "Output",ExpressionUUID->"e7718191-d52f-48cd-a278-2a2a0a14ea4a"]
}, Open  ]],
Cell[400808, 7264, 489, 8, 58, "Text",ExpressionUUID->"484622f1-9f23-4db9-b2da-af3fc0f3ee4e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[401334, 7277, 215, 4, 54, "Subsection",ExpressionUUID->"e428d436-58a2-4623-86e4-e0d56d212c6b"],
Cell[401552, 7283, 2640, 64, 68, "Text",ExpressionUUID->"e48fb22c-4dd3-402f-8258-fd5b0a279f63"],
Cell[404195, 7349, 3351, 85, 153, "Text",ExpressionUUID->"8d474b2f-7ff0-447a-a46f-4246605aa8fe"],
Cell[CellGroupData[{
Cell[407571, 7438, 2192, 56, 110, "Code",ExpressionUUID->"a4d338a7-171d-4357-a0e2-dcd30fd2bf4d"],
Cell[409766, 7496, 3278, 63, 465, "Output",ExpressionUUID->"a3f2d332-ebca-4e3c-aa7b-7d9078f49a48"]
}, Open  ]],
Cell[413059, 7562, 1576, 42, 35, "Text",ExpressionUUID->"50df52e5-3a44-4db9-bb94-f1351d4c1c28"],
Cell[414638, 7606, 287, 9, 42, "DisplayFormulaNumbered",ExpressionUUID->"483611e0-27ac-4f5d-a721-1b8031811fc1"],
Cell[414928, 7617, 1227, 37, 36, "Text",ExpressionUUID->"07c49cbf-713d-4c38-b4e3-3f6b5d0997b0"],
Cell[416158, 7656, 321, 6, 35, "Text",ExpressionUUID->"f7ffec0f-2ca1-480f-a405-db200290568f"],
Cell[CellGroupData[{
Cell[416504, 7666, 2080, 50, 68, "Code",ExpressionUUID->"657917a1-590c-4cac-a10d-58e374ba4561"],
Cell[418587, 7718, 2237, 42, 495, "Output",ExpressionUUID->"3a112706-e95f-4947-b879-9deda7fdb01f"]
}, Open  ]],
Cell[420839, 7763, 526, 9, 58, "Text",ExpressionUUID->"8d72be7f-1246-4b65-8099-1a96fa193d17"]
}, Open  ]],
Cell[CellGroupData[{
Cell[421402, 7777, 157, 3, 54, "Subsection",ExpressionUUID->"2485fe6f-36e3-4288-855b-199e0b4e4f0a"],
Cell[421562, 7782, 486, 8, 35, "Text",ExpressionUUID->"02b05897-c13a-4a4f-815d-b71edcc96ce6"],
Cell[CellGroupData[{
Cell[422073, 7794, 327, 9, 52, "Code",ExpressionUUID->"1d6baee1-cf6d-4b4e-8ea0-c22550595369"],
Cell[422403, 7805, 343, 6, 36, "Output",ExpressionUUID->"c25fae57-93a9-417d-b2d6-f08894f8e1fa"]
}, Open  ]],
Cell[422761, 7814, 2259, 55, 45, "Text",ExpressionUUID->"5f91c55b-7b25-4029-b48b-13ea55d2a9a5"],
Cell[CellGroupData[{
Cell[425045, 7873, 3745, 94, 60, "Code",ExpressionUUID->"05bc4c03-6c99-44ce-8c51-b01b90c437fc"],
Cell[428793, 7969, 432000, 9112, 831, "Output",ExpressionUUID->"c0c19eaf-a85b-4fa3-b968-563d61266909"]
}, Open  ]],
Cell[860808, 17084, 1924, 47, 58, "Text",ExpressionUUID->"0feaa6fb-8ff5-48da-a852-87555cae251d"],
Cell[CellGroupData[{
Cell[862757, 17135, 345, 8, 52, "Code",ExpressionUUID->"b897036e-a97a-45bb-9c73-b0d3aac20a54"],
Cell[863105, 17145, 273, 4, 34, "Output",ExpressionUUID->"0d43e8ec-42e2-424f-ac6a-f012b2d9eca7"]
}, Open  ]],
Cell[863393, 17152, 317, 5, 35, "Text",ExpressionUUID->"6e7b950c-25b2-43b6-8864-5194b53201d9"],
Cell[863713, 17159, 204, 4, 52, "Code",ExpressionUUID->"ef6069e4-081a-4f25-94c7-a50e9bd65708"],
Cell[863920, 17165, 189, 3, 35, "Text",ExpressionUUID->"122efbc3-3e25-4ecb-87f0-79b7aea04341"],
Cell[CellGroupData[{
Cell[864134, 17172, 248, 5, 52, "Code",ExpressionUUID->"0ced31f2-b05a-467e-a181-4617dc26abca"],
Cell[864385, 17179, 276, 4, 34, "Output",ExpressionUUID->"88239006-c24f-4e5d-b869-ed2dea8bf2c9"]
}, Open  ]],
Cell[864676, 17186, 217, 5, 35, "Text",ExpressionUUID->"23b28bc0-f6af-463d-aef9-35ba86113b70"],
Cell[CellGroupData[{
Cell[864918, 17195, 175, 3, 52, "Code",ExpressionUUID->"3c16a7a8-981f-42dd-be23-5083aa091fde"],
Cell[865096, 17200, 287, 4, 34, "Output",ExpressionUUID->"831b23ce-cc83-436d-99ee-8537da4aea69"]
}, Open  ]],
Cell[865398, 17207, 609, 9, 58, "Text",ExpressionUUID->"f8fd9929-9b4f-4def-9fba-98a2deafc9bd"],
Cell[866010, 17218, 380, 7, 35, "Text",ExpressionUUID->"632d0dc2-6e44-43c7-9939-091c0b9239f4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[866439, 17231, 156, 3, 67, "Section",ExpressionUUID->"dbb21a98-1322-4c81-9b8a-a9bed5fb22e7"],
Cell[866598, 17236, 7583, 208, 91, "Text",ExpressionUUID->"90554dab-adff-46c3-be2b-8d649b1e5b24"],
Cell[CellGroupData[{
Cell[874206, 17448, 231, 5, 52, "Code",ExpressionUUID->"c0f0ef67-0d3d-4dbf-bd6a-5d6ea1a24efe"],
Cell[874440, 17455, 24915, 497, 211, "Output",ExpressionUUID->"87935326-5035-4d74-925d-d509224775b3"]
}, Open  ]],
Cell[899370, 17955, 684, 12, 58, "Text",ExpressionUUID->"2eee2c9e-6f4c-4c50-8b61-6437316aa8ae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[900091, 17972, 204, 4, 67, "Section",ExpressionUUID->"398f94c3-0ba4-4177-9a66-a11abf344edf"],
Cell[900298, 17978, 586, 53, 38, "Reference",ExpressionUUID->"ac1ecb3c-fa7b-4d08-bdb8-39a29a0f31b5",
 CellTags->"00006BC4"],
Cell[900887, 18033, 610, 57, 38, "Reference",ExpressionUUID->"edbe0b01-f4a8-4909-a7ce-65a8e9377311",
 CellTags->"00006667"],
Cell[901500, 18092, 446, 35, 38, "Reference",ExpressionUUID->"b6cda6d1-a5c0-4897-9682-1075e1fc969e",
 CellTags->"00003AE2"],
Cell[901949, 18129, 540, 47, 38, "Reference",ExpressionUUID->"6d7cf290-7a0f-42cc-866a-802ec86dceaa",
 CellTags->"00004DF4"],
Cell[902492, 18178, 341, 20, 26, "Reference",ExpressionUUID->"240be5eb-ba60-46da-9e21-f077b7ed7bc1",
 CellTags->"0000199A"],
Cell[902836, 18200, 588, 51, 38, "Reference",ExpressionUUID->"c4718256-7702-4b3e-950c-2224df8ec1d5",
 CellTags->"00006CC5"]
}, Open  ]]
}, Open  ]]
}
]
*)


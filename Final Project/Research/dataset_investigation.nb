(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='WolframDesktop 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       161,          7]
NotebookDataLength[    186359,       4003]
NotebookOptionsPosition[    180290,       3898]
NotebookOutlinePosition[    180633,       3913]
CellTagsIndexPosition[    180590,       3910]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Research", "Title",
 CellChangeTimes->{{3.771103159879794*^9, 
  3.771103176832177*^9}},ExpressionUUID->"04a42d79-0ec8-4808-8154-\
bc75d518fe35"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7710015671335497`*^9, 3.7710015766177273`*^9}, 
   3.7711045673358707`*^9},
 CellLabel->"In[2]:=",ExpressionUUID->"d6edf5e1-f92a-46aa-a0f4-76fb6b35233d"],

Cell[CellGroupData[{

Cell["General hashing mechanism", "Subtitle",
 CellChangeTimes->{{3.771103238716961*^9, 
  3.771103247885006*^9}},ExpressionUUID->"f306736e-8eeb-4ce3-b22d-\
26ebcf3580bb"],

Cell["Path to directory", "Text",
 CellChangeTimes->{{3.7711035282456503`*^9, 
  3.771103532447279*^9}},ExpressionUUID->"afbbac12-4923-4337-9c63-\
ae59f675888a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$cachePath", " ", "=", " ", 
   RowBox[{"With", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dir", " ", "=", " ", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"NotebookDirectory", "[", "]"}], ",", " ", 
          "\"\<cache\>\""}], "}"}], "]"}]}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"Quiet", " ", "@", " ", 
       RowBox[{"CreateDirectory", "[", "dir", "]"}]}], ";", "\n", "\t", 
      "dir"}]}], "\n", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.771103331077703*^9, 3.7711033355581827`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"d5017bf9-29d9-4512-b101-1113256852bf"],

Cell["Dictionary", "Text",
 CellChangeTimes->{{3.771103535372677*^9, 
  3.7711035394657087`*^9}},ExpressionUUID->"0d8ed3aa-61eb-45cf-892c-\
8003a6d49e93"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"keyValueStore", ",", " ", "HoldRest"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"keyValueStore", "::", "usage"}], "=", 
   "\"\<Hashing storage based of files\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"keyValueStore", "[", 
    RowBox[{"expr_", ",", " ", 
     RowBox[{"default_:", "None"}]}], "]"}], " ", ":=", " ", 
   RowBox[{"With", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"path", " ", "=", " ", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{"$cachePath", ",", " ", 
          RowBox[{
           RowBox[{"IntegerString", "[", 
            RowBox[{
             RowBox[{"Hash", "[", "expr", "]"}], ",", " ", "36"}], "]"}], " ",
            "<>", " ", "\"\<.wxf\>\""}]}], "}"}], "]"}]}], "}"}], ",", "\n", 
     "\t", 
     RowBox[{"Replace", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"Quiet", " ", "@", " ", 
        RowBox[{"Import", "[", 
         RowBox[{"path", ",", " ", "\"\<WXF\>\""}], "]"}]}], ",", "\n", 
       "\t\t", 
       RowBox[{
        RowBox[{"_", "?", "FailureQ"}], " ", "\[RuleDelayed]", " ", 
        RowBox[{"With", "[", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"evaluated", " ", "=", " ", "default"}], "}"}], ",", " ", 
          "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"Export", "[", 
            RowBox[{"path", ",", " ", "evaluated", ",", " ", "\"\<WXF\>\""}], 
            "]"}], ";", "\n", "\t\t\t", "evaluated"}]}], "\n", "\t\t", 
         "]"}]}]}], "\n", "\t", "]"}]}], "\n", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.771103872419026*^9, 3.771103892388*^9}, {
  3.7711039627487783`*^9, 3.771103974271432*^9}, {3.771104557152722*^9, 
  3.7711045606680527`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"72f92ca9-1507-49f0-b0f5-c1f12a807235"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Processing control variables", "Subtitle",
 CellChangeTimes->{{3.771154449365231*^9, 
  3.771154458634033*^9}},ExpressionUUID->"f2c2c48d-71fc-4efb-b26d-\
96abd98c43ce"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$progressCnt", "=", "0"}], ";", " ", 
  RowBox[{"$progressState", "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"CreateProcessingProgress", "[", "n_Integer", "]"}], ":=", 
  RowBox[{"(", "\n", "\t", 
   RowBox[{
    RowBox[{"$progressCnt", "=", "0"}], ";", " ", 
    RowBox[{"$progressState", "=", "\"\<\>\""}], ";", "\[IndentingNewLine]", 
    "\t", 
    RowBox[{"Column", "[", "\[IndentingNewLine]", "\t", 
     RowBox[{"{", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{"ProgressIndicator", "[", 
        RowBox[{
         RowBox[{"Dynamic", "[", "$progressCnt", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "n"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]",
        "\t\t", 
       RowBox[{"Dynamic", "[", "$progressState", "]"}]}], 
      "\[IndentingNewLine]", "\t", "}"}], "\[IndentingNewLine]", "\t", 
     "]"}]}], "\[IndentingNewLine]", ")"}]}]}], "Code",
 CellChangeTimes->{{3.7711544599562073`*^9, 3.771154464592157*^9}, {
  3.771154557121965*^9, 3.771154581598475*^9}, {3.771154880157722*^9, 
  3.771154899463583*^9}, {3.771156235001375*^9, 3.7711562506885777`*^9}, {
  3.7711685133499928`*^9, 3.771168558304191*^9}, {3.771168717715989*^9, 
  3.7711687622745953`*^9}, {3.7711688140008287`*^9, 3.771168820601674*^9}, {
  3.7711688538351707`*^9, 3.771168854374817*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"78e31a23-5015-41a6-b52c-067d37ac53d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["System files processing", "Subtitle",
 CellChangeTimes->{{3.7709346702064657`*^9, 3.770934670606163*^9}, {
  3.77093473791444*^9, 3.7709347451409082`*^9}, {3.770938737568358*^9, 
  3.770938739462008*^9}, {3.771103188322638*^9, 
  3.7711032000405607`*^9}},ExpressionUUID->"1c312c2c-bafe-4748-ab43-\
2309054ad28a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"getSavedSourceFromFile", "::", "usage"}], "=", 
   "\"\<Returns code from system files\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getSavedSourceFromFile", "[", "lst_List", "]"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"$progressCnt", "=", "0"}], ";", 
     RowBox[{"Join", " ", "@", " ", 
      RowBox[{"Map", "[", 
       RowBox[{"getSavedSourceFromFile", ",", " ", "lst"}], "]"}]}]}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getSavedSourceFromFile", "[", "path_String", "]"}], " ", ":=", 
   " ", 
   RowBox[{"{", 
    RowBox[{"path", ",", 
     RowBox[{"(", "\n", "\t", 
      RowBox[{
       RowBox[{"$progressState", "=", "path"}], ";", "\n", "\t", 
       RowBox[{"Increment", "[", "$progressCnt", "]"}], ";", "\n", "\t", 
       RowBox[{"keyValueStore", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"getSavedSourceFromFile", ",", " ", "path"}], "}"}], ",", 
         "\n", "\t\t", 
         RowBox[{"List", " ", "@@", " ", 
          RowBox[{"Map", "[", "\n", "\t\t\t", 
           RowBox[{"HoldComplete", ",", " ", "\n", "\t\t\t", 
            RowBox[{"Replace", "[", "\n", "\t\t\t\t ", 
             RowBox[{
              RowBox[{"Quiet", "@", 
               RowBox[{"ToExpression", "[", "\n", "\t\t\t\t ", 
                RowBox[{
                 RowBox[{"StringReplace", "[", "\n", "\t\t\t\t ", 
                  RowBox[{
                   RowBox[{"ReadString", "[", "path", "]"}], ",", "\n", 
                   "\t\t\t\t ", 
                   RowBox[{"{", "\[IndentingNewLine]", "\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"Shortest", "[", 
                    RowBox[{
                    "\"\<Package[\>\"", "~~", "___", "~~", "\"\<]\>\""}], 
                    "]"}], "\[Rule]", " ", "\"\<\>\""}], 
                    "\[IndentingNewLine]", "\t\t\t\t", "}"}]}], "]"}], ",", 
                 " ", "InputForm", ",", " ", "HoldComplete"}], "]"}]}], ",", 
              " ", 
              RowBox[{"{", "\n", "\t\t\t\t\t", 
               RowBox[{
                RowBox[{"h_HoldComplete", " ", "\[RuleDelayed]", " ", 
                 RowBox[{"DeleteCases", "[", 
                  RowBox[{"h", ",", " ", "Null"}], "]"}]}], ",", "\n", 
                "\t\t\t\t\t", 
                RowBox[{"_", " ", "\[RuleDelayed]", " ", 
                 RowBox[{"HoldComplete", "[", "]"}]}]}], "\n", "\t\t\t\t", 
               "}"}]}], "\n", "\t\t\t", "]"}]}], "\n", "\t\t", "]"}]}]}], 
        "\n", "\t", "]"}]}], ")"}]}], "}"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.7711037083252773`*^9, 3.7711037126769133`*^9}, {
   3.7711044049139843`*^9, 3.7711044180635977`*^9}, {3.7711045430006723`*^9, 
   3.771104550446992*^9}, {3.771104759325865*^9, 3.771104761489561*^9}, {
   3.771111619245943*^9, 3.7711116822494717`*^9}, {3.7711146102744913`*^9, 
   3.771114611511507*^9}, {3.771114654104312*^9, 3.7711146631944323`*^9}, {
   3.771117666211034*^9, 3.771117706502379*^9}, {3.77111774981415*^9, 
   3.771117769752265*^9}, {3.771117809057802*^9, 3.7711178123128147`*^9}, {
   3.771118260745412*^9, 3.771118276504182*^9}, {3.771118513322171*^9, 
   3.7711185485157137`*^9}, 3.7711186084731703`*^9, {3.771154324037657*^9, 
   3.7711544369009743`*^9}, {3.771154490837975*^9, 3.771154495568037*^9}, {
   3.771154526306386*^9, 3.771154550855628*^9}, {3.7711548855656633`*^9, 
   3.77115489001587*^9}, {3.7711552636112833`*^9, 3.7711552688974237`*^9}, {
   3.771155665583014*^9, 3.7711556676002502`*^9}, {3.771155701433647*^9, 
   3.771155702851931*^9}, {3.77115574811025*^9, 3.77115575057584*^9}, {
   3.771155940868197*^9, 3.771155942607274*^9}, {3.771156312465146*^9, 
   3.77115631794095*^9}, {3.771156552156784*^9, 3.771156554133953*^9}, {
   3.7711566781173983`*^9, 3.771156684175795*^9}, {3.7711569299008837`*^9, 
   3.7711569546964006`*^9}, {3.771157217307987*^9, 3.7711572376324368`*^9}, {
   3.771157571361992*^9, 3.7711575768603*^9}, {3.77115796993797*^9, 
   3.771157997883091*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"686e24c2-6c3b-45c0-8c63-19de41042b16"],

Cell["Scan the system directory to find all files", "Text",
 CellChangeTimes->{{3.770938718275917*^9, 
  3.770938735676338*^9}},ExpressionUUID->"2d6ff158-15f7-47c3-a3b2-\
1c1361d02eb2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"wlFiles", "=", 
   RowBox[{"FileNames", "[", 
    RowBox[{"\"\<*.wl\>\"", ",", "$InstallationDirectory", ",", "Infinity"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mFiles", "=", 
   RowBox[{"FileNames", "[", 
    RowBox[{"\"\<*.m\>\"", ",", "$InstallationDirectory", ",", "Infinity"}], 
    "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.770934713855258*^9, 3.7709347289775743`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"9b0939f3-cd10-455f-9e9f-8537c2c08624"],

Cell["Eliminate all inappropriate cases: loads of data, meta data ", "Text",
 CellChangeTimes->{{3.770996790684544*^9, 3.7709968367322807`*^9}, 
   3.77099688917304*^9},ExpressionUUID->"ab12de57-70a1-4dc7-ba38-\
a277da8827a6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"wlFilesFiltered", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Pick", "[", 
      RowBox[{"#", ",", 
       RowBox[{"Not", "/@", 
        RowBox[{"StringContainsQ", "[", 
         RowBox[{"#", ",", 
          RowBox[{
          "\"\</SearchIndex/\>\"", "|", "\"\</DefaultEntityTypes/\>\"", "|", 
           "\"\</CompileResources/\>\"", "|", "\"\</init.wl\>\""}]}], 
         "]"}]}]}], "]"}], "&"}], "@", "wlFiles"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mFilesFiltered", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Pick", "[", 
      RowBox[{"#", ",", 
       RowBox[{"Not", "/@", 
        RowBox[{"StringContainsQ", "[", 
         RowBox[{"#", ",", 
          RowBox[{
          "\"\</AutoCompletionData/\>\"", "|", "\"\</CharacterEncodings/\>\"",
            "|", "\"\</init.m\>\"", "|", "\"\</load.m\>\"", "|", 
           "\"\</TextResources/\>\"", "|", "\"\</Import.m\>\"", "|", 
           "\"\</Export.m\>\"", "|", "\"\</Options.m\>\"", "|", 
           "\"\</PacletInfo.m\>\""}]}], "]"}]}]}], "]"}], "&"}], "@", 
    "mFiles"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.770938598348545*^9, 3.770938628263776*^9}, {
   3.770938669256652*^9, 3.7709387102871447`*^9}, {3.770938759895789*^9, 
   3.7709387673978243`*^9}, {3.770938823430725*^9, 3.7709388293535624`*^9}, {
   3.770939072096446*^9, 3.770939074779799*^9}, {3.77093913349664*^9, 
   3.7709391441733007`*^9}, {3.7709800363526506`*^9, 3.77098003880448*^9}, 
   3.770980117326167*^9, {3.770980309702726*^9, 3.770980316616427*^9}, 
   3.7709810646677017`*^9, {3.7709969088928013`*^9, 3.770996911157308*^9}, {
   3.7711164954759274`*^9, 3.771116496800888*^9}, {3.771116554751424*^9, 
   3.7711165699133883`*^9}, {3.7711187409646053`*^9, 3.771118742066496*^9}, {
   3.7711187862375927`*^9, 3.7711187911748533`*^9}, {3.7711563376775217`*^9, 
   3.771156337850572*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"9e1c7631-e9e8-4b87-a57c-2d47af45d0b4"],

Cell[CellGroupData[{

Cell["Statistics", "Subsection",
 CellChangeTimes->{{3.77101175459201*^9, 
  3.771011757819482*^9}},ExpressionUUID->"2751c1cd-3ff4-4fa6-928b-\
c54954005315"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"Length", "[", "wlFilesFiltered", "]"}], 
     RowBox[{"Length", "[", "wlFiles", "]"}]], "//", "N"}], ",", 
   RowBox[{"Length", "[", "wlFilesFiltered", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.771011727255068*^9, 3.771011743710354*^9}, {
  3.771011805498316*^9, 3.771011809955195*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"4e912703-f0d2-4051-acba-860766fdd1c9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.47645429362880887`", ",", "172"}], "}"}]], "Output",
 CellChangeTimes->{{3.771011741286704*^9, 3.771011744255425*^9}, 
   3.7710118104077263`*^9},
 CellLabel->
  "Out[121]=",ExpressionUUID->"de6df5c1-8657-44d8-a876-729508bf1c67"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"Length", "[", "mFilesFiltered", "]"}], 
     RowBox[{"Length", "[", "mFiles", "]"}]], "//", "N"}], ",", 
   RowBox[{"Length", "[", "mFilesFiltered", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.771011727255068*^9, 3.7710117784372377`*^9}, {
  3.771011817196504*^9, 3.771011819622525*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"4b3a620d-6fef-43ee-9126-10efc58aaff4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.40192307692307694`", ",", "2090"}], "}"}]], "Output",
 CellChangeTimes->{3.771011779084696*^9, 3.771011820002055*^9},
 CellLabel->
  "Out[122]=",ExpressionUUID->"ef7f8274-2255-4c92-982e-01e35f1b0bd0"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Docs processing", "Subtitle",
 CellChangeTimes->{{3.771021252450385*^9, 
  3.7710212565720053`*^9}},ExpressionUUID->"0e6a13a1-dfe9-41b1-a255-\
fe5737e6269a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"getSourceFromDoc", "::", "usage"}], "=", 
   "\"\<Returns code from the sample of code\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getSourceFromDocExample", "[", "item_", "]"}], " ", ":=", " ", 
   "\n", "\t", 
   RowBox[{"DeleteCases", "[", "\[IndentingNewLine]", "\t\t", 
    RowBox[{
     RowBox[{"Quiet", "@", 
      RowBox[{"Cases", "[", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"Join", "@@", 
         RowBox[{"(", 
          RowBox[{"Join", "@@", 
           RowBox[{"(", 
            RowBox[{"item", "//", "Values"}], ")"}]}], ")"}]}], ",", 
        "\[IndentingNewLine]", "\t\t\t", 
        RowBox[{
         RowBox[{"Cell", "[", 
          RowBox[{
           RowBox[{"BoxData", "[", "r_", "]"}], ",", " ", "\"\<Input\>\"", 
           ",", " ", "___"}], "]"}], " ", ":>", " ", 
         RowBox[{"MakeExpression", "[", 
          RowBox[{"r", ",", " ", "StandardForm"}], "]"}]}], ",", "\n", 
        "\t\t\t", "Infinity"}], "\[IndentingNewLine]", "\t\t", "]"}]}], ",", 
     "\[IndentingNewLine]", "\t\t", "x_ErrorBox", ",", "\n", "\t\t", "1"}], 
    "\[IndentingNewLine]", "\t", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"getSourceFromDoc", "[", "]"}], " ", ":=", " ", 
  RowBox[{"getSourceFromDoc", "[", 
   RowBox[{"WolframLanguageData", "[", "]"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"getSourceFromDoc", "[", 
   RowBox[{"symbol", ":", 
    RowBox[{"_Entity", "|", "_String"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"getSourceFromDoc", "[", 
   RowBox[{"{", "symbol", "}"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"getSourceFromDoc", "[", 
   RowBox[{"symbol", ":", 
    RowBox[{"{", "__String", "}"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"getSourceFromDoc", "[", 
   RowBox[{"WolframLanguageData", "[", "symbol", "]"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getSourceFromDoc", "[", 
    RowBox[{"symbol", ":", 
     RowBox[{"{", "__Entity", "}"}]}], "]"}], " ", ":=", " ", 
   RowBox[{"DeleteCases", "[", "\n", "    ", 
    RowBox[{
     RowBox[{"DeleteDuplicates", "[", "\n", "     ", 
      RowBox[{"getSourceFromDocExample", " ", "@", " ", 
       RowBox[{"EntityValue", "[", 
        RowBox[{
         RowBox[{"WolframLanguageData", "[", "symbol", "]"}], ",", 
         "\"\<DocumentationExampleInputs\>\""}], "]"}]}], "\n", "      ", 
      "]"}], ",", " ", "\n", "      ", 
     RowBox[{"{", "}"}]}], "\n", "      ", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.771108011322398*^9, 3.77110805228898*^9}, {
   3.7711083888461323`*^9, 3.771108392237702*^9}, {3.7711084762525597`*^9, 
   3.771108477068557*^9}, {3.7711513839524517`*^9, 3.771151387949561*^9}, 
   3.771151616834086*^9, {3.7711516552703114`*^9, 3.771151667741378*^9}, {
   3.771151802996715*^9, 3.7711518155865793`*^9}, 3.771151856294437*^9, {
   3.7711525337931833`*^9, 3.7711525347317543`*^9}, {3.771152605763414*^9, 
   3.771152612395789*^9}, {3.771152808632098*^9, 3.7711528467729397`*^9}, {
   3.771152895342938*^9, 3.771152930379771*^9}, {3.771153033527669*^9, 
   3.771153037477355*^9}, {3.7711763298352423`*^9, 3.77117633166784*^9}, {
   3.77117636892022*^9, 3.771176396840876*^9}, {3.771176472029745*^9, 
   3.771176487167638*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"69b5c4b1-8afa-435d-86e3-be69be48f4ff"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"getSavedSourceFromDocs", "::", "usage"}], "=", 
   "\"\<Returns code from the language entity\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getSavedSourceFromDocs", "[", "]"}], " ", ":=", " ", 
   RowBox[{"getSavedSourceFromDocs", "[", 
    RowBox[{"WolframLanguageData", "[", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getSavedSourceFromDocs", "[", "s_String", "]"}], " ", ":=", " ", 
   RowBox[{"getSavedSourceFromDocs", "[", 
    RowBox[{"Entity", "[", 
     RowBox[{"\"\<WolframLanguageSymbol\>\"", ",", " ", "s"}], "]"}], "]"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getSavedSourceFromDocs", "[", "s_List", "]"}], " ", ":=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#", ",", 
        RowBox[{"getSavedSourceFromDocs", "[", "#", "]"}]}], "}"}], "&"}], 
     ",", " ", "s"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getSavedSourceFromDocs", "[", "s_Entity", "]"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Increment", "[", "$progressCnt", "]"}], ";", 
     RowBox[{"keyValueStore", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"getSavedSourceFromDocs", ",", " ", "s"}], "}"}], ",", " ", 
       RowBox[{"getSourceFromDoc", "[", "s", "]"}]}], "]"}]}], ")"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.77110841094707*^9, 3.771108472411973*^9}, {
  3.7711086336913223`*^9, 3.771108636660297*^9}, {3.771112836489799*^9, 
  3.771112837736741*^9}, {3.771114413336413*^9, 3.771114454291439*^9}, {
  3.771153039604569*^9, 3.771153042712205*^9}, {3.771166191956625*^9, 
  3.771166232620422*^9}, {3.771166321476797*^9, 3.771166339656691*^9}, {
  3.771166525007656*^9, 3.771166526361718*^9}, {3.771168092116076*^9, 
  3.771168112109476*^9}, {3.7711683168125887`*^9, 3.771168337175989*^9}, {
  3.771168570967037*^9, 3.7711686220403633`*^9}, {3.77116883425427*^9, 
  3.7711688429794416`*^9}, {3.7711765218622313`*^9, 3.7711765405056887`*^9}, {
  3.77119270396451*^9, 3.771192709376992*^9}, {3.7711930708053083`*^9, 
  3.771193073094369*^9}, {3.771195416780251*^9, 3.7711954171822023`*^9}, {
  3.771197601299687*^9, 3.77119763835603*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"bd18636c-03d0-4ccd-ae98-9ab6217a1ee5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dataset", "Subtitle",
 CellChangeTimes->{{3.771150901294355*^9, 
  3.771150905625339*^9}},ExpressionUUID->"8ffb2f96-8e13-497b-bbc1-\
8c83f89cef77"],

Cell[CellGroupData[{

Cell["WL and M files ", "Section",
 CellChangeTimes->{{3.771166144854796*^9, 
  3.771166163560316*^9}},ExpressionUUID->"77f9b3a6-58dc-44e8-a6bc-\
888e178c7587"],

Cell[BoxData[
 RowBox[{
  RowBox[{"wlData", "=", 
   RowBox[{"getSavedSourceFromFile", "[", "wlFilesFiltered", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.771164669432733*^9, 3.771164670610942*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"f35e485a-f612-48e5-9486-87b5061e2fe6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mData", "=", 
   RowBox[{"getSavedSourceFromFile", "[", "mFilesFiltered", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.771164681380577*^9, 3.7711646997062597`*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"9fcf39a0-4ad3-4566-add5-e02dedba6d85"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"wlData", ",", "mData"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.771164913532484*^9, 3.771164932034195*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"7d215e69-4a11-43ff-b590-0a6b70a4a3aa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rootLen", "=", 
   RowBox[{"StringLength", "@", "$InstallationDirectory"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.771164057821149*^9, 3.771164081798232*^9}, {
  3.771164122540698*^9, 3.7711641228226843`*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"2ca372c9-1bfa-4af8-9f75-493b02736994"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataset", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"$progressCnt", "=", "0"}], ";", 
     RowBox[{"Dataset", "[", 
      RowBox[{"Join", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"MapIndexed", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Increment", "[", "$progressCnt", "]"}], ";", 
             RowBox[{"Function", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"x", ",", "n"}], "}"}], ",", 
               RowBox[{"<|", 
                RowBox[{
                 RowBox[{"\"\<code\>\"", "->", "x"}], ",", 
                 RowBox[{"\"\<file\>\"", "->", 
                  RowBox[{"StringTake", "[", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"rootLen", "+", "1"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ",", 
                 RowBox[{"\"\<index\>\"", "->", 
                  RowBox[{"First", "@", "n"}]}]}], "|>"}]}], "]"}]}], ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], "/@", "data"}], 
        ")"}]}], "]"}]}], ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.771158221815235*^9, 3.771158296967383*^9}, {
  3.7711637384652767`*^9, 3.7711638109605494`*^9}, {3.771163870507001*^9, 
  3.7711639215859957`*^9}, {3.77116395435078*^9, 3.771163981894388*^9}, {
  3.771164092063315*^9, 3.771164141355591*^9}, {3.771164195500985*^9, 
  3.7711642172983093`*^9}, {3.771164248028761*^9, 3.771164325238901*^9}, {
  3.7711643878181953`*^9, 3.771164490184608*^9}, {3.7711649840724382`*^9, 
  3.771165020781576*^9}, {3.771165464373296*^9, 3.771165466056879*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"04b591f1-c2c2-4eb0-8255-c1dd1ddaa5dc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", " ", 
      "\"\<dataset/dataset_wl_m.wxf\>\""}], "}"}], "]"}], ",", "dataset", 
   ",", "\"\<WXF\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.771165865123226*^9, 3.771165943716751*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"ae8f5789-4cac-4cf6-8836-58fe10bb1dfa"],

Cell[BoxData["\<\"/Users/ckorikov/___wss19/WSS-19/Final \
Project/Research/dataset/dataset_wl_m.wxf\"\>"], "Output",
 CellChangeTimes->{3.771165761461216*^9, 3.7711659550977497`*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"02bc661d-9f86-4fc1-b22f-b96d8076cf76"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Docs", "Section",
 CellChangeTimes->{{3.771166172194787*^9, 
  3.7711661736571627`*^9}},ExpressionUUID->"75373d53-28bc-4960-b9d2-\
35d7c1300360"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"WolframLanguageData", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.7711912952452393`*^9, 3.771191296248658*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"af0bda83-2bcb-4214-acee-c677e18b9d9e"],

Cell[BoxData["5436"], "Output",
 CellChangeTimes->{3.771191296516424*^9, 3.771192738035719*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"21e322b0-e308-47a1-a656-69c0fe244d35"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"getSavedSourceFromDocs", "[", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.771166439964089*^9, 3.771166452388054*^9}, {
   3.7711665308217497`*^9, 3.7711665405435867`*^9}, {3.771168040023335*^9, 
   3.7711680614276342`*^9}, {3.7711681182079477`*^9, 
   3.7711681609001637`*^9}, {3.771168279786762*^9, 3.77116828669459*^9}, {
   3.771168672807105*^9, 3.7711686773864326`*^9}, 3.771168777867002*^9, {
   3.771168869250956*^9, 3.7711688834462013`*^9}, 3.771191200847703*^9, {
   3.771191248791458*^9, 3.771191252564321*^9}, {3.7711927162606297`*^9, 
   3.771192745448707*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"e185f23b-d9a8-4f8b-b2b5-edd1ca6246b1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CreateProcessingProgress", "[", "5436", "]"}]], "Input",
 CellChangeTimes->{{3.771196973374559*^9, 3.771197005744138*^9}, 
   3.771197656136401*^9},
 CellLabel->"In[28]:=",ExpressionUUID->"1b17a20e-645d-4c6a-8ed3-0a6636981607"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ProgressIndicatorBox[Dynamic[$CellContext`$progressCnt], {0, 5436}]},
    {
     DynamicBox[ToBoxes[$CellContext`$progressState, StandardForm],
      ImageSizeCache->{0., {0., 7.}}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.7711970062659817`*^9, {3.7711976567172318`*^9, 3.7711976855742197`*^9}, 
   3.771197757901967*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"b776bc4c-f0fd-4e96-8c8f-71d1d4413786"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataset", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"$progressCnt", "=", "0"}], ";", 
     RowBox[{"Dataset", "[", 
      RowBox[{"Join", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"MapIndexed", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Increment", "[", "$progressCnt", "]"}], ";", 
             RowBox[{"Function", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"x", ",", "n"}], "}"}], ",", 
               RowBox[{"<|", 
                RowBox[{
                 RowBox[{"\"\<code\>\"", "->", "x"}], ",", 
                 RowBox[{"\"\<source\>\"", "->", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                 RowBox[{"\"\<index\>\"", "->", 
                  RowBox[{"First", "@", "n"}]}]}], "|>"}]}], "]"}]}], ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], "/@", "data"}], 
        ")"}]}], "]"}]}], ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.771196860749856*^9, 3.771196884760784*^9}, {
  3.771196952803966*^9, 3.771196953576014*^9}, {3.7711970116281643`*^9, 
  3.771197014034935*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"2ba1e440-f36e-4114-b688-962e7a0aab29"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", " ", 
      "\"\<dataset/dataset_docs.wxf\>\""}], "}"}], "]"}], ",", "dataset", 
   ",", "\"\<WXF\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.771165865123226*^9, 3.771165943716751*^9}, {
  3.771197290239388*^9, 3.771197291101881*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"c7c49f9d-0d39-44e6-8bdf-e50287f00b9e"],

Cell[BoxData["\<\"/Users/ckorikov/___wss19/WSS-19/Final \
Project/Research/dataset/dataset_docs.wxf\"\>"], "Output",
 CellChangeTimes->{3.771198726030851*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"b60113df-8e3d-4fc9-8774-64cb1ed3217e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"datasetWlM", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", " ", 
        "\"\<dataset/dataset_wl_m.wxf\>\""}], "}"}], "]"}], ",", " ", 
     "\"\<WXF\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.77119876668979*^9, 3.7711988259259243`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"eda270af-bd51-4f3a-be31-70b3c364ea19"],

Cell[BoxData[
 TemplateBox[{
  "Global`$Version","shdw",
   "\"Symbol \\!\\(\\*RowBox[{\\\"\\\\\\\"$Version\\\\\\\"\\\"}]\\) appears \
in multiple contexts \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"Global`\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"System`\\\\\\\
\"\\\"}], \\\"}\\\"}]\\); definitions in context \
\\!\\(\\*RowBox[{\\\"\\\\\\\"Global`\\\\\\\"\\\"}]\\) may shadow or be \
shadowed by other definitions.\"",2,32,1,33557720985702313651,"Local",
   "Global`$Version"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.7711988296523247`*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"9e282bdb-e72e-4443-af38-e15108a8144b"],

Cell[BoxData[
 TemplateBox[{
  "Global`$CreationDate","shdw",
   "\"Symbol \\!\\(\\*RowBox[{\\\"\\\\\\\"$CreationDate\\\\\\\"\\\"}]\\) \
appears in multiple contexts \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"Global`\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"System`\\\\\\\
\"\\\"}], \\\"}\\\"}]\\); definitions in context \
\\!\\(\\*RowBox[{\\\"\\\\\\\"Global`\\\\\\\"\\\"}]\\) may shadow or be \
shadowed by other definitions.\"",2,32,2,33557720985702313651,"Local",
   "Global`$CreationDate"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.771198829677575*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"0270f206-4c12-4d8d-a10d-b28169fd3fda"],

Cell[BoxData[
 TemplateBox[{
  "KernelSpeed","shdw",
   "\"Symbol \\!\\(\\*RowBox[{\\\"\\\\\\\"KernelSpeed\\\\\\\"\\\"}]\\) \
appears in multiple contexts \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"System`\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Global`\\\\\\\
\"\\\"}], \\\"}\\\"}]\\); definitions in context \
\\!\\(\\*RowBox[{\\\"\\\\\\\"System`\\\\\\\"\\\"}]\\) may shadow or be \
shadowed by other definitions.\"",2,32,3,33557720985702313651,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.771198829803234*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"4dccfcd9-ad2d-41e7-b4a4-27d76fc28709"],

Cell[BoxData[
 TemplateBox[{
  "getProperty","shdw",
   "\"Symbol \\!\\(\\*RowBox[{\\\"\\\\\\\"getProperty\\\\\\\"\\\"}]\\) \
appears in multiple contexts \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"System`\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Global`\\\\\\\
\"\\\"}], \\\"}\\\"}]\\); definitions in context \
\\!\\(\\*RowBox[{\\\"\\\\\\\"System`\\\\\\\"\\\"}]\\) may shadow or be \
shadowed by other definitions.\"",2,32,4,33557720985702313651,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.77119883139397*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"4268e7b8-37c0-42a9-bcda-bee0e5c02770"],

Cell[BoxData[
 TemplateBox[{
  "setProperty","shdw",
   "\"Symbol \\!\\(\\*RowBox[{\\\"\\\\\\\"setProperty\\\\\\\"\\\"}]\\) \
appears in multiple contexts \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"System`\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Global`\\\\\\\
\"\\\"}], \\\"}\\\"}]\\); definitions in context \
\\!\\(\\*RowBox[{\\\"\\\\\\\"System`\\\\\\\"\\\"}]\\) may shadow or be \
shadowed by other definitions.\"",2,32,5,33557720985702313651,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.771198832542685*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"fbeb653f-3151-4b1c-9829-e224f33f2d68"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"datasetWlM", "=", 
   RowBox[{"datasetWlM", "[", 
    RowBox[{"All", ",", 
     RowBox[{"KeyMap", "[", 
      RowBox[{"Replace", "[", 
       RowBox[{"\"\<file\>\"", "\[Rule]", "\"\<source\>\""}], "]"}], "]"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.771198941628221*^9, 3.771198951135653*^9}, {
  3.7711990025587063`*^9, 3.7711990038482924`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"04e963b1-e54a-474a-811f-9bb247a4f84c"],

Cell[CellGroupData[{

Cell[BoxData["datasetWlM"], "Input",
 CellChangeTimes->{{3.7711988548484488`*^9, 3.771198856075639*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"bc4a5695-de9d-472d-8db3-616eed7b496d"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 123748, "InitialType" -> 
        TypeSystem`Vector[
          
          TypeSystem`Struct[{"code", "source", "index"}, {
           TypeSystem`AnyType, 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[Integer]}], 123748], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "code"} -> 1, {All, "source"} -> 
           1, {All, "index"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "code" -> TypeSystem`PackageScope`UnknownShape, "source" -> 
              TypeSystem`PackageScope`AtomShape[480.00000000000006`], "index" -> 
              TypeSystem`PackageScope`AtomShape[34]]]], 20, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[213893299], 
        "Type" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{"code", "source", "index"}, {
           TypeSystem`AnyType, 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[Integer]}], 123748], "HandleQ" -> True, 
        "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[213893299]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"code\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"code\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1651916380][{All, "code"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[All, "code"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"source\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"source\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1651916380][{All, "source"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[All, "source"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"index\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"index\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1651916380][{All, "index"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[All, "index"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"HoldComplete", "[", 
                    RowBox[{
                    RowBox[{
                    StyleBox[
                    RowBox[{"AreaBetweenCurves", "::", "usage"}], 
                    "MessageName"], "=", 
                    "\"Compute the area between two plane curves\""}], ";"}], 
                    "]"}], FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[1, 
                   Key["code"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "/SystemFiles/Components/AlphaScannerFunctions/Kernel/\
AreaBetweenCurves.wl", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[1, 
                   Key["source"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[1, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"HoldComplete", "[", 
                    
                    RowBox[{
                    "Needs", "[", 
                    "\"AlphaScannerFunctions`CommonFunctions`\"", "]"}], 
                    "]"}], FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[2, 
                   Key["code"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "/SystemFiles/Components/AlphaScannerFunctions/Kernel/\
AreaBetweenCurves.wl", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[2, 
                   Key["source"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[2, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"HoldComplete", "[", 
                    RowBox[{"Begin", "[", "\"`Private`\"", "]"}], "]"}], 
                   FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[3, 
                   Key["code"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "/SystemFiles/Components/AlphaScannerFunctions/Kernel/\
AreaBetweenCurves.wl", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[3, 
                   Key["source"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[3, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"HoldComplete", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Options", "[", "AreaBetweenCurves", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"Assumptions", "\[RuleDelayed]", "$Assumptions"}],
                     "}"}]}], ";"}], "]"}], FontFamily -> "Source Code Pro", 
                   FontSize -> 13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[4, 
                   Key["code"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "/SystemFiles/Components/AlphaScannerFunctions/Kernel/\
AreaBetweenCurves.wl", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[4, 
                   Key["source"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[4, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"HoldComplete", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{
                    "SyntaxInformation", "[", "AreaBetweenCurves", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\"ArgumentsPattern\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_", ",", "_"}], "}"}], ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "}"}]}], "}"}]}], 
                    ";"}], "]"}], FontFamily -> "Source Code Pro", FontSize -> 
                   13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[5, 
                   Key["code"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "/SystemFiles/Components/AlphaScannerFunctions/Kernel/\
AreaBetweenCurves.wl", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[5, 
                   Key["source"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[5, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"HoldComplete", "[", 
                    RowBox[{
                    RowBox[{
                    StyleBox[
                    RowBox[{"AreaBetweenCurves", "::", "endpt"}], 
                    "MessageName"], "=", 
                    "\"The endpoint `1` depends on `2`.\""}], ";"}], "]"}], 
                   FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[6, 
                   Key["code"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "/SystemFiles/Components/AlphaScannerFunctions/Kernel/\
AreaBetweenCurves.wl", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[6, 
                   Key["source"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[6, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"HoldComplete", "[", 
                    RowBox[{
                    RowBox[{"AreaBetweenCurves", "[", "args__", "]"}], ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"res", "=", 
                    RowBox[{"iAreaBetweenCurves", "[", "args", "]"}]}], "}"}],
                     ",", 
                    RowBox[{"res", "/;", 
                    RowBox[{"res", "=!=", "$Failed"}]}]}], "]"}]}], "]"}], 
                   FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[7, 
                   Key["code"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "/SystemFiles/Components/AlphaScannerFunctions/Kernel/\
AreaBetweenCurves.wl", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[7, 
                   Key["source"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["7"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[7, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"HoldComplete", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Options", "[", "iAreaBetweenCurves", "]"}], "=", 
                    
                    RowBox[{"Options", "[", "AreaBetweenCurves", "]"}]}], 
                    ";"}], "]"}], FontFamily -> "Source Code Pro", FontSize -> 
                   13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[8, 
                   Key["code"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "/SystemFiles/Components/AlphaScannerFunctions/Kernel/\
AreaBetweenCurves.wl", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[8, 
                   Key["source"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[8, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"HoldComplete", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"iAreaBetweenCurves", "[", "expr___", "]"}], "/;", 
                    RowBox[{"!", 
                    RowBox[{"ArgumentCountQ", "[", 
                    RowBox[{"AreaBetweenCurves", ",", 
                    RowBox[{"Replace", "[", 
                    RowBox[{
                    RowBox[{"{", "expr", "}"}], ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"r___", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "}"}], 
                    "\[RuleDelayed]", 
                    RowBox[{"Length", "[", 
                    RowBox[{"{", "r", "}"}], "]"}]}]}], "]"}], ",", 
                    RowBox[{"{", "2", "}"}]}], "]"}]}]}], "=", "$Failed"}], 
                    ";"}], "]"}], FontFamily -> "Source Code Pro", FontSize -> 
                   13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[9, 
                   Key["code"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "/SystemFiles/Components/AlphaScannerFunctions/Kernel/\
AreaBetweenCurves.wl", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[9, 
                   Key["source"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["9"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[9, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["\[Ellipsis]", 
                    Style[
                    "\[Ellipsis]", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1651916380][{10, 
                    Key["code"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[10, 
                   Key["code"]]], "Mouse"], BaseStyle -> {
                  GrayLevel[0.5]}], 
               Pane[
                Annotation[
                "/SystemFiles/Components/AlphaScannerFunctions/Kernel/\
AreaBetweenCurves.wl", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[10, 
                   Key["source"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["10"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[10, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["\[Ellipsis]", 
                    Style[
                    "\[Ellipsis]", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1651916380][{11, 
                    Key["code"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[11, 
                   Key["code"]]], "Mouse"], BaseStyle -> {
                  GrayLevel[0.5]}], 
               Pane[
                Annotation[
                "/SystemFiles/Components/AlphaScannerFunctions/Kernel/\
AreaBetweenCurves.wl", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[11, 
                   Key["source"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["11"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[11, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"HoldComplete", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"iAreaBetweenCurves", "[", "___", "]"}], "=", 
                    "$Failed"}], ";"}], "]"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[12, 
                   Key["code"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "/SystemFiles/Components/AlphaScannerFunctions/Kernel/\
AreaBetweenCurves.wl", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[12, 
                   Key["source"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["12"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[12, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["\[Ellipsis]", 
                    Style[
                    "\[Ellipsis]", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1651916380][{13, 
                    Key["code"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[13, 
                   Key["code"]]], "Mouse"], BaseStyle -> {
                  GrayLevel[0.5]}], 
               Pane[
                Annotation[
                "/SystemFiles/Components/AlphaScannerFunctions/Kernel/\
AreaBetweenCurves.wl", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[13, 
                   Key["source"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["13"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[13, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["\[Ellipsis]", 
                    Style[
                    "\[Ellipsis]", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1651916380][{14, 
                    Key["code"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[14, 
                   Key["code"]]], "Mouse"], BaseStyle -> {
                  GrayLevel[0.5]}], 
               Pane[
                Annotation[
                "/SystemFiles/Components/AlphaScannerFunctions/Kernel/\
AreaBetweenCurves.wl", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[14, 
                   Key["source"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["14"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[14, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["\[Ellipsis]", 
                    Style[
                    "\[Ellipsis]", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1651916380][{15, 
                    Key["code"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[15, 
                   Key["code"]]], "Mouse"], BaseStyle -> {
                  GrayLevel[0.5]}], 
               Pane[
                Annotation[
                "/SystemFiles/Components/AlphaScannerFunctions/Kernel/\
AreaBetweenCurves.wl", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[15, 
                   Key["source"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["15"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[15, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["\[Ellipsis]", 
                    Style[
                    "\[Ellipsis]", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1651916380][{16, 
                    Key["code"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[16, 
                   Key["code"]]], "Mouse"], BaseStyle -> {
                  GrayLevel[0.5]}], 
               Pane[
                Annotation[
                "/SystemFiles/Components/AlphaScannerFunctions/Kernel/\
AreaBetweenCurves.wl", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[16, 
                   Key["source"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["16"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[16, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"HoldComplete", "[", 
                    RowBox[{"End", "[", "]"}], "]"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[17, 
                   Key["code"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "/SystemFiles/Components/AlphaScannerFunctions/Kernel/\
AreaBetweenCurves.wl", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[17, 
                   Key["source"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["17"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[17, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"HoldComplete", "[", 
                    RowBox[{
                    RowBox[{
                    StyleBox[
                    RowBox[{"Asymptotes", "::", "usage"}], "MessageName"], 
                    "=", "\"Compute the asymptotes to a plane curves\""}], 
                    ";"}], "]"}], FontFamily -> "Source Code Pro", FontSize -> 
                   13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[18, 
                   Key["code"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "/SystemFiles/Components/AlphaScannerFunctions/Kernel/\
Asymptotes.wl", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[18, 
                   Key["source"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[18, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"HoldComplete", "[", 
                    RowBox[{
                    RowBox[{
                    StyleBox[
                    RowBox[{"asymptotesOfImplicitEquations", "::", "usage"}], 
                    "MessageName"], "=", 
                    "\"Compute the asymptotes to a plane curves\""}], ";"}], 
                    "]"}], FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[19, 
                   Key["code"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "/SystemFiles/Components/AlphaScannerFunctions/Kernel/\
Asymptotes.wl", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[19, 
                   Key["source"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[19, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"HoldComplete", "[", 
                    RowBox[{
                    RowBox[{
                    StyleBox[
                    RowBox[{"horizontalAsymptotes", "::", "usage"}], 
                    "MessageName"], "=", 
                    "\"Compute the asymptotes to a plane curves\""}], ";"}], 
                    "]"}], FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[20, 
                   Key["code"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "/SystemFiles/Components/AlphaScannerFunctions/Kernel/\
Asymptotes.wl", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[20, 
                   Key["source"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
                  GeneralUtilities`Slice[20, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    123748 (-20), {1, 123748 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 123748 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    123748, FontColor -> GrayLevel[0], FontWeight -> 
                    "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 123748 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    123748 20, {1, 123748 - 20 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    123748 (-20), {1, 123748 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 123748 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    123748, FontColor -> GrayLevel[0], FontWeight -> 
                    "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 123748 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    123748 20, {1, 123748 - 20 + 1}])}]}, "   "]]], 
                Background -> GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1651916380},
                     1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1651916380},
                     10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1651916380},
                     30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1651916380},
                     100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1651916380},
                     100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft, SpanFromLeft}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1651916380][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1651916380]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651916380][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {1149., {279.634033203125, 285.365966796875}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{
  3.7711988414832478`*^9, {3.771198992080859*^9, 3.7711990182832193`*^9}},
 CellLabel->"Out[37]=",ExpressionUUID->"d2363823-f3b1-4733-9e7d-55cf537fc7f9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"datasetFull", "=", 
   RowBox[{"Dataset", "@", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Normal", "@", "dataset"}], ",", 
      RowBox[{"Normal", "@", "datasetWlM"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7711992645516148`*^9, 3.771199266000531*^9}, {
  3.771199712875442*^9, 3.7711997333222313`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"5a783490-04a0-4c2a-82c4-a88feaf86e84"],

Cell[CellGroupData[{

Cell[BoxData["datasetFull"], "Input",
 CellLabel->"In[52]:=",ExpressionUUID->"4caa57d2-7341-4ce5-921c-b426bd0918df"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 285830, "InitialType" -> 
        TypeSystem`Vector[
          
          TypeSystem`Struct[{"code", "source", "index"}, {
           TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`Atom[Integer]}], 285830], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "code"} -> 1, {All, "source"} -> 
           1, {All, "index"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "code" -> TypeSystem`PackageScope`UnknownShape, "source" -> 
              TypeSystem`PackageScope`UnknownShape, "index" -> 
              TypeSystem`PackageScope`AtomShape[34]]]], 20, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[1294568713], 
        "Type" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{"code", "source", "index"}, {
           TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`Atom[Integer]}], 285830], "HandleQ" -> True, 
        "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1294568713]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"code\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"code\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 234670794][{
                    All, "code"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[All, "code"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"source\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"source\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 234670794][{
                    All, "source"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[All, "source"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"index\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"index\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 234670794][{
                    All, "index"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[All, "index"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"HoldComplete", "[", 
                    RowBox[{
                    RowBox[{"Print", "[", "a", "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}], ";", 
                    RowBox[{"Print", "[", "b", "]"}]}], "]"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[1, 
                   Key["code"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"$Aborted\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[1, 
                   Key["source"]]], "Mouse"], 
                ImageSize -> {{90, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[1, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"HoldComplete", "[", 
                    RowBox[{"TimeConstrained", "[", 
                    RowBox[{
                    RowBox[{"Pause", "[", "2", "]"}], ",", "1"}], "]"}], 
                    "]"}], FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[2, 
                   Key["code"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"$Aborted\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[2, 
                   Key["source"]]], "Mouse"], 
                ImageSize -> {{90, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[2, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"HoldComplete", "[", 
                    RowBox[{"MemoryConstrained", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    SuperscriptBox["10", "6"], "]"}], ",", "10000"}], "]"}], 
                    "]"}], FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[3, 
                   Key["code"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"$Aborted\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[3, 
                   Key["source"]]], "Mouse"], 
                ImageSize -> {{90, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[3, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["\[Ellipsis]", 
                    Style[
                    "\[Ellipsis]", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 234670794][{
                    4, 
                    Key["code"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[4, 
                   Key["code"]]], "Mouse"], BaseStyle -> {
                  GrayLevel[0.5]}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"$Aborted\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[4, 
                   Key["source"]]], "Mouse"], 
                ImageSize -> {{90, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[4, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"HoldComplete", "[", 
                    RowBox[{"f", "[", "4", "]"}], "]"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[5, 
                   Key["code"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"$Aborted\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[5, 
                   Key["source"]]], "Mouse"], 
                ImageSize -> {{90, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[5, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"HoldComplete", "[", 
                    RowBox[{"f", "[", "100", "]"}], "]"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[6, 
                   Key["code"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"$Aborted\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[6, 
                   Key["source"]]], "Mouse"], 
                ImageSize -> {{90, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[6, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"HoldComplete", "[", 
                    RowBox[{"Options", "[", 
                    RowBox[{
                    
                    RowBox[{
                    "ChannelObject", "[", "\"another@sample.com:send\"", 
                    "]"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"HandlerFunctions", ",", "ChannelPreSendFunction",
                     ",", "NotificationFunction", ",", "Initialization"}], 
                    "}"}]}], "]"}], "]"}], FontFamily -> "Source Code Pro", 
                   FontSize -> 13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[7, 
                   Key["code"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"$Allow External Channel Functions\"", FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[7, 
                   Key["source"]]], "Mouse"], 
                ImageSize -> {{90, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[7, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"HoldComplete", "[", 
                    
                    RowBox[{
                    "Unprotect", "[", "$AllowExternalChannelFunctions", "]"}],
                     "]"}], FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[8, 
                   Key["code"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"$Allow External Channel Functions\"", FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[8, 
                   Key["source"]]], "Mouse"], 
                ImageSize -> {{90, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[8, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"HoldComplete", "[", 
                    RowBox[{"$AllowExternalChannelFunctions", "=", "True"}], 
                    "]"}], FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[9, 
                   Key["code"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"$Allow External Channel Functions\"", FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[9, 
                   Key["source"]]], "Mouse"], 
                ImageSize -> {{90, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[9, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"HoldComplete", "[", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{"ChannelSend", "[", 
                    
                    RowBox[{
                    "\"another@sample.com:send\"", ",", "\"message\""}], 
                    "]"}], "]"}], "]"}], FontFamily -> "Source Code Pro", 
                   FontSize -> 13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[10, 
                   Key["code"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"$Allow External Channel Functions\"", FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[10, 
                   Key["source"]]], "Mouse"], 
                ImageSize -> {{90, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[10, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"HoldComplete", "[", 
                    RowBox[{"$AllowExternalChannelFunctions", "=", "False"}], 
                    "]"}], FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[11, 
                   Key["code"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"$Allow External Channel Functions\"", FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[11, 
                   Key["source"]]], "Mouse"], 
                ImageSize -> {{90, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[11, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"HoldComplete", "[", 
                    
                    RowBox[{
                    "Protect", "[", "$AllowExternalChannelFunctions", "]"}], 
                    "]"}], FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[12, 
                   Key["code"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"$Allow External Channel Functions\"", FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[12, 
                   Key["source"]]], "Mouse"], 
                ImageSize -> {{90, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[12, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"HoldComplete", "[", 
                    RowBox[{
                    RowBox[{"$AssertFunction", "=", 
                    RowBox[{
                    RowBox[{"Throw", "[", 
                    RowBox[{"{", "##1", "}"}], "]"}], "&"}]}], ";"}], "]"}], 
                   FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[13, 
                   Key["code"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"$Assert Function\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[13, 
                   Key["source"]]], "Mouse"], 
                ImageSize -> {{90, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[13, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"HoldComplete", "[", 
                    RowBox[{"<<", "\"ExampleData`FunctionWithAssert`\""}], 
                    "]"}], FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[14, 
                   Key["code"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"$Assert Function\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[14, 
                   Key["source"]]], "Mouse"], 
                ImageSize -> {{90, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[14, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"HoldComplete", "[", 
                    RowBox[{"Catch", "[", 
                    RowBox[{"Compute", "[", "1.`", "]"}], "]"}], "]"}], 
                   FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[15, 
                   Key["code"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"$Assert Function\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[15, 
                   Key["source"]]], "Mouse"], 
                ImageSize -> {{90, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[15, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"HoldComplete", "[", 
                    RowBox[{"Off", "[", "Assert", "]"}], "]"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[16, 
                   Key["code"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"$Assert Function\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[16, 
                   Key["source"]]], "Mouse"], 
                ImageSize -> {{90, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[16, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"HoldComplete", "[", 
                    RowBox[{"$Assumptions", "=", 
                    RowBox[{"a", ">", "0"}]}], "]"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[17, 
                   Key["code"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"$Assumptions\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[17, 
                   Key["source"]]], "Mouse"], 
                ImageSize -> {{90, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[17, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"HoldComplete", "[", 
                    RowBox[{"Refine", "[", 
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["a", "2"], " ", 
                    SuperscriptBox["b", "2"]}]], "]"}], "]"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[18, 
                   Key["code"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"$Assumptions\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[18, 
                   Key["source"]]], "Mouse"], 
                ImageSize -> {{90, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[18, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"HoldComplete", "[", 
                    RowBox[{
                    SubsuperscriptBox["\[Integral]", "0", "1"], 
                    RowBox[{
                    SuperscriptBox["x", "a"], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], "]"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[19, 
                   Key["code"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"$Assumptions\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[19, 
                   Key["source"]]], "Mouse"], 
                ImageSize -> {{90, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[19, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"HoldComplete", "[", 
                    RowBox[{"Assuming", "[", 
                    RowBox[{
                    RowBox[{"b", "<", "0"}], ",", 
                    RowBox[{"Refine", "[", 
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["a", "2"], " ", 
                    SuperscriptBox["b", "2"]}]], "]"}]}], "]"}], "]"}], 
                   FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[20, 
                   Key["code"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"$Assumptions\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[20, 
                   Key["source"]]], "Mouse"], 
                ImageSize -> {{90, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
                 
                  GeneralUtilities`Slice[20, 
                   Key["index"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    285830 (-20), {1, 285830 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 285830 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    285830, FontColor -> GrayLevel[0], FontWeight -> 
                    "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 285830 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    285830 20, {1, 285830 - 20 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    285830 (-20), {1, 285830 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 285830 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    285830, FontColor -> GrayLevel[0], FontWeight -> 
                    "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 285830 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    285830 20, {1, 285830 - 20 + 1}])}]}, "   "]]], 
                Background -> GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 234670794}, 
                    1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 234670794}, 
                    10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 234670794}, 
                    30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 234670794}, 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 234670794}, 
                    100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft, SpanFromLeft}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 234670794][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 234670794]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[234670794][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {876., {288.634033203125, 294.365966796875}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.771199756705647*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"26d6b02e-3d3e-4bbb-8891-0936939d4484"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", " ", 
      "\"\<dataset/dataset_full.wxf\>\""}], "}"}], "]"}], ",", "datasetFull", 
   ",", "\"\<WXF\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7711997965722*^9, 3.7711998003688707`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"9d4765ef-87d2-4cb2-91f1-e7705cd3adb3"],

Cell[BoxData["\<\"/Users/ckorikov/___wss19/WSS-19/Final \
Project/Research/dataset/dataset_full.wxf\"\>"], "Output",
 CellChangeTimes->{3.7712007085895348`*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"bc2daffc-fb5f-4fdc-8267-1b5ea939818a"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{-737, Automatic}, {Automatic, 101}},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 11, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[583, 22, 151, 3, 98, "Title",ExpressionUUID->"04a42d79-0ec8-4808-8154-bc75d518fe35"],
Cell[737, 27, 270, 5, 30, "Input",ExpressionUUID->"d6edf5e1-f92a-46aa-a0f4-76fb6b35233d"],
Cell[CellGroupData[{
Cell[1032, 36, 171, 3, 53, "Subtitle",ExpressionUUID->"f306736e-8eeb-4ce3-b22d-26ebcf3580bb"],
Cell[1206, 41, 161, 3, 35, "Text",ExpressionUUID->"afbbac12-4923-4337-9c63-ae59f675888a"],
Cell[1370, 46, 698, 17, 129, "Code",ExpressionUUID->"d5017bf9-29d9-4512-b101-1113256852bf"],
Cell[2071, 65, 154, 3, 35, "Text",ExpressionUUID->"0d8ed3aa-61eb-45cf-892c-8003a6d49e93"],
Cell[2228, 70, 1890, 47, 281, "Code",ExpressionUUID->"72f92ca9-1507-49f0-b0f5-c1f12a807235"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4155, 122, 174, 3, 53, "Subtitle",ExpressionUUID->"f2c2c48d-71fc-4efb-b26d-96abd98c43ce"],
Cell[4332, 127, 1436, 29, 224, "Code",ExpressionUUID->"78e31a23-5015-41a6-b52c-067d37ac53d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5805, 161, 318, 5, 53, "Subtitle",ExpressionUUID->"1c312c2c-bafe-4748-ab43-2309054ad28a"],
Cell[6126, 168, 4142, 81, 452, "Code",ExpressionUUID->"686e24c2-6c3b-45c0-8c63-19de41042b16"],
Cell[10271, 251, 185, 3, 35, "Text",ExpressionUUID->"2d6ff158-15f7-47c3-a3b2-1c1361d02eb2"],
Cell[10459, 256, 508, 12, 72, "Code",ExpressionUUID->"9b0939f3-cd10-455f-9e9f-8537c2c08624"],
Cell[10970, 270, 226, 3, 35, "Text",ExpressionUUID->"ab12de57-70a1-4dc7-ba38-a277da8827a6"],
Cell[11199, 275, 1965, 42, 73, "Code",ExpressionUUID->"9e1c7631-e9e8-4b87-a57c-2d47af45d0b4"],
Cell[CellGroupData[{
Cell[13189, 321, 157, 3, 54, "Subsection",ExpressionUUID->"2751c1cd-3ff4-4fa6-928b-c54954005315"],
Cell[CellGroupData[{
Cell[13371, 328, 458, 11, 51, "Input",ExpressionUUID->"4e912703-f0d2-4051-acba-860766fdd1c9"],
Cell[13832, 341, 271, 6, 34, "Output",ExpressionUUID->"de6df5c1-8657-44d8-a876-729508bf1c67"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14140, 352, 457, 11, 51, "Input",ExpressionUUID->"4b3a620d-6fef-43ee-9126-10efc58aaff4"],
Cell[14600, 365, 242, 5, 34, "Output",ExpressionUUID->"ef7f8274-2255-4c92-982e-01e35f1b0bd0"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[14903, 377, 163, 3, 53, "Subtitle",ExpressionUUID->"0e6a13a1-dfe9-41b1-a255-fe5737e6269a"],
Cell[15069, 382, 3279, 72, 415, "Code",ExpressionUUID->"69b5c4b1-8afa-435d-86e3-be69be48f4ff"],
Cell[18351, 456, 2300, 51, 129, "Code",ExpressionUUID->"bd18636c-03d0-4ccd-ae98-9ab6217a1ee5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20688, 512, 153, 3, 53, "Subtitle",ExpressionUUID->"8ffb2f96-8e13-497b-bbc1-8c83f89cef77"],
Cell[CellGroupData[{
Cell[20866, 519, 160, 3, 67, "Section",ExpressionUUID->"77f9b3a6-58dc-44e8-a6bc-888e178c7587"],
Cell[21029, 524, 284, 6, 30, "Input",ExpressionUUID->"f35e485a-f612-48e5-9486-87b5061e2fe6"],
Cell[21316, 532, 284, 6, 30, "Input",ExpressionUUID->"9fcf39a0-4ad3-4566-add5-e02dedba6d85"],
Cell[21603, 540, 281, 6, 30, "Input",ExpressionUUID->"7d215e69-4a11-43ff-b590-0a6b70a4a3aa"],
Cell[21887, 548, 327, 7, 30, "Input",ExpressionUUID->"2ca372c9-1bfa-4af8-9f75-493b02736994"],
Cell[22217, 557, 1928, 43, 115, "Input",ExpressionUUID->"04b591f1-c2c2-4eb0-8255-c1dd1ddaa5dc"],
Cell[CellGroupData[{
Cell[24170, 604, 434, 10, 52, "Input",ExpressionUUID->"ae8f5789-4cac-4cf6-8836-58fe10bb1dfa"],
Cell[24607, 616, 261, 3, 34, "Output",ExpressionUUID->"02bc661d-9f86-4fc1-b22f-b96d8076cf76"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[24917, 625, 151, 3, 67, "Section",ExpressionUUID->"75373d53-28bc-4960-b9d2-35d7c1300360"],
Cell[CellGroupData[{
Cell[25093, 632, 242, 4, 30, "Input",ExpressionUUID->"af0bda83-2bcb-4214-acee-c677e18b9d9e"],
Cell[25338, 638, 174, 2, 34, "Output",ExpressionUUID->"21e322b0-e308-47a1-a656-69c0fe244d35"]
}, Open  ]],
Cell[25527, 643, 715, 12, 30, "Input",ExpressionUUID->"e185f23b-d9a8-4f8b-b2b5-edd1ca6246b1"],
Cell[CellGroupData[{
Cell[26267, 659, 251, 4, 30, "Input",ExpressionUUID->"1b17a20e-645d-4c6a-8ed3-0a6636981607"],
Cell[26521, 665, 610, 15, 53, "Output",ExpressionUUID->"b776bc4c-f0fd-4e96-8c8f-71d1d4413786"]
}, Open  ]],
Cell[27146, 683, 1326, 33, 94, "Input",ExpressionUUID->"2ba1e440-f36e-4114-b688-962e7a0aab29"],
Cell[CellGroupData[{
Cell[28497, 720, 483, 11, 52, "Input",ExpressionUUID->"c7c49f9d-0d39-44e6-8bdf-e50287f00b9e"],
Cell[28983, 733, 237, 3, 34, "Output",ExpressionUUID->"b60113df-8e3d-4fc9-8774-64cb1ed3217e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29257, 741, 489, 12, 73, "Input",ExpressionUUID->"eda270af-bd51-4f3a-be31-70b3c364ea19"],
Cell[29749, 755, 673, 14, 42, "Message",ExpressionUUID->"9e282bdb-e72e-4443-af38-e15108a8144b"],
Cell[30425, 771, 686, 14, 42, "Message",ExpressionUUID->"0270f206-4c12-4d8d-a10d-b28169fd3fda"],
Cell[31114, 787, 647, 13, 42, "Message",ExpressionUUID->"4dccfcd9-ad2d-41e7-b4a4-27d76fc28709"],
Cell[31764, 802, 646, 13, 42, "Message",ExpressionUUID->"4268e7b8-37c0-42a9-bcda-bee0e5c02770"],
Cell[32413, 817, 647, 13, 42, "Message",ExpressionUUID->"fbeb653f-3151-4b1c-9829-e224f33f2d68"]
}, Open  ]],
Cell[33075, 833, 476, 11, 30, "Input",ExpressionUUID->"04e963b1-e54a-474a-811f-9bb247a4f84c"],
Cell[CellGroupData[{
Cell[33576, 848, 183, 2, 30, "Input",ExpressionUUID->"bc4a5695-de9d-472d-8db3-616eed7b496d"],
Cell[33762, 852, 72606, 1469, 585, "Output",ExpressionUUID->"d2363823-f3b1-4733-9e7d-55cf537fc7f9"]
}, Open  ]],
Cell[106383, 2324, 443, 10, 30, "Input",ExpressionUUID->"5a783490-04a0-4c2a-82c4-a88feaf86e84"],
Cell[CellGroupData[{
Cell[106851, 2338, 116, 1, 30, "Input",ExpressionUUID->"4caa57d2-7341-4ce5-921c-b426bd0918df"],
Cell[106970, 2341, 72551, 1531, 603, "Output",ExpressionUUID->"26d6b02e-3d3e-4bbb-8891-0936939d4484"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179558, 3877, 438, 10, 52, "Input",ExpressionUUID->"9d4765ef-87d2-4cb2-91f1-e7705cd3adb3"],
Cell[179999, 3889, 239, 3, 34, "Output",ExpressionUUID->"bc2daffc-fb5f-4fdc-8267-1b5ea939818a"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

